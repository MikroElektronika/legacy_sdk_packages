
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<head>

<title>SPI Lcd Library</title>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="Copyright" content="mikroElektronika 2005.">
<meta name="Author" content="Marko Jovanovic. mailto:office@mikroe.com">

<link rel="stylesheet" type="text/css" href="css/help_c_AVR.css">

<script defer type="text/javascript" src="css/pngfix.js"></script>


	






<link rel="stylesheet" type="text/css" href="css/print.css" media="print">


<style type="text/css">
#top {
  background:transparent url(template/c_avr.png); 
}

.title{
	PADDING-RIGHT: 2px; 
	PADDING-LEFT: 70px; 
	FONT-WEIGHT: bold; 
	FONT-SIZE: 14px; 
	PADDING-BOTTOM: 3px; 
	PADDING-TOP: 0px; 
	FONT-FAMILY: Verdana;
  color:white;
}

.navigation{
  PADDING-TOP: -5px;
	PADDING-RIGHT: 2px; 
	PADDING-LEFT: 63px; 
	FONT-SIZE: 11px; 
	FONT-FAMILY: Verdana;
  color:white;
}

.navigation a:link {text-decoration: none; color: white;}
.navigation a:visited {text-decoration: none; color: white;}
.navigation a:active {text-decoration: none; color: white;}
.navigation a:hover {text-decoration: none; color: white; background:black;}

.nav_bar {
}

#top td p,td pre {
	margin:0 0 0 0;
}
</style>

<style type="text/css" media="screen">
#main{
	border-top: 1px solid #000000;
  padding-left: 15px;
  padding-right: 15px;
	position: absolute;
	top: 59px;
	right: 0px;
	bottom: 0px;
	left: 0px;

	width: expression(document.body.offsetWidth - 3);
	height: expression(document.body.offsetHeight -  65);
	overflow: auto;
}
</style>

</head>


<body>

<div id="top">
<table height="60" width="100%">
  <tbody>
	  <tr>
		  <td>
			  <pre class="nav_bar"><div class="title">SPI Lcd Library</div><div class="navigation">&nbsp;&nbsp;<A href="mikroc_PRO_libraries.htm">mikroC PRO for AVR Libraries</A> &gt; <A href="mikroC_PRO_hardware_libraries.htm">Hardware Libraries</A> &gt; </div></pre>
			</td>
		  <td style="WIDTH: 120px" align="right">
			  <pre class="nav_bar"><A href="spi_graphic_lcd_library.htm" title="Previous"><img src="template\btn_prev_n.png" border="0"></a>&nbsp;<A title="Top of the Page" href="#top_of_page" alt="Top of the Page"><IMG src="template/btn_up_n.png" border=0 ></a>&nbsp;<A href="spi_lcd8_library.htm" title="Next"><img src="template\btn_next_n.png" border="0"></a></pre>
			</td>
		</tr>
	</tbody>
</table>
</div>

	





  <div id="main">


    <a name="top_of_page"><h2><acronym title="Serial Peripheral Interface">SPI</acronym> <acronym title="Liquid Crystal Display">Lcd</acronym> Library</h2></a>

    <p>The mikroC PRO for AVR provides a library for communication with <acronym title="Liquid Crystal Display">Lcd</acronym> (with HD44780 compliant controllers) in 4-bit mode via <acronym title="Serial Peripheral Interface">SPI</acronym> interface.</p>
    
    <div style="border: 1.00pt solid #cccccc; padding: 5.00pt; background: #f5f2ec">
	    <img src="img/note.gif" align="absmiddle"><b>&nbsp;&nbsp;Important :</b> 
    <ul>
    	<li>The library uses the <acronym title="Serial Peripheral Interface">SPI</acronym> module for communication. The user must initialize the <acronym title="Serial Peripheral Interface">SPI</acronym> module before using the <acronym title="Serial Peripheral Interface">SPI</acronym> <acronym title="Liquid Crystal Display">Lcd</acronym> Library.</li>
    	<li>This Library is designed to work with the mikroElektronika's Serial Lcd Adapter Board pinout. See schematic at the bottom of this page for details.</li>
    </ul>
    </div>   

    <p></p>
    <h3>Library Dependency Tree</h3>
    <p></p>
    <img alt="SPI Lcd Library Dependency Tree" src="img/dependencies/spilcd_dependency.gif">  
    <p></p>

    <h3>External dependencies of <acronym title="Serial Peripheral Interface">SPI</acronym> <acronym title="Liquid Crystal Display">Lcd</acronym> Library</h3>
    <p>The implementation of <acronym title="Serial Peripheral Interface">SPI</acronym> <acronym title="Liquid Crystal Display">Lcd</acronym> Library routines is 
    	 based on Port Expander Library routines.</p>
    <p>External dependencies are the same as <a href="port_expander_library.htm">Port Expander Library external dependencies</a>.</p>

    <!-- -->

    <h3>Library Routines</h3>

    <ul>
      <li><a href="#spi_lcd_config">SPI_Lcd_Config</a></li>
      <li><a href="#spi_lcd_out">SPI_Lcd_Out</a></li>
      <li><a href="#spi_lcd_out_cp">SPI_Lcd_Out_Cp</a></li>
      <li><a href="#spi_lcd_chr">SPI_Lcd_Chr</a></li>
      <li><a href="#spi_lcd_chr_cp">SPI_Lcd_Chr_Cp</a></li>
      <li><a href="#spi_lcd_cmd">SPI_Lcd_Cmd</a></li>
    </ul>


    <!-- -->


    <h3 id="spi_lcd_config">SPI_Lcd_Config</h3>


    <!-- tabela: SPI_Lcd_Config -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> SPI_Lcd_Config(<b>char</b> DeviceAddress);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Initializes the Lcd module via <acronym title="Serial Peripheral Interface">SPI</acronym> interface.</p>
            <p>Parameters :
            	<ul>
            		<li><code>DeviceAddress:</code> SPI expander hardware address, see schematic at the bottom of this page</li>
              </ul>
            </p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
          	Global variables :
          	<ul>
          	  <li><code>SPExpanderCS</code>: Chip Select line
              <li><code>SPExpanderRST</code>: Reset line 
              <li><code>SPExpanderCS_Direction</code>: Direction of the Chip Select pin
              <li><code>SPExpanderRST_Direction</code>: Direction of the Reset pin	
            </ul>
            must be defined before using this function.
          	<p><br><acronym title="Serial Peripheral Interface">SPI</acronym> module needs to be initialized.
          		 See <a href="spi_library.htm#spi1_init">SPI1_Init</a> and <a href="spi_library.htm#spi1_init_advanced">SPI1_Init_Advanced</a> routines.
            </p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// Port Expander module connections</i>
<b>sbit</b>  SPExpanderRST <b>at</b> PORTB0_bit;
<b>sbit</b>  SPExpanderCS  <b>at</b> PORTB1_bit;
<b>sbit</b>  SPExpanderRST_Direction <b>at</b> DDB0_bit;
<b>sbit</b>  SPExpanderCS_Direction  <b>at</b> DDB1_bit;
<i>// End Port Expander module connections</i>

<b>void</b> main() {

<i>// If Port Expander Library uses SPI1 module</i>
SPI1_Init();                           <i>// Initialize SPI module used with PortExpander</i>
SPI_Lcd_Config(0);                     <i>// initialize Lcd over SPI interface</i>
</pre>


          </td>
        </tr>

      </tbody>

    </table>

    <!-- kraj tabele -->    

    <!-- -->


    <h3 id="spi_lcd_out">SPI_Lcd_Out</h3>


    <!-- tabela: SPI_Lcd_Out -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> SPI_Lcd_Out(<b>char</b> row, <b>char</b> column, <b>char</b> *text);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
          	<p>Prints text on the Lcd starting from specified position. Both string variables and literals can be passed as a text.</p>
            <p>Parameters :
            	<ul>
              	<li><code>row:</code> starting position row number</li>
              	<li><code>column:</code> starting position column number</li>
              	<li><code>text:</code> text to be written</li>
              </ul>
            </p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
          	<p>Lcd needs to be initialized for <acronym title="Serial Peripheral Interface">SPI</acronym> communication, 
            	see <a href="#spi_lcd_config">SPI_Lcd_Config</a>  routines.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre><i>// Write text &#34;Hello!&#34; on Lcd starting from row 1, column 3:</i>
SPI_Lcd_Out(1, 3, &#34;Hello!&#34;);</pre>


          </td>
        </tr>

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="spi_lcd_out_cp">SPI_Lcd_Out_Cp</h3>


    <!-- tabela: SPI_Lcd_Out_Cp -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> SPI_Lcd_Out_CP(<b>char</b> *text);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Prints text on the Lcd at current cursor position. Both string variables and literals can be passed as a text.</p>
            <p>Parameters :
            	<ul>
              	<li><code>text:</code> text to be written</li>
              </ul>
            </p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Lcd needs to be initialized for <acronym title="Serial Peripheral Interface">SPI</acronym> communication, 
            	see <a href="#spi_lcd_config">SPI_Lcd_Config</a> routines.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre><i>// Write text &#34;Here!&#34; at current cursor position:</i>
SPI_Lcd_Out_CP(&#34;Here!&#34;);</pre>

          </td>
        </tr>

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="spi_lcd_chr">SPI_Lcd_Chr</h3>


    <!-- tabela: SPI_Lcd_Chr -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> SPI_Lcd_Chr(<b>char</b> Row, <b>char</b> Column, <b>char</b> Out_Char);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
          	<p>Prints character on Lcd at specified position. Both variables and literals can be passed as character.</p>
            <p>Parameters :
            	<ul>
              	<li><code>Row:</code> writing position row number</li>
              	<li><code>Column:</code> writing position column number</li>
              	<li><code>Out_Char:</code> character to be written</li>
              </ul>
            </p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Lcd needs to be initialized for <acronym title="Serial Peripheral Interface">SPI</acronym> communication, 
            	see <a href="#spi_lcd_config">SPI_Lcd_Config</a> routines.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre><i>// Write character "i" at row 2, column 3:</i>
SPI_Lcd_Chr(2, 3, 'i');</pre>

          </td>
        </tr>

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="spi_lcd_chr_cp">SPI_Lcd_Chr_Cp</h3>


    <!-- tabela: SPI_Lcd_Chr_CP -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> SPI_Lcd_Chr_CP(<b>char</b> Out_Char);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Prints character on Lcd at current cursor position. Both variables and literals can be passed as character.</p>
            <p>Parameters :
            	<ul>
              	<li><code>Out_Char:</code> character to be written</li>
              </ul>
            </p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Lcd needs to be initialized for <acronym title="Serial Peripheral Interface">SPI</acronym> communication, 
            	see <a href="#spi_lcd_config">SPI_Lcd_Config</a> routines.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre><i>// Write character "e" at current cursor position:</i>
SPI_Lcd_Chr_Cp('e');</pre>


          </td>
        </tr>

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="spi_lcd_cmd">SPI_Lcd_Cmd</h3>


    <!-- tabela: SPI_Lcd_Cmd -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> SPI_Lcd_Cmd(<b>char</b> out_char);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Sends command to Lcd.</p>
            <p>Parameters :
            	<ul>
              	<li><code>out_char:</code> command to be sent</li>
              </ul>
            </p>
            <div style="border: 1.00pt solid #cccccc; padding: 5.00pt; background: #f5f2ec">
              <img src="img/note.gif" align="absmiddle"><b>&nbsp;&nbsp;Note :</b>
              Predefined constants can be passed to the function, see <a href="#lcd_commands">Available SPI Lcd Commands</a>.
            </div>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Lcd needs to be initialized for <acronym title="Serial Peripheral Interface">SPI</acronym> communication, 
            	see <a href="#spi_lcd_config">SPI_Lcd_Config</a> routines.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre><i>// Clear Lcd display:</i>
SPI_Lcd_Cmd(_LCD_CLEAR);</pre>


          </td>
        </tr>

      </tbody>

    </table>

    <!-- kraj tabele -->


    <h4 id="spi_lcd_commands">Available SPI Lcd Commands</h4>

    <!-- tabela: SPI Lcd Commands -->

    <table class="small">

      <!--
      <caption></caption>
      -->

      <thead>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">SPI Lcd Command</th>
          <th valign="top">Purpose</th>
        </tr>

      </thead>


      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td class="code" valign="top">_LCD_FIRST_ROW</td>
          <td valign="top">Move cursor to the 1st row</td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td class="code" valign="top">_LCD_SECOND_ROW</td>
          <td valign="top">Move cursor to the 2nd row</td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td class="code" valign="top">_LCD_THIRD_ROW</td>
          <td valign="top">Move cursor to the 3rd row</td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td class="code" valign="top">_LCD_FOURTH_ROW</td>
          <td valign="top">Move cursor to the 4th row</td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td class="code" valign="top">_LCD_CLEAR</td>
          <td valign="top">Clear display</td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td class="code" valign="top">_LCD_RETURN_HOME</td>
          <td valign="top">Return cursor to home position, returns a shifted display to its original position. Display data RAM is unaffected.</td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td class="code" valign="top">_LCD_CURSOR_OFF</td>
          <td valign="top">Turn off cursor</td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td class="code" valign="top">_LCD_UNDERLINE_ON</td>
          <td valign="top">Underline cursor on</td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td class="code" valign="top">_LCD_BLINK_CURSOR_ON</td>
          <td valign="top">Blink cursor on</td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td class="code" valign="top">_LCD_MOVE_CURSOR_LEFT</td>
          <td valign="top">Move cursor left without changing display data RAM</td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td class="code" valign="top">_LCD_MOVE_CURSOR_RIGHT</td>
          <td valign="top">Move cursor right without changing display data RAM</td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td class="code" valign="top">_LCD_TURN_ON</td>
          <td valign="top">Turn Lcd display on</td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td class="code" valign="top">_LCD_TURN_OFF</td>
          <td valign="top">Turn Lcd display off</td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td class="code" valign="top">_LCD_SHIFT_LEFT</td>
          <td valign="top">Shift display left without changing display data RAM</td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td class="code" valign="top">_LCD_SHIFT_RIGHT</td>
          <td valign="top">Shift display right without changing display data RAM</td>
        </tr>

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3>Library Example</h3>

    <p>This example demonstrates how to communicate Lcd via the SPI module, using serial to parallel convertor MCP23S17.</p>

<div class="example">
  <textarea style="display:none;"></textarea> 
  <span class="copytoclipboard"><a onclick="copyToClipboard(this); return false;" href="#"><img align="absmiddle" alt="Copy Code To Clipboard" src="img/copy_to_clipboard.png" border="0" /><span class="clipboard_text">Copy Code To Clipboard</span></a></span>
</div>

<pre class="program">
<b>char</b> *text = &#34;mikroElektronika&#34;;

<i>// Port Expander module connections</i>
<b>sbit</b>  SPExpanderRST <b>at</b> PORTB0_bit;
<b>sbit</b>  SPExpanderCS  <b>at</b> PORTB1_bit;
<b>sbit</b>  SPExpanderRST_Direction <b>at</b> DDB0_bit;
<b>sbit</b>  SPExpanderCS_Direction  <b>at</b> DDB1_bit;
<i>// End Port Expander module connections</i>

<b>void</b> main() {

  <i>// If Port Expander Library uses SPI1 module</i>
  SPI1_Init();                           <i>// Initialize SPI module used with PortExpander</i>

  <i>// // If Port Expander Library uses SPI2 module</i>
  <i>// SPI2_Init();                        // Initialize SPI module used with PortExpander</i>

  SPI_Lcd_Config(0);                     <i>// Initialize Lcd over SPI interface</i>
  SPI_Lcd_Cmd(_LCD_CLEAR);               <i>// Clear display</i>
  SPI_Lcd_Cmd(_LCD_CURSOR_OFF);          <i>// Turn cursor off</i>
  SPI_Lcd_Out(1,6, &#34;mikroE&#34;);            <i>// Print text to Lcd, 1st row, 6th column</i>
  SPI_Lcd_Chr_CP('!');                   <i>// Append '!'</i>
  SPI_Lcd_Out(2,1, text);                <i>// Print text to Lcd, 2nd row, 1st column</i>

  <i>// SPI_Lcd_Out(3,1,&#34;mikroE&#34;);          // For Lcd with more than two rows</i>
  <i>// SPI_Lcd_Out(4,15,&#34;mikroE&#34;);         // For Lcd with more than two rows</i>
}</pre>

    <h3>HW Connection</h3>

    <p class="center"><img alt="SPI Lcd HW connection" src="img/schemes/scheme_spi_lcd.gif"></p>
    <p class="center small">SPI Lcd HW connection</p>


      <div class="feedback">
      Copyright (c) 2002-2017 mikroElektronika. All rights reserved.
      <br>What do you think about this topic ?  <a href="http://www.mikroe.com/en/support/">Send us feedback!</a>
    </div>

    <div class="libstock">Want more examples and libraries?&nbsp;
     <br>Find them on
     <a href="http://www.libstock.com/" target="_blank"><img alt="LibStock - A place for the code" src="img/libstock.gif" border="0" align="absmiddle"></a>
    </div>

  </div><!--/main-->





</body>

</html>
