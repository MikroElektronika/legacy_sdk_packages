
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<head>

<title>ECAN Library</title>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="Copyright" content="mikroElektronika 2005.">
<meta name="Author" content="Marko Jovanovic. mailto:office@mikroe.com">

<link rel="stylesheet" type="text/css" href="css/help_c_dspic.css">

<script defer type="text/javascript" src="css/pngfix.js"></script>


	






<style type="text/css">
#top {
  background:transparent url(template/background_C_dsPIC.png); 
}

.title{
	PADDING-RIGHT: 2px; 
	PADDING-LEFT: 70px; 
	FONT-WEIGHT: bold; 
	FONT-SIZE: 14px; 
	PADDING-BOTTOM: 3px; 
	PADDING-TOP: 0px; 
	FONT-FAMILY: Verdana;
  color:white;
}

.navigation{
                     PADDING-TOP: -5px;
	PADDING-RIGHT: 2px; 
	PADDING-LEFT: 63px; 
	FONT-SIZE: 11px; 
	FONT-FAMILY: Verdana;
                     color:white;
}

.navigation a:link {text-decoration: none; color: white;}
.navigation a:visited {text-decoration: none; color: white;}
.navigation a:active {text-decoration: none; color: white;}
.navigation a:hover {text-decoration: none; color: white; background:black;}

.nav_bar {
}

#top td p,td pre {
	margin:0 0 0 0;
}
</style>

<style type="text/css" media="screen">
#main{
	border-top: 1px solid #000000;
  padding-left: 15px;
  padding-right: 15px;
	position: absolute;
	top: 59px;
	right: 0px;
	bottom: 0px;
	left: 0px;

	width: expression(document.body.offsetWidth - 3);
	height: expression(document.body.offsetHeight -  65);
	overflow: auto;
}
</style>

</head>


<body>

<div id="top">
<table height="60" width="100%">
  <tbody>
	  <tr>
		  <td>
			  <pre class="nav_bar"><div class="title">ECAN Library</div><div class="navigation">&nbsp;&nbsp;<A href="mikroc_libraries.htm">mikroC PRO for dsPIC30/33 and PIC24 Libraries</A> &gt; <A href="mikroC_hardware_libraries.htm">Hardware Libraries</A> &gt; </div></pre>
			</td>
		  <td style="WIDTH: 120px" align="right">
			  <pre class="nav_bar"><A href="compact_flash_library.htm" title="Previous"><img src="template\btn_prev_n.png" border="0"></a>&nbsp;<A title="Top of the Page" href="#top_of_page" alt="Top of the Page"><IMG src="template/btn_up_n.png" border=0 ></a>&nbsp;<A href="eeprom_library.htm" title="Next"><img src="template\btn_next_n.png" border="0"></a></pre>
			</td>
		</tr>
	</tbody>
</table>
</div>

	


  <div id="main">


    <a name="top_of_page"><h2><acronym title="Enhanced Controller Area Network">ECAN</acronym> Library</h2></a>


    <p>The mikroC PRO for dsPIC30/33 and PIC24 provides a library (driver) for working with the dsPIC33FJ and pic24HJ <acronym title="Enhanced Controller Area Network">ECAN</acronym> module.</p>
    <p><acronym title="Enhanced Controller Area Network">ECAN</acronym> is a very robust protocol that has error detection and signalling, selfâ€“checking and fault confinement. Faulty <acronym title="Enhanced Controller Area Network">ECAN</acronym> data and remote frames are re-transmitted automatically, similar to the Ethernet.</p>
    <p> Data transfer rates depend on distance. For example, 1 Mbit/s can be achieved at network lengths below 40m while 250 Kbit/s can be achieved at network lengths below 250m. The greater distance the lower maximum bitrate that can be achieved . The lowest bitrate defined by the standard is 200Kbit/s. Cables used are shielded twisted pairs.

    <p><acronym title="Enhanced Controller Area Network">ECAN</acronym> supports two message formats:</p>
    <ul>
      <li>Standard format, with 11 identifier bits, and</li>
      <li>Extended format, with 29 identifier bits</li>
    </ul>

    <p><acronym title="Enhanced Controller Area Network">ECAN</acronym> message format and <acronym title="Direct Memory Access">DMA</acronym> RAM buffer definiton can be found in the <code>ECan_Defs.h</code> header file located in the ECAN project folder. Read this file carefully and make appropriate adjustments for mcu in use. Also, if a new project is to be created this file has to be copied, adjusted and included into the project via include pragma directive with corresponding Search Path updating.</p>

    <div style="border: 1.00pt solid #cccccc; padding: 5.00pt; background: #f5f2ec">	  
      <img src="img/note.gif" align="absmiddle"><b>&nbsp;&nbsp;Important :</b>    
      <ul>
        <li><acronym title="Enhanced Controller Area Network">ECAN</acronym> buffers are located in <acronym title="Direct Memory Access">DMA</acronym> RAM, so two <acronym title="Direct Memory Access">DMA</acronym> channels are used for message transfer, one for each direction (ECAN->DMA RAM, DMA RAM->ECAN). See the <a href="#ecan1dmachannelinit">ECANxDmaChannelInit</a> routine.</li>   
	      <li>Consult <acronym title="Controller Area Network">CAN</acronym> standard about <acronym title="Controller Area Network">CAN</acronym> bus termination resistance.</li>    
        <li><acronym title="Enhanced Controller Area Network">CAN</acronym> library routines require you to specify the module you want to use. To select the desired <acronym title="Enhanced Controller Area Network">CAN</acronym> module, simply change the letter <b>x</b> in the routine prototype for a number from <b>1</b> to <b>2</b>.</li>
        <li>Number of <acronym title="Enhanced Controller Area Network">CAN</acronym> modules per MCU differs from chip to chip. Please, read the appropriate datasheet before utilizing this library.</li>
      </ul>
    </div> 
     
    <!-- -->

    <p></p>
    <h3>Library Routines</h3>

    <ul>
      <li><a href="#ecan1dmachannelinit">ECANxDmaChannelInit</a></li>
      <li><a href="#ecan1setoperationmode">ECANxSetOperationMode</a></li>
      <li><a href="#ecan1getoperationmode">ECANxGetOperationMode</a></li>
      <li><a href="#ecan1initialize">ECANxInitialize</a></li>
			<li><a href="#ecan1selecttxbuffers">ECANxSelectTxBuffers</a></li>
			<li><a href="#ecan1filterdisable">ECANxFilterDisable</a></li>
			<li><a href="#ecan1filterenable">ECANxFilterEnable</a></li>
			<li><a href="#ecan1setbuffersize">ECANxSetBufferSize</a></li>
			<li><a href="#ecan1setbaudrate">ECANxSetBaudRate</a></li>
      <li><a href="#ecan1setmask">ECANxSetMask</a></li>
      <li><a href="#ecan1setfilter">ECANxSetFilter</a></li>
      <li><a href="#ecan1read">ECANxRead</a></li>
      <li><a href="#ecan1write">ECANxWrite</a></li>
    </ul>
    

		<!-- -->


    <h3 id="ecan1dmachannelinit">ECANxDmaChannelInit</h3>


    <!-- tabela: ECANxDmaChannelInit -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>unsigned</b> ECANxDmaChannelInit(<b>unsigned</b> DmaChannel, <b>unsigned</b> ChannelDir, <b>void</b> *DmaRamBuffAdd);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>The function preforms initialization of the <acronym title="Direct Memory Access">DMA</acronym> module for <acronym title="Enhanced Controller Area Network">ECAN</acronym>.</p>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <ul>
              <li><code>DmaChannel:</code> <acronym title="Direct Memory Access">DMA</acronym> Channel number. Valid values: <code>0..7</code>.</li>
							<li><code>ChannelDir:</code> transfer direction. Valid values: <code>1</code> (<acronym title="Direct Memory Access">DMA</acronym> RAM to peripheral) and <code>0</code> (peripheral to <acronym title="Direct Memory Access">DMA</acronym> RAM).</li>
							<li><code>DmaRamBuffAdd:</code> <acronym title="Direct Memory Access">DMA</acronym> RAM buffer address. <acronym title="Direct Memory Access">DMA</acronym> RAM location is MCU dependent, refer to datasheet for valid address range.</li>
            </ul>
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>
              <ul>
              	<li><code>0</code> - if DMA channel parameter is valid</li>
              	<li><code>0x0001</code> - if DMA channel is already in use (busy)</li> 
								<li><code>0xFFFF</code> - if DMA channel parameter is invalid </li>
              </ul>
						</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> routines are supported only by MCUs with the ECAN module.</p>
						<p>Microcontroller must be connected to <acronym title="Enhanced Controller Area Network">ECAN</acronym> transceiver which is connected to the <acronym title="Enhanced Controller Area Network">ECAN</acronym> bus.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// channel 0 will transfer 8 words from DMA RAM at 0x4000 to ECAN1</i>
ECAN1DmaChannelInit(0, 1, 0x4000);
</pre>

          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
          <ul>
        	  <li><acronym title="Enhanced Controller Area Network">ECAN</acronym> library routine require you to specify the module you want to use. To select the desired <acronym title="Enhanced Controller Area Network">ECAN</acronym> module, simply change the letter <b>x</b> in the routine prototype for a number from <b>1</b> to <b>2</b>.</li>
    	      <li>Number of <acronym title="Enhanced Controller Area Network">ECAN</acronym> modules per MCU differs from chip to chip. Please, read the appropriate datasheet before utilizing this library.</li>
          </ul>
          </td>
        </tr>    

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="ecan1setoperationmode">ECANxSetOperationMode</h3>


    <!-- tabela: ECANxSetOperationMode -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> ECANxSetOperationMode(<b>unsigned int</b> mode, <b>unsigned int</b> WAIT);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Sets the <acronym title="Enhanced Controller Area Network">ECAN</acronym> module to requested mode.</p>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
             	<li><code>mode:</code> ECAN module operation mode. Valid values: <code>ECAN_OP_MODE</code> constants. See <a href="#ecan_op_mode">ECAN_OP_MODE</a> constants.</li>
             	<li><code>WAIT:</code> ECAN mode switching verification request. If <code>WAIT == 0</code>, the call is non-blocking. The function does not verify if the ECAN module is switched to requested mode or not. Caller must use <a href="#ecan1getoperationmode">ECANxGetOperationMode</a> to verify correct operation mode before performing mode specific operation. If <code>WAIT != 0</code>, the call is blocking &#8211; the function won&#8217;t &#8220;return&#8221; until the requested mode is set and no additional verification is necessary.</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
    
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> routines are supported only by MCUs with the ECAN module.</p>
						<p>Microcontroller must be connected to <acronym title="Enhanced Controller Area Network">ECAN</acronym> transceiver which is connected to the <acronym title="Enhanced Controller Area Network">ECAN</acronym> bus.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// set the ECAN1 module into configuration mode (wait inside ECAN1SetOperationMode until this mode is set)</i>
ECAN1SetOperationMode(_ECAN_MODE_CONFIG, 0xFF);</pre>

          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
          <ul>
        	  <li><acronym title="Enhanced Controller Area Network">ECAN</acronym> library routine require you to specify the module you want to use. To select the desired <acronym title="Enhanced Controller Area Network">ECAN</acronym> module, simply change the letter <b>x</b> in the routine prototype for a number from <b>1</b> to <b>2</b>.</li>
    	      <li>Number of <acronym title="Enhanced Controller Area Network">ECAN</acronym> modules per MCU differs from chip to chip. Please, read the appropriate datasheet before utilizing this library.</li>
          </ul>
          </td>
        </tr>    

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="ecan1getoperationmode">ECANxGetOperationMode</h3>


    <!-- tabela: ECANxGetOperationMode -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>unsigned int</b> ECANxGetOperationMode();</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>The function returns current operation mode of the <acronym title="Enhanced Controller Area Network">ECAN</acronym> module. See <a href="#ecan_op_mode">ECAN_OP_MODE</a> constants or device datasheet for operation mode codes.</p>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>
   
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Current operation mode.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> routines are supported only by MCUs with the ECAN module.</p> 
						<p>Microcontroller must be connected to <acronym title="Enhanced Controller Area Network">ECAN</acronym> transceiver which is connected to the <acronym title="Enhanced Controller Area Network">ECAN</acronym> bus.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// check whether the ECAN1 module is in Normal mode and if it is do something.</i>
<b>if</b> (ECAN1GetOperationMode() == _ECAN_MODE_NORMAL)
{
  ...
}</pre>

          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
          <ul>
        	  <li><acronym title="Enhanced Controller Area Network">ECAN</acronym> library routine require you to specify the module you want to use. To select the desired <acronym title="Enhanced Controller Area Network">ECAN</acronym> module, simply change the letter <b>x</b> in the routine prototype for a number from <b>1</b> to <b>2</b>.</li>
    	      <li>Number of <acronym title="Enhanced Controller Area Network">ECAN</acronym> modules per MCU differs from chip to chip. Please, read the appropriate datasheet before utilizing this library.</li>
          </ul>
          </td>
        </tr>    

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="ecan1initialize">ECANxInitialize</h3>


    <!-- tabela: ECANxInitialize -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> ECANxInitialize(<b>unsigned int</b> SJW, <b>unsigned int</b> BRP, <b>unsigned int</b> PHSEG1, <b>unsigned int</b> PHSEG2, <b>unsigned int</b> PROPSEG, <b>unsigned int</b> ECAN_CONFIG_FLAGS);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Initializes the <acronym title="Enhanced Controller Area Network">ECAN</acronym> module.</p>
            <p>The internal ECAN module is set to:
              <ul>
              	<li> Disable ECAN capture</li>
              	<li> Continue ECAN operation in Idle mode</li>
              	<li> Abort all pending transmissions</li>
								<li> Clear all transmit control registers</li>
                <li> Fcan clock : Fcy (Fosc/2)</li>
                <li> Baud rate is set according to given parameters</li>
                <li> ECAN mode is set to Normal</li>
                <li> Filter and mask registers remain unchanged</li>                
              </ul>
            </p>
            <p><code>SAM</code>, <code>SEG2PHTS</code>, <code>WAKFIL</code> and <code>DBEN</code> bits are set according to the <code>ECAN_CONFIG_FLAGS</code> value.</p>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <ul>
              <li><code>SJW</code> as defined in MCU's datasheet (ECAN Module)</li>
              <li><code>BRP</code> as defined in MCU's datasheet (ECAN Module)</li>
              <li><code>PHSEG1</code> as defined in MCU's datasheet (ECAN Module)</li>
              <li><code>PHSEG2</code> as defined in MCU's datasheet (ECAN Module)</li>
              <li><code>PROPSEG</code> as defined in MCU's datasheet (ECAN Module)</li>
              <li><code>ECAN_CONFIG_FLAGS</code> ECAN module configuration flags. Each bit corresponds to the appropriate ECAN module parameter. Should be formed out of predefined ECAN flag constants. See <a href="#ecan_config_flag">ECAN_CONFIG_FLAGS</a> constants.</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> routines are supported only by MCUs with the ECAN module.</p>
						<p>Microcontroller must be connected to <acronym title="Enhanced Controller Area Network">ECAN</acronym> transceiver which is connected to the <acronym title="Enhanced Controller Area Network">ECAN</acronym> bus.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// initialize the ECAN1 module with appropriate baud rate and message acceptance flags along with the sampling rules</i>
<b>unsigned int</b> ecan_config_flags;
...  
ecan_config_flags = _ECAN_CONFIG_SAMPLE_THRICE &#38;     <i>// Form value to be used</i>
                    _ECAN_CONFIG_PHSEG2_PRG_ON &#38;     <i>//  with ECANInitialize</i>
                    _ECAN_CONFIG_XTD_MSG &#38;
                    _ECAN_CONFIG_MATCH_MSG_TYPE &#38;
                    _ECAN_CONFIG_LINE_FILTER_OFF; 

ECAN1Initialize(1, 3, 3, 3, 1, ecan_config_flags);  <i>// initialize the ECAN1 module</i>
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
          <ul>
            <li><acronym title="Enhanced Controller Area Network">ECAN</acronym> mode NORMAL will be set on exit.</li>
        	  <li><acronym title="Enhanced Controller Area Network">ECAN</acronym> library routine require you to specify the module you want to use. To select the desired <acronym title="Enhanced Controller Area Network">ECAN</acronym> module, simply change the letter <b>x</b> in the routine prototype for a number from <b>1</b> to <b>2</b>.</li>
    	      <li>Number of <acronym title="Enhanced Controller Area Network">ECAN</acronym> modules per MCU differs from chip to chip. Please, read the appropriate datasheet before utilizing this library.</li>
          </ul>
          </td>
        </tr>   

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="ecan1selecttxbuffers">ECANxSelectTxBuffers</h3>


    <!-- tabela: ECANxSelectTxBuffers -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>unsigned</b> ECANxSelectTxBuffers(<b>unsigned</b> txselect);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>The function designates the ECAN module's transmit buffers.</p>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <ul>
              <li><code>txselect:</code> transmit buffer select. By setting bits in the txselect lower byte corresponding buffers are enabled for transmition. The <acronym title="Enhanced Controller Area Network">ECAN</acronym> module supports up to 8 transmit buffers. Also, by clearing bits in the txselect lower byte corresponding buffers are enabled for reception.</li>
            </ul>
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>
              <ul>
              	<li><code>0</code> - if input parameter is valid</li>
              	<li><code>0xFFFF</code> - if input parameter is invalid</li>
              </ul>
						</p>	
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> routines are supported only by MCUs with the ECAN module.</p>
						<p>Microcontroller must be connected to <acronym title="Enhanced Controller Area Network">ECAN</acronym> transceiver which is connected to the <acronym title="Enhanced Controller Area Network">ECAN</acronym> bus.</p>
						<p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> module must be initialized. See the <a href="#ecan1initialize">ECANxInitialize</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// Buffers 0 and 2 are enabled for transmition:</i>
ECAN1SelectTxBuffers(0x0005);
</pre>

          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
          <ul>
        	  <li><acronym title="Enhanced Controller Area Network">ECAN</acronym> library routine require you to specify the module you want to use. To select the desired <acronym title="Enhanced Controller Area Network">ECAN</acronym> module, simply change the letter <b>x</b> in the routine prototype for a number from <b>1</b> to <b>2</b>.</li>
    	      <li>Number of <acronym title="Enhanced Controller Area Network">ECAN</acronym> modules per MCU differs from chip to chip. Please, read the appropriate datasheet before utilizing this library.</li>
          </ul>
          </td>
        </tr>    

      </tbody>

    </table>

    <!-- kraj tabele -->
				

    <!-- -->


    <h3 id="ecan1filterdisable">ECANxFilterDisable</h3>


    <!-- tabela: ECANxFilterDisable -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> ECANxFilterDisable(<b>unsigned</b> fltdis);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>The function disables receive filters.</p>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <ul>
              <li><code>fltdis:</code> filter disable selection parameter. Each bit corresponds to appropriate filter. By settung bit the corresponding filter is to be disabled.</li>
            </ul>
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>	
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> routines are supported only by MCUs with the ECAN module.</p>
						<p>Microcontroller must be connected to <acronym title="Enhanced Controller Area Network">ECAN</acronym> transceiver which is connected to the <acronym title="Enhanced Controller Area Network">ECAN</acronym> bus.</p>
						<p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> module must be initialized. See the <a href="#ecan1initialize">ECANxInitialize</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// Filters 0, 4, 8, 12 are to be disabled: </i>
ECAN1FilterDisable(0x1111);
</pre>

          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
          <ul>
        	  <li><acronym title="Enhanced Controller Area Network">ECAN</acronym> library routine require you to specify the module you want to use. To select the desired <acronym title="Enhanced Controller Area Network">ECAN</acronym> module, simply change the letter <b>x</b> in the routine prototype for a number from <b>1</b> to <b>2</b>.</li>
    	      <li>Number of <acronym title="Enhanced Controller Area Network">ECAN</acronym> modules per MCU differs from chip to chip. Please, read the appropriate datasheet before utilizing this library.</li>
          </ul>
          </td>
        </tr>    

      </tbody>

    </table>

    <!-- kraj tabele -->
		

		<!-- -->


    <h3 id="ecan1filterenable">ECANxFilterEnable</h3>


    <!-- tabela: ECANxFilterEnable -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> ECANxFilterEnable(<b>unsigned</b> flten);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>The function enables receive filters.</p>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <ul>
              <li><code>flten:</code> filter enable selection parameter. Each bit corresponds to appropriate filter. By setting bit the corresponding filter will be enabled.</li>
            </ul>
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>
              Nothing.
						</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> routines are supported only by MCUs with the ECAN module.</p>
						<p>Microcontroller must be connected to <acronym title="Enhanced Controller Area Network">ECAN</acronym> transceiver which is connected to the <acronym title="Enhanced Controller Area Network">ECAN</acronym> bus.</p>
						<p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> module must be initialized. See the <a href="#ecan1initialize">ECANxInitialize</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// Filters 0, 4, 8, 12 are to be enabled:</i>
ECAN1FilterEnable(0x1111);
</pre>

          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
          <ul>
        	  <li><acronym title="Enhanced Controller Area Network">ECAN</acronym> library routine require you to specify the module you want to use. To select the desired <acronym title="Enhanced Controller Area Network">ECAN</acronym> module, simply change the letter <b>x</b> in the routine prototype for a number from <b>1</b> to <b>2</b>.</li>
    	      <li>Number of <acronym title="Enhanced Controller Area Network">ECAN</acronym> modules per MCU differs from chip to chip. Please, read the appropriate datasheet before utilizing this library.</li>
          </ul>
          </td>
        </tr>    

      </tbody>

    </table>

    <!-- kraj tabele -->
		
		
		<!-- -->


    <h3 id="ecan1setbuffersize">ECANxSetBufferSize</h3>


    <!-- tabela: ECANxSetBufferSize -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>unsigned</b> ECANxSetBufferSize(<b>unsigned</b> Ecan1BuffSize);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>The function configures the total number of receive and transmit buffers in <acronym title="Direct Memory Access">DMA</acronym> RAM.</p>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <ul>
              <li><code>Ecan1BuffSize:</code> Number of <acronym title="Enhanced Controller Area Network">ECAN</acronym> <acronym title="Direct Memory Access">DMA</acronym> RAM receive and transmit buffers. Valid values: 4, 6, 8, 12, 16, 24, 32. Each buffer is 16 bytes long.</li>
            </ul>
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>
              <ul>
              	<li><code>0</code> - if input parameter is valid</li>
              	<li><code>0xFFFF</code> - if input parameter is invalid</li>
              </ul>
						</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> routines are supported only by MCUs with the ECAN module.</p>
						<p>Microcontroller must be connected to <acronym title="Enhanced Controller Area Network">ECAN</acronym> transceiver which is connected to the <acronym title="Enhanced Controller Area Network">ECAN</acronym> bus.</p>
						<p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> module must be initialized. See the <a href="#ecan1initialize">ECANxInitialize</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// DMA RAM will have 16 rx+tx buffers</i>
ECAN1SetBufferSize(16);
</pre>

          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
						<li>The same value should be used for <acronym title="Direct Memory Access">DMA</acronym> RAM buffer definition in the <code>ECan_Defs.h</code> header file located in the ECAN project folder.</li>
        	  <li><acronym title="Enhanced Controller Area Network">ECAN</acronym> library routine require you to specify the module you want to use. To select the desired <acronym title="Enhanced Controller Area Network">ECAN</acronym> module, simply change the letter <b>x</b> in the routine prototype for a number from <b>1</b> to <b>2</b>.</li>
    	      <li>Number of <acronym title="Enhanced Controller Area Network">ECAN</acronym> modules per MCU differs from chip to chip. Please, read the appropriate datasheet before utilizing this library.</li>
          </ul>
          </td>
        </tr>    

      </tbody>

    </table>

    <!-- kraj tabele -->
		
		
    <!-- -->


    <h3 id="ecan1setbaudrate">ECANxSetBaudRate</h3>


    <!-- tabela: ECANxSetBaudRate -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> ECANxSetBaudRate(<b>unsigned int</b> SJW, <b>unsigned int</b> BRP, <b>unsigned int</b> PHSEG1, <b>unsigned int</b> PHSEG2, <b>unsigned int</b> PROPSEG, <b>unsigned int</b> ECAN_CONFIG_FLAGS);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Sets <acronym title="Enhanced Controller Area Network">ECAN</acronym> module baud rate. Due to complexity of the <acronym title="Enhanced Controller Area Network">ECAN</acronym> protocol, you can not simply force the  bps value. Instead, use this function when <acronym title="Enhanced Controller Area Network">ECAN</acronym> is in Config mode. Refer to datasheet for details.</p>
            <p><code>SAM</code>, <code>SEG2PHTS</code> and <code>WAKFIL</code> bits are set according to the <code>ECAN_CONFIG_FLAGS</code> value.</p>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <ul>
              <li><code>SJW</code> as defined in MCU's datasheet (ECAN Module)</li>
              <li><code>BRP</code> as defined in MCU's datasheet (ECAN Module)</li>
              <li><code>PHSEG1</code> as defined in MCU's datasheet (ECAN Module)</li>
              <li><code>PHSEG2</code> as defined in MCU's datasheet (ECAN Module)</li>
              <li><code>PROPSEG</code> as defined in MCU's datasheet (ECAN Module)</li>
              <li><code>ECAN_CONFIG_FLAGS</code> ECAN module configuration flags. Each bit corresponds to the appropriate ECAN module parameter. Should be formed out of predefined ECAN flag constants. See <a href="#ecan_config_flag">ECAN_CONFIG_FLAGS</a> constants</li>
            </ul>
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> routines are supported only by MCUs with the ECAN module.</p>
						<p>Microcontroller must be connected to <acronym title="Enhanced Controller Area Network">ECAN</acronym> transceiver which is connected to the <acronym title="Enhanced Controller Area Network">ECAN</acronym> bus.</p>
						<p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> module must be in Config mode, otherwise the function will be ignored. See <a href="#ecan1setoperationmode">ECANxSetOperationMode</a>.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// set required baud rate and sampling rules</i>
<b>unsigned int</b> ecan_config_flags;
...  
ECAN1SetOperationMode(_ECAN_MODE_CONFIG,0xFF);              <i>// set CONFIGURATION mode (ECAN1 module mast be in config mode for baud rate settings)</i>

ecan_config_flags = _ECAN_CONFIG_SAMPLE_THRICE &#38;            <i>// Form value to be used</i>
                    _ECAN_CONFIG_PHSEG2_PRG_ON &#38;            <i>//  with ECAN1SetBaudRate</i>
                    _ECAN_CONFIG_XTD_MSG &#38;
                    _ECAN_CONFIG_MATCH_MSG_TYPE &#38;
                    _ECAN_CONFIG_LINE_FILTER_OFF;
									 
ECAN1SetBaudRate(1, 3, 3, 3, 1, ecan_config_flags);        <i>// set ECAN1 module baud rate</i></pre>

          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
          <ul>
        	  <li><acronym title="Enhanced Controller Area Network">ECAN</acronym> library routine require you to specify the module you want to use. To select the desired <acronym title="Enhanced Controller Area Network">ECAN</acronym> module, simply change the letter <b>x</b> in the routine prototype for a number from <b>1</b> to <b>2</b>.</li>
    	      <li>Number of <acronym title="Enhanced Controller Area Network">ECAN</acronym> modules per MCU differs from chip to chip. Please, read the appropriate datasheet before utilizing this library.</li>
          </ul>
          </td>
        </tr>    

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="ecan1setmask">ECANxSetMask</h3>


    <!-- tabela: ECANxSetMask -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> ECANxSetMask(<b>unsigned int</b> ECAN_MASK, <b>long</b> val, <b>unsigned int</b> ECAN_CONFIG_FLAGS);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>The function configures appropriate mask for advanced message filtering.</p>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <ul>
              <li><code>ECAN_MASK:</code> ECAN module mask number. Valid values: <code>ECAN_MASK</code> constants. See <a href="#ecan_mask">ECAN_MASK</a> constants.</li>
              <li><code>val:</code> mask register value. This value is bit-adjusted to appropriate buffer mask registers</li>
              <li><code>ECAN_CONFIG_FLAGS:</code> selects type of messages to filter. Valid values: 
							      <ul>
              	         <li><code>_ECAN_CONFIG_ALL_VALID_MSG</code>,</li>
              	         <li><code>_ECAN_CONFIG_MATCH_MSG_TYPE &#38; _ECAN_CONFIG_STD_MSG</code>,</li>
              	         <li><code>_ECAN_CONFIG_MATCH_MSG_TYPE &#38; _ECAN_CONFIG_XTD_MSG</code>.</li>
              	    </ul>     	
              	    See <a href="#ecan_config_flag">ECAN_CONFIG_FLAGS</a> constants.   
							</li>
            </ul>
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> routines are supported only by MCUs with the ECAN module.</p>
						<p>Microcontroller must be connected to <acronym title="Enhanced Controller Area Network">ECAN</acronym> transceiver which is connected to the <acronym title="Enhanced Controller Area Network">ECAN</acronym> bus.</p>
						<p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> module must be in Config mode, otherwise the function will be ignored. See <a href="#ecan1setoperationmode">ECANxSetOperationMode</a>.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// set appropriate filter mask and message type value</i>
ECAN1SetOperationMode(_ECAN_MODE_CONFIG,0xFF);              <i>// set CONFIGURATION mode (ECAN1 module must be in config mode for mask settings)</i>

<i>// Set all mask0 bits to 1 (all filtered bits are relevant):
// Note that -1 is just a cheaper way to write 0xFFFFFFFF.
// Complement will do the trick and fill it up with ones.</i>
ECAN1SetMask(_ECAN_MASK_0, -1, _ECAN_CONFIG_MATCH_MSG_TYPE &#38; _ECAN_CONFIG_XTD_MSG);
</pre>

          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
          <ul>
        	  <li><acronym title="Enhanced Controller Area Network">ECAN</acronym> library routine require you to specify the module you want to use. To select the desired <acronym title="Enhanced Controller Area Network">ECAN</acronym> module, simply change the letter <b>x</b> in the routine prototype for a number from <b>1</b> to <b>2</b>.</li>
    	      <li>Number of <acronym title="Enhanced Controller Area Network">ECAN</acronym> modules per MCU differs from chip to chip. Please, read the appropriate datasheet before utilizing this library.</li>
          </ul>
          </td>
        </tr>    

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="ecan1setfilter">ECANxSetFilter</h3>


    <!-- tabela: ECANxSetFilter -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> ECANxSetFilter(<b>unsigned int</b> ECAN_FILTER, <b>long</b> val, <b>unsigned int</b> ECAN_FILTER_MASK, <b>unsigned int</b> ECAN_FILTER_RXBUFF, <b>unsigned int</b> ECAN_CONFIG_FLAGS);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>The function configures and enables appropriate message filter.</p>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <ul>
              <li><code>ECAN_FILTER:</code> ECAN module filter number. Valid values: <code>ECAN_FILTER</code> constants. See <a href="#ecan_filter">ECAN_FILTER</a> constants.</li>
              <li><code>val:</code> filter register value. This value is bit-adjusted to appropriate filter registers</li>
              <li><code>ECAN_FILTER_MASK:</code> mask register corresponding to filter. Valid values: <code>ECAN_MASK</code> constants. See <a href="#ecan_mask">ECAN_MASK</a> constants.</li>
							<li><code>ECAN_FILTER_RXBUFF:</code> receive buffer corresponding to filter. Valid values: <code>ECAN_RX_BUFFER</code> constants. See <a href="#ecan_rx_buffer">ECAN_RX_BUFFER</a> constants.</li>
							<li><code>ECAN_CONFIG_FLAGS:</code> selects type of messages to filter. Valid values: <code>_ECAN_CONFIG_XTD_MSG</code> and <code>_ECAN_CONFIG_STD_MSG</code>. See <a href="#ecan_constants">ECAN_CONFIG_FLAGS</a> constants.</li>
            </ul>
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> routines are supported only by MCUs with the ECAN module.</p>
						<p>Microcontroller must be connected to <acronym title="Enhanced Controller Area Network">ECAN</acronym> transceiver which is connected to the <acronym title="Enhanced Controller Area Network">ECAN</acronym> bus.</p>
						<p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> module must be in Config mode, otherwise the function will be ignored. See <a href="#ecan1setoperationmode">ECANxSetOperationMode</a>.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// set appropriate filter value and message type</i>
ECAN1SetOperationMode(_ECAN_MODE_CONFIG,0xFF);                  <i>// set CONFIGURATION mode (ECAN1 module must be in config mode for filter settings)</i>

<i>// Set id of filter 10 to 3, mask2, receive buffer 7, extended messages:</i>
ECAN1SetFilter(_ECAN_FILTER_10, 3, _ECAN_MASK_2, _ECAN_RX_BUFFER_7, _ECAN_CONFIG_XTD_MSG);</pre>

          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
          <ul>
        	  <li><acronym title="Enhanced Controller Area Network">ECAN</acronym> library routine require you to specify the module you want to use. To select the desired <acronym title="Enhanced Controller Area Network">ECAN</acronym> module, simply change the letter <b>x</b> in the routine prototype for a number from <b>1</b> to <b>2</b>.</li>
    	      <li>Number of <acronym title="Enhanced Controller Area Network">ECAN</acronym> modules per MCU differs from chip to chip. Please, read the appropriate datasheet before utilizing this library.</li>
          </ul>
          </td>
        </tr>    

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="ecan1read">ECANxRead</h3>


    <!-- tabela: ECANxRead -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>unsigned int</b> ECANxRead(<b>unsigned long</b> *id, <b>char</b> *data, <b>unsigned int</b> *dataLen, <b>unsigned int</b> *ECAN_RX_MSG_FLAGS);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>If at least one full Receive Buffer is found, it will be processed in the following way:
            	<ul>
            		<li> Message ID is retrieved  and stored to location pointed by the <code>id</code> pointer</li>
            		<li> Message data is retrieved  and stored to array pointed by the <code>data</code> pointer</li>
            		<li> Message length is retrieved  and stored to location pointed by the <code>dataLen</code> pointer</li>
            		<li> Message flags are retrieved  and stored to location pointed by the <code>ECAN_RX_MSG_FLAGS</code> pointer</li>
            	</ul>		
            </p>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <ul>
              <li><code>id:</code> message identifier address</li>
              <li><code>data:</code> an array of bytes up to 8 bytes in length</li>
              <li><code>dataLen:</code> data length address</li>
              <li><code>ECAN_RX_MSG_FLAGS:</code> message flags address. For message receive flags format refer to the <code>ECAN_RX_MSG_FLAGS</code> constants. See <a href="#ecan_rx_msg_flag">ECAN_RX_MSG_FLAGS constants</a>.</li>
            </ul>
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>
            	<ul>
                <li><code>0</code> if none of Receive Buffers is full</li>
                <li><code>0xFFFF</code> if at least one of Receive Buffers is full (message received)</li>
              </ul>
            </p>  
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> routines are supported only by MCUs with the ECAN module.</p>
						<p> Microcontroller must be connected to <acronym title="Enhanced Controller Area Network">ECAN</acronym> transceiver which is connected to the <acronym title="Enhanced Controller Area Network">ECAN</acronym> bus.</p>
            <p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> module must be in a mode in which receiving is possible. See <a href="#ecan1setoperationmode">ECANxSetOperationMode</a>.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// check the ECAN1 module for received messages. If any was received do something.</i> 
<b>unsigned int</b> msg_rcvd, rx_flags, data_len;
<b>char</b> data[8];
<b>unsigned long</b> msg_id;
...
ECAN1SetOperationMode(_ECAN_MODE_NORMAL,0xFF);                  <i>// set NORMAL mode (ECAN1 module must be in a mode in which receiving is possible)</i>
...
rx_flags = 0;                                                  <i>// clear message flags</i>
if (msg_rcvd = ECAN1Read(&msg_id, data, &data_len, &rx_flags)) {
  ...
}</pre>

          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
          <ul>
        	  <li><acronym title="Enhanced Controller Area Network">ECAN</acronym> library routine require you to specify the module you want to use. To select the desired <acronym title="Enhanced Controller Area Network">ECAN</acronym> module, simply change the letter <b>x</b> in the routine prototype for a number from <b>1</b> to <b>2</b>.</li>
    	      <li>Number of <acronym title="Enhanced Controller Area Network">ECAN</acronym> modules per MCU differs from chip to chip. Please, read the appropriate datasheet before utilizing this library.</li>
          </ul>
          </td>
        </tr>    

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="ecan1write">ECANxWrite</h3>


    <!-- tabela: ECANxWrite -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>unsigned int</b> ECANxWrite(<b>long</b> id, <b>char</b> *Data, <b>unsigned int</b> DataLen, <b>unsigned int</b> ECAN_TX_MSG_FLAGS);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>If at least one empty Transmit Buffer is found, the function sends message in the queue for transmission.</p>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <ul>
              <li><code>id:</code> ECAN message identifier. Valid values: all 11 or 29 bit values, depending on message type (standard or extended)</li>
              <li><code>Data:</code> data to be sent</li>
              <li><code>DataLen:</code> data length. Valid values: <code>0..8</code></li>
              <li><code>ECAN_TX_MSG_FLAGS:</code> message flags. Valid values: <code>ECAN_TX_MSG_FLAGS</code> constants. See <a href="#ecan_tx_msg_flag">ECAN_TX_MSG_FLAGS</a> constants.</li>
            </ul>
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>
            	<ul>
                <li><code>0</code> if all Transmit Buffers are busy</li>
                <li><code>0xFFFF</code> if at least one Transmit Buffer is empty and available for transmition</li>
              </ul>
            </p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> routines are supported only by MCUs with the ECAN module.</p> 
						<p>Microcontroller must be connected to <acronym title="Enhanced Controller Area Network">ECAN</acronym> transceiver which is connected to the <acronym title="Enhanced Controller Area Network">ECAN</acronym> bus.</p>
            <p>The <acronym title="Enhanced Controller Area Network">ECAN</acronym> module must be in a mode in which transmission is possible. See <a href="#ecan1setoperationmode">ECANxSetOperationMode</a>.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// send message extended ECAN message with appropriate ID and data</i>
<b>unsigned int</b> tx_flags;
<b>char</b> data[8];
<b>unsigned long</b> msg_id;
...
ECAN1SetOperationMode(_ECAN_MODE_NORMAL,0xFF);      <i>// set NORMAL mode (ECAN1 must be in a mode in which transmission is possible)</i>

tx_flags = _ECAN_TX_PRIORITY_0 &#38;            
           _ECAN_TX_XTD_FRAME &#38;             
           _ECAN_TX_NO_RTR_FRAME;                   <i>// set message flags</i>
ECAN1Write(msg_id, data, 1, tx_flags);</pre>

          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
          <ul>
        	  <li><acronym title="Enhanced Controller Area Network">ECAN</acronym> library routine require you to specify the module you want to use. To select the desired <acronym title="Enhanced Controller Area Network">ECAN</acronym> module, simply change the letter <b>x</b> in the routine prototype for a number from <b>1</b> to <b>2</b>.</li>
    	      <li>Number of <acronym title="Enhanced Controller Area Network">ECAN</acronym> modules per MCU differs from chip to chip. Please, read the appropriate datasheet before utilizing this library.</li>
          </ul>
          </td>
        </tr>    

      </tbody>

    </table>

    <!-- kraj tabele -->
    

		<!-- -->


    <h3 id="ecan_constants"><acronym title="Enhanced Controller Area Network">ECAN</acronym> Constants</h3>
    <p>There is a number of constants predefined in the <acronym title="Enhanced Controller Area Network">ECAN</acronym> library. You need to be familiar with them in order to be able to use the library effectively. Check the example at the end of the chapter.</p>

    <h4 id="ecan_op_mode">ECAN_OP_MODE Constants</h4>
    <p>The <code>ECAN_OP_MODE</code> constants define <acronym title="Enhanced Controller Area Network">ECAN</acronym> operation mode. The routine <a href="#ecan1setoperationmode">ECANxSetOperationMode</a> expect one of these as their argument:</p>

<div class="example">
  <textarea style="display:none;"></textarea> 
  <span class="copytoclipboard"><a onclick="copyToClipboard(this); return false;" href="#"><img align="absmiddle" alt="Copy Code To Clipboard" src="img/copy_to_clipboard.png" border="0" /><span class="clipboard_text">Copy Code To Clipboard</span></a></span>
</div>

<pre class="program">
<b>const unsigned int</b>
    _ECAN_MODE_BITS        = 0x00E0,   <i>// Use this to access opmode  bits</i>
    _ECAN_MODE_NORMAL      = 0x00,
    _ECAN_MODE_DISABLE     = 0x01,
    _ECAN_MODE_LOOP        = 0x02,
    _ECAN_MODE_LISTEN      = 0x03,
    _ECAN_MODE_CONFIG      = 0x04,
    _ECAN_MODE_LISTEN_ALL  = 0x07;
</pre>		
    
    <br>
    <h4 id="ecan_config_flag">ECAN_CONFIG_FLAGS Constants</h4>
    <p>The <code>ECAN_CONFIG_FLAGS</code> constants define flags related to the <acronym title="Enhanced Controller Area Network">ECAN</acronym> module configuration. The routines <a href="#ecan1initialize">ECANxInitialize</a> and <a href="#ecan1setbaudrate">ECANxSetBaudRate</a> expect one of these (or a bitwise combination) as their argument:</p>

<div class="example">
  <textarea style="display:none;"></textarea> 
  <span class="copytoclipboard"><a onclick="copyToClipboard(this); return false;" href="#"><img align="absmiddle" alt="Copy Code To Clipboard" src="img/copy_to_clipboard.png" border="0" /><span class="clipboard_text">Copy Code To Clipboard</span></a></span>
</div>

<pre class="program">
<b>const unsigned int</b>
    _ECAN_CONFIG_DEFAULT         = 0xFF,   <i>// 11111111</i>

    _ECAN_CONFIG_PHSEG2_PRG_BIT  = 0x01,
    _ECAN_CONFIG_PHSEG2_PRG_ON   = 0xFF,   <i>// XXXXXXX1</i>
    _ECAN_CONFIG_PHSEG2_PRG_OFF  = 0xFE,   <i>// XXXXXXX0</i>

    _ECAN_CONFIG_LINE_FILTER_BIT = 0x02,
    _ECAN_CONFIG_LINE_FILTER_ON  = 0xFF,   <i>// XXXXXX1X</i>
    _ECAN_CONFIG_LINE_FILTER_OFF = 0xFD,   <i>// XXXXXX0X</i>

    _ECAN_CONFIG_SAMPLE_BIT      = 0x04,
    _ECAN_CONFIG_SAMPLE_ONCE     = 0xFF,   <i>// XXXXX1XX</i>
    _ECAN_CONFIG_SAMPLE_THRICE   = 0xFB,   <i>// XXXXX0XX</i>

    _ECAN_CONFIG_MSG_TYPE_BIT    = 0x08,
    _ECAN_CONFIG_STD_MSG         = 0xFF,   <i>// XXXX1XXX</i>
    _ECAN_CONFIG_XTD_MSG         = 0xF7,   <i>// XXXX0XXX</i>
 
    _ECAN_CONFIG_MATCH_TYPE_BIT  = 0x20,
    _ECAN_CONFIG_ALL_VALID_MSG   = 0xDF,   <i>// XX0XXXXX</i>
    _ECAN_CONFIG_MATCH_MSG_TYPE  = 0xFF;   <i>// XX1XXXXX</i>
</pre>

    <p>You may use bitwise AND (<code>&#38;</code>) to form config word out of these values. For example:</p>

<div class="example">
  <textarea style="display:none;"></textarea> 
  <span class="copytoclipboard"><a onclick="copyToClipboard(this); return false;" href="#"><img align="absmiddle" alt="Copy Code To Clipboard" src="img/copy_to_clipboard.png" border="0" /><span class="clipboard_text">Copy Code To Clipboard</span></a></span>
</div>

<pre class="program">
init = _ECAN_CONFIG_SAMPLE_THRICE &#38;
       _ECAN_CONFIG_PHSEG2_PRG_ON &#38;
       _ECAN_CONFIG_STD_MSG       &#38;
       _ECAN_CONFIG_MATCH_MSG_TYPE &#38;
       _ECAN_CONFIG_LINE_FILTER_OFF;
...
ECAN1Initialize(1, 1, 3, 3, 1, init);   <i>// initialize ECAN1</i></pre>


    <h4 id="ecan_tx_msg_flag">ECAN_TX_MSG_FLAGS Constants</h4>
    <p><code>ECAN_TX_MSG_FLAGS</code> are flags related to transmission of <acronym title="Enhanced Controller Area Network">ECAN</acronym> message. The routine <a href="#ecan1write">ECANxWrite</a> expect one of these (or a bitwise combination) as their argument:</p>

<div class="example">
  <textarea style="display:none;"></textarea> 
  <span class="copytoclipboard"><a onclick="copyToClipboard(this); return false;" href="#"><img align="absmiddle" alt="Copy Code To Clipboard" src="img/copy_to_clipboard.png" border="0" /><span class="clipboard_text">Copy Code To Clipboard</span></a></span>
</div>

<pre class="program">
<b>const unsigned int</b>
    _ECAN_TX_PRIORITY_BITS = 0x03,
    _ECAN_TX_PRIORITY_0    = 0xFC,   <i>// XXXXXX00</i>
    _ECAN_TX_PRIORITY_1    = 0xFD,   <i>// XXXXXX01</i>
    _ECAN_TX_PRIORITY_2    = 0xFE,   <i>// XXXXXX10</i>
    _ECAN_TX_PRIORITY_3    = 0xFF,   <i>// XXXXXX11</i>

    _ECAN_TX_FRAME_BIT    = 0x08,
    _ECAN_TX_STD_FRAME    = 0xFF,    <i>// XXXXX1XX</i>
    _ECAN_TX_XTD_FRAME    = 0xF7,    <i>// XXXXX0XX</i>

    _ECAN_TX_RTR_BIT      = 0x40,
    _ECAN_TX_NO_RTR_FRAME = 0xFF,    <i>// X1XXXXXX</i>
    _ECAN_TX_RTR_FRAME    = 0xBF;    <i>// X0XXXXXX</i>
</pre>

    <p>You may use bitwise AND (<code>&#38;</code>) to adjust the appropriate flags. For example:</p>

<div class="example">
  <textarea style="display:none;"></textarea> 
  <span class="copytoclipboard"><a onclick="copyToClipboard(this); return false;" href="#"><img align="absmiddle" alt="Copy Code To Clipboard" src="img/copy_to_clipboard.png" border="0" /><span class="clipboard_text">Copy Code To Clipboard</span></a></span>
</div>

<pre class="program">
<i>// form value to be used with CANSendMessage: </i>
send_config = _ECAN_TX_PRIORITY_0 &#38;
              _ECAN_TX_XTD_FRAME  &#38;
              _ECAN_TX_NO_RTR_FRAME;
...
ECAN1SendMessage(id, data, 1, send_config);</pre>

    <h4 id="ecan_rx_msg_flag">ECAN_RX_MSG_FLAGS Constants</h4>
    <p><code>ECAN_RX_MSG_FLAGS</code> are flags related to reception of <acronym title="Enhanced Controller Area Network">ECAN</acronym> message. If a particular bit is set then corresponding meaning is TRUE or else it will be FALSE.</p>

<div class="example">
  <textarea style="display:none;"></textarea> 
  <span class="copytoclipboard"><a onclick="copyToClipboard(this); return false;" href="#"><img align="absmiddle" alt="Copy Code To Clipboard" src="img/copy_to_clipboard.png" border="0" /><span class="clipboard_text">Copy Code To Clipboard</span></a></span>
</div>

<pre class="program">
<b>const unsigned int</b>
    _ECAN_RX_FILTER_BITS = 0x000F, <i>// Use this to access filter bits</i>
    _ECAN_RX_FILTER_0    = 0x00,   <i>// filter0 match</i>
    _ECAN_RX_FILTER_1    = 0x01,   <i>// filter1 match</i>
    _ECAN_RX_FILTER_2    = 0x02,   <i>// ...</i>
    _ECAN_RX_FILTER_3    = 0x03,
    _ECAN_RX_FILTER_4    = 0x04,
    _ECAN_RX_FILTER_5    = 0x05,
    _ECAN_RX_FILTER_6    = 0x06,
    _ECAN_RX_FILTER_7    = 0x07,
    _ECAN_RX_FILTER_8    = 0x08,
    _ECAN_RX_FILTER_9    = 0x09,
    _ECAN_RX_FILTER_10   = 0x0A,
    _ECAN_RX_FILTER_11   = 0x0B,
    _ECAN_RX_FILTER_12   = 0x0C,
    _ECAN_RX_FILTER_13   = 0x0D,
    _ECAN_RX_FILTER_14   = 0x0E,   <i>// ...</i>
    _ECAN_RX_FILTER_15   = 0x0F,   <i>// filter15 match</i>

    _ECAN_RX_OVERFLOW    = 0x10,   <i>// Set if Overflowed else cleared</i>
    _ECAN_RX_INVALID_MSG = 0x20,   <i>// Set if invalid else cleared</i>
    _ECAN_RX_XTD_FRAME   = 0x40,   <i>// Set if XTD message else cleared</i>
    _ECAN_RX_RTR_FRAME   = 0x80;   <i>// Set if RTR message else cleared</i>
</pre>																	

    <p>You may use bitwise AND (<code>&#38;</code>) to extract received message status. For example:</p>

<div class="example">
  <textarea style="display:none;"></textarea> 
  <span class="copytoclipboard"><a onclick="copyToClipboard(this); return false;" href="#"><img align="absmiddle" alt="Copy Code To Clipboard" src="img/copy_to_clipboard.png" border="0" /><span class="clipboard_text">Copy Code To Clipboard</span></a></span>
</div>

<pre class="program">
<b>if</b> (MsgFlag &#38; _ECAN_RX_OVERFLOW != 0) {
  ...
  <i>// Receiver overflow has occurred.
  // We have lost our previous message.</i>
}</pre>

    <h4 id="ecan_mask">ECAN_MASK Constants</h4>
    <p>The <code>ECAN_MASK</code> constants define mask codes. The routine <a href="#ecan1setmask">ECANxSetMask</a> expect one of these as their argument:</p>

<div class="example">
  <textarea style="display:none;"></textarea> 
  <span class="copytoclipboard"><a onclick="copyToClipboard(this); return false;" href="#"><img align="absmiddle" alt="Copy Code To Clipboard" src="img/copy_to_clipboard.png" border="0" /><span class="clipboard_text">Copy Code To Clipboard</span></a></span>
</div>

<pre class="program">
<b>const unsigned int</b>
    _ECAN_MASK_0 = 0,
    _ECAN_MASK_1 = 1,
    _ECAN_MASK_2 = 2;
</pre>

    <br>
    <h4 id="ecan_filter">ECAN_FILTER Constants</h4>
    <p>The <code>ECAN_FILTER</code> constants define filter codes. The routine <a href="#ecan1setfilter">ECANxSetFilter</a> expect one of these as their argument:</p>

<div class="example">
  <textarea style="display:none;"></textarea> 
  <span class="copytoclipboard"><a onclick="copyToClipboard(this); return false;" href="#"><img align="absmiddle" alt="Copy Code To Clipboard" src="img/copy_to_clipboard.png" border="0" /><span class="clipboard_text">Copy Code To Clipboard</span></a></span>
</div>

<pre class="program">
<b>const unsigned int</b>
    _ECAN_FILTER_0  =  0,
    _ECAN_FILTER_1  =  1,
    _ECAN_FILTER_2  =  2,
    _ECAN_FILTER_3  =  3,
    _ECAN_FILTER_4  =  4,
    _ECAN_FILTER_5  =  5,
    _ECAN_FILTER_6  =  6,
    _ECAN_FILTER_7  =  7,
    _ECAN_FILTER_8  =  8,
    _ECAN_FILTER_9  =  9,
    _ECAN_FILTER_10 = 10,
    _ECAN_FILTER_11 = 11,
    _ECAN_FILTER_12 = 12,
    _ECAN_FILTER_13 = 13,
    _ECAN_FILTER_14 = 14,
    _ECAN_FILTER_15 = 15;
</pre>
    
    <br>
    <h4 id="ecan_rx_buffer">ECAN_RX_BUFFER Constants</h4>
    <p>The <code>ECAN_RX_BUFFER</code> constants define RX bufer codes codes. The routine <a href="#ecan1setfilter">ECANxSetFilter</a> expect one of these as their argument:</p>    
    
<div class="example">
  <textarea style="display:none;"></textarea> 
  <span class="copytoclipboard"><a onclick="copyToClipboard(this); return false;" href="#"><img align="absmiddle" alt="Copy Code To Clipboard" src="img/copy_to_clipboard.png" border="0" /><span class="clipboard_text">Copy Code To Clipboard</span></a></span>
</div>

<pre class="program">
<b>const unsigned int</b>
    _ECAN_RX_BUFFER_0  =  0,
    _ECAN_RX_BUFFER_1  =  1,
    _ECAN_RX_BUFFER_2  =  2,
    _ECAN_RX_BUFFER_3  =  3,
    _ECAN_RX_BUFFER_4  =  4,
    _ECAN_RX_BUFFER_5  =  5,
    _ECAN_RX_BUFFER_6  =  6,
    _ECAN_RX_BUFFER_7  =  7,
    _ECAN_RX_BUFFER_8  =  8,
    _ECAN_RX_BUFFER_9  =  9,
    _ECAN_RX_BUFFER_10 = 10,
    _ECAN_RX_BUFFER_11 = 11,
    _ECAN_RX_BUFFER_12 = 12,
    _ECAN_RX_BUFFER_13 = 13,
    _ECAN_RX_BUFFER_14 = 14,
    _ECAN_RX_BUFFER_15 = 15;
</pre>

    
    
    
    <!-- -->

    <br>
    <h3>Library Example</h3>

    <p>The example demonstrates <acronym title="Enhanced Controller Area Network">ECAN</acronym> protocol. The 1st node initiates the communication with the 2nd node by sending some
      data to its address. The 2nd node responds by sending back the data incremented by 1. The 1st node then does the same and sends incremented data
      back to the 2nd node, etc.</p>

    <p>Code for the first ECAN node:</p>

<div class="example">
  <textarea style="display:none;"></textarea> 
  <span class="copytoclipboard"><a onclick="copyToClipboard(this); return false;" href="#"><img align="absmiddle" alt="Copy Code To Clipboard" src="img/copy_to_clipboard.png" border="0" /><span class="clipboard_text">Copy Code To Clipboard</span></a></span>
</div>

<pre class="program">
#include &#34;ECAN_Defs.h&#34;

<b>unsigned int</b> Can_Init_Flags, Can_Send_Flags, Can_Rcv_Flags;  <i>// can flags</i>
<b>unsigned int</b> Rx_Data_Len;                                    <i>// received data length in bytes</i>
<b>char</b> RxTx_Data[8];                                           <i>// can rx/tx data buffer</i>
<b>char</b> Msg_Rcvd;                                               <i>// reception flag</i>
<b>unsigned long</b> Tx_ID, Rx_ID;                                  <i>// can rx and tx ID</i>

<b>void</b> C1Interrupt(<b>void</b>) org 0x005A {                           <i>// ECAN event iterrupt</i>
  IFS2bits.C1IF = 0;                                   <i>// clear ECAN interrupt flag</i>
  <b>if</b>(C1INTFbits.TBIF) {                                <i>// was it tx interrupt?</i>
    C1INTFbits.TBIF = 0;                             <i>// if yes clear tx interrupt flag</i>
  }

  <b>if</b>(C1INTFbits.RBIF) {                                      <i>// was it rx interrupt?</i>
    C1INTFbits.RBIF = 0;                         <i>// if yes clear rx interrupt flag</i>
  }
}

<b>void</b> main() {

  <i>// Set PLL : Fosc = ((Fin/PLLPRE)*PLLDIV)/PLLPOST ; (((10MHz/2)*32)/4) = 20MHz</i>
  <i>// refer the pic24 family datasheet for more details</i>
  CLKDIV &#38;= 0xFFE0;  <i>//CLKDIVbits.PLLPRE = 0;</i>
  PLLFBD  = 0x1E;    <i>//PLLFBDbits.PLLDIV = 0x1E;</i>
  CLKDIV &#38;= 0xFF3F;  <i>//CLKDIVbits.PLLPOST = 1;</i>
  CLKDIV |= 0x00C0;

  AD1PCFGH = 0xFFFF;                               <i>//</i>
  AD1PCFGL = 0xFFFF;                               <i>// all ports digital I/O</i>
  AD2PCFGL = 0xFFFF;                               <i>//</i>

  <i>/* Clear Interrupt Flags */</i>

  IFS0=0;
  IFS1=0;
  IFS2=0;
  IFS3=0;
  IFS4=0;

  <i>/* Enable ECAN1 Interrupt */</i>

  IEC2bits.C1IE   = 1;                       <i>// enable ECAN1 interrupts</i>
  C1INTEbits.TBIE = 1;                       <i>// enable ECAN1 tx interrupt</i>
  C1INTEbits.RBIE = 1;                       <i>// enable ECAN1 rx interrupt</i>

  PORTB = 0;                                       <i>// clear PORTB</i>
  TRISB = 0;                                       <i>// set PORTB as output,</i>
                                                   <i>// for received message data displaying</i>

  Can_Init_Flags = 0;                              <i>//</i>
  Can_Send_Flags = 0;                              <i>// clear flags</i>
  Can_Rcv_Flags  = 0;                              <i>//</i>

  Can_Send_Flags = _ECAN_TX_PRIORITY_0 &#38;           <i>// Form value to be used</i>
                   _ECAN_TX_XTD_FRAME &#38;            <i>//  with CANSendMessage</i>
                   _ECAN_TX_NO_RTR_FRAME;

  Can_Init_Flags = _ECAN_CONFIG_SAMPLE_THRICE &#38;    <i>// Form value to be used</i>
                   _ECAN_CONFIG_PHSEG2_PRG_ON &#38;    <i>//  with CANInitialize</i>
                   _ECAN_CONFIG_XTD_MSG &#38;
                   _ECAN_CONFIG_MATCH_MSG_TYPE &#38;
                   _ECAN_CONFIG_LINE_FILTER_OFF;

  RxTx_Data[0] = 9;                                <i>// set initial data to be sent</i>
  ECAN1DmaChannelInit(0, 1, &#38;ECAN1RxTxRAMBuffer);  <i>// init dma channel 0 for</i>
                                                   <i>// dma to ECAN peripheral transfer</i>
  ECAN1DmaChannelInit(2, 0, &#38;ECAN1RxTxRAMBuffer);  <i>// init dma channel 2 for</i>
                                                   <i>// ECAN peripheral to dma transfer</i>
  ECAN1Initialize(1, 3, 3, 3, 1, Can_Init_Flags);  <i>// initialize ECAN</i>
  ECAN1SetBufferSize(ECAN1RAMBUFFERSIZE);          <i>// set number of rx+tx buffers in DMA RAM</i>

  ECAN1SelectTxBuffers(0x000F);                    <i>// select transmit buffers</i>
                                                   <i>// 0x000F = buffers 0:3 are transmit buffers</i>
  ECAN1SetOperationMode(_ECAN_MODE_CONFIG,0xFF);   <i>// set CONFIGURATION mode</i>

  ECAN1SetMask(_ECAN_MASK_0, -1, _ECAN_CONFIG_MATCH_MSG_TYPE &#38; _ECAN_CONFIG_XTD_MSG);         <i>// set all mask1 bits to ones</i>
  ECAN1SetMask(_ECAN_MASK_1, -1, _ECAN_CONFIG_MATCH_MSG_TYPE &#38; _ECAN_CONFIG_XTD_MSG);         <i>// set all mask2 bits to ones</i>
  ECAN1SetMask(_ECAN_MASK_2, -1, _ECAN_CONFIG_MATCH_MSG_TYPE &#38; _ECAN_CONFIG_XTD_MSG);         <i>// set all mask3 bits to ones</i>
  ECAN1SetFilter(_ECAN_FILTER_10, 3, _ECAN_MASK_2, _ECAN_RX_BUFFER_7, _ECAN_CONFIG_XTD_MSG);  <i>// set id of filter10  to 3,</i>
                                                                                              <i>// assign mask2 to filter10</i>
                                                                                              <i>// assign buffer7 to filter10</i>
  ECAN1SetOperationMode(_ECAN_MODE_NORMAL, 0xFF);  <i>// set NORMAL mode</i>

  Tx_ID = 12111;                                   <i>// set transmit ID</i>

  ECAN1Write(Tx_ID, RxTx_Data, 1, Can_Send_Flags);                            <i>// send initial message</i>

  <b>while</b> (1) {                                                                 <i>// endless loop</i>
    Msg_Rcvd = ECAN1Read(&#38;Rx_ID , RxTx_Data , &#38;Rx_Data_Len, &#38;Can_Rcv_Flags);  <i>// receive message</i>
    <b>if</b> ((Rx_ID == 3u) &#38;&#38; Msg_Rcvd) {                                          <i>// if message received check id</i>
      PORTB = RxTx_Data[0];                                                   <i>// id correct, output data at PORTB</i>
      RxTx_Data[0]++ ;                                                        <i>// increment received data</i>
      Delay_ms(10);
      ECAN1Write(Tx_ID, RxTx_Data, 1, Can_Send_Flags);                        <i>// send incremented data back</i>
    }
  }
}
</pre>

    <p>Code for the second ECAN node:</p>

<div class="example">
  <textarea style="display:none;"></textarea> 
  <span class="copytoclipboard"><a onclick="copyToClipboard(this); return false;" href="#"><img align="absmiddle" alt="Copy Code To Clipboard" src="img/copy_to_clipboard.png" border="0" /><span class="clipboard_text">Copy Code To Clipboard</span></a></span>
</div>

<pre class="program">
#include &#34;__Lib_ECAN1_Defs.h&#34;

<b>unsigned int</b> Can_Init_Flags, Can_Send_Flags, Can_Rcv_Flags;  <i>// can flags</i>
<b>unsigned int</b> Rx_Data_Len;                                    <i>// received data length in bytes</i>
<b>char</b> RxTx_Data[8];                                           <i>// can rx/tx data buffer</i>
<b>char</b> Msg_Rcvd;                                               <i>// reception flag</i>
<b>unsigned long</b> Tx_ID, Rx_ID;                                  <i>// can rx and tx ID</i>

<b>void</b> C1Interrupt(<b>void</b>) org 0x005A {                           <i>// ECAN event iterrupt</i>
  IFS2bits.C1IF = 0;                                   <i>// clear ECAN interrupt flag</i>
  <b>if</b>(C1INTFbits.TBIF) {                                <i>// was it tx interrupt?</i>
    C1INTFbits.TBIF = 0;                             <i>// if yes clear tx interrupt flag</i>
  }

  <b>if</b>(C1INTFbits.RBIF) {                                      <i>// was it rx interrupt?</i>
    C1INTFbits.RBIF = 0;                         <i>// if yes clear rx interrupt flag</i>
  }
}

<b>void</b> main() {

  <i>// Set PLL : Fosc = ((Fin/PLLPRE)*PLLDIV)/PLLPOST ; (((10MHz/2)*32)/4) = 20MHz</i>
  <i>// refer the pic24 family datasheet for more details</i>
  CLKDIV &#38;= 0xFFE0;  <i>//CLKDIVbits.PLLPRE = 0;</i>
  PLLFBD  = 0x1E;    <i>//PLLFBDbits.PLLDIV = 0x1E;</i>
  CLKDIV &#38;= 0xFF3F;  <i>//CLKDIVbits.PLLPOST = 1;</i>
  CLKDIV |= 0x00C0;

  AD1PCFGH = 0xFFFF;                               <i>//</i>
  AD1PCFGL = 0xFFFF;                               <i>// all ports digital I/O</i>
  AD2PCFGL = 0xFFFF;                               <i>//</i>

  <i>/* Clear Interrupt Flags */</i>
  IFS0 = 0;
  IFS1 = 0;
  IFS2 = 0;
  IFS3 = 0;
  IFS4 = 0;

  <i>/* Enable ECAN1 Interrupt */</i>
  IEC2bits.C1IE   = 1;                       <i>// enable ECAN1 interrupt</i>
  C1INTEbits.TBIE = 1;                       <i>// enable ECAN1 tx interrupt</i>
  C1INTEbits.RBIE = 1;                       <i>// enable ECAN1 rx interrupt</i>

  PORTB = 0;                                       <i>// clear PORTB</i>
  TRISB = 0;                                       <i>// set PORTB as output,</i>
                                                   <i>// for received message data displaying</i>

  Can_Init_Flags = 0;                              <i>//</i>
  Can_Send_Flags = 0;                              <i>// clear flags</i>
  Can_Rcv_Flags  = 0;                              <i>//</i>

  Can_Send_Flags = _ECAN_TX_PRIORITY_0 &#38;           <i>// Form value to be used</i>
                   _ECAN_TX_XTD_FRAME &#38;            <i>//  with CANSendMessage</i>
                   _ECAN_TX_NO_RTR_FRAME;

  Can_Init_Flags = _ECAN_CONFIG_SAMPLE_THRICE &#38;    <i>// Form value to be used</i>
                   _ECAN_CONFIG_PHSEG2_PRG_ON &#38;    <i>//  with CANInitialize</i>
                   _ECAN_CONFIG_XTD_MSG &#38;
                   _ECAN_CONFIG_MATCH_MSG_TYPE &#38;
                   _ECAN_CONFIG_LINE_FILTER_OFF;

  ECAN1DmaChannelInit(0, 1, &#38;ECAN1RxTxRAMBuffer);  <i>// init dma channel 0 for</i>
                                                   <i>// dma to ECAN peripheral transfer</i>
  ECAN1DmaChannelInit(2, 0, &#38;ECAN1RxTxRAMBuffer);  <i>// init dma channel 2 for</i>
                                                   <i>// ECAN peripheral to dma transfer</i>
  ECAN1Initialize(1, 3, 3, 3, 1, Can_Init_Flags);  <i>// initialize ECAN</i>
  ECAN1SetBufferSize(ECAN1RAMBUFFERSIZE);          <i>// set number of rx+tx buffers in DMA RAM</i>

  ECAN1SelectTxBuffers(0x000F);                    <i>// select transmit buffers</i>
                                                   <i>// 0x000F = buffers 0:3 are transmit buffers</i>
  ECAN1SetOperationMode(_ECAN_MODE_CONFIG,0xFF);   <i>// set CONFIGURATION mode</i>

  ECAN1SetMask(_ECAN_MASK_0, -1, _ECAN_CONFIG_MATCH_MSG_TYPE &#38; _ECAN_CONFIG_XTD_MSG);            <i>// set all mask1 bits to ones</i>
  ECAN1SetMask(_ECAN_MASK_1, -1, _ECAN_CONFIG_MATCH_MSG_TYPE &#38; _ECAN_CONFIG_XTD_MSG);            <i>// set all mask2 bits to ones</i>
  ECAN1SetMask(_ECAN_MASK_2, -1, _ECAN_CONFIG_MATCH_MSG_TYPE &#38; _ECAN_CONFIG_XTD_MSG);            <i>// set all mask3 bits to ones</i>
  ECAN1SetFilter(_ECAN_FILTER_10, 12111, _ECAN_MASK_2, _ECAN_RX_BUFFER_7, _ECAN_CONFIG_XTD_MSG); <i>// set id of filter10  to 12111,</i>
                                                                                                 <i>// assign mask2 to filter10</i>
                                                                                                 <i>// assign buffer7 to filter10</i>
  ECAN1SetOperationMode(_ECAN_MODE_NORMAL,0xFF);   <i>// set NORMAL mode</i>

  Tx_ID = 3;                                       <i>// set tx ID</i>

  <b>while</b> (1) {
    Msg_Rcvd = ECAN1Read(&#38;Rx_ID , RxTx_Data , &#38;Rx_Data_Len, &#38;Can_Rcv_Flags);  <i>// receive message</i>
    <b>if</b> ((Rx_ID == 12111u) &#38;&#38; Msg_Rcvd) {                                      <i>// if message received check id</i>
      PORTB = RxTx_Data[0];                                                   <i>// id correct, output data at PORTB</i>
      RxTx_Data[0]++ ;                                                        <i>// increment received data</i>
      ECAN1Write(Tx_ID, RxTx_Data, 1, Can_Send_Flags);                        <i>// send incremented data back</i>
    }
  }
}
</pre>

    <!-- -->


    <h3>HW Connection</h3>

    <p class="center"><img alt="Example of interfacing ECAN transceiver with MCU and bus" src="img/Schemes/scheme_can.gif"></p>
    <p class="center small">Example of interfacing ECAN transceiver with MCU and bus</p>


    <div class="feedback">
            Copyright (c) 2002-2018 mikroElektronika. All rights reserved.
      <br>What do you think about this topic ?  <a href="https://helpdesk.mikroe.com/conversation/new/3">Send us feedback!</a>
    </div>

      <div class="libstock">Want more examples and libraries?&nbsp;
     <br>Find them on
     <a href="http://www.libstock.com/" target="_blank"><img alt="LibStock - A place for the code" src="img/libstock.gif" border="0" align="absmiddle"></a>
    </div>

  </div><!--/main-->




</body>

</html>
