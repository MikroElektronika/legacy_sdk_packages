
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<head>

<title>Vectors Library</title>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="Copyright" content="mikroElektronika 2006.">
<meta name="Author" content="Marko Jovanovic. mailto:office@mikroe.com">

<link rel="stylesheet" type="text/css" href="css/help_c_ARM.css">

<script defer type="text/javascript" src="css/pngfix.js"></script>


	






<style type="text/css">
#top {
  background:transparent url(template/c_ARM.png); 
}

.title{
	PADDING-RIGHT: 2px; 
	PADDING-LEFT: 70px; 
	FONT-WEIGHT: bold; 
	FONT-SIZE: 14px; 
	PADDING-BOTTOM: 3px; 
	PADDING-TOP: 0px; 
	FONT-FAMILY: Verdana;
  color:white;
}

.navigation{
                     PADDING-TOP: -5px;
	PADDING-RIGHT: 2px; 
	PADDING-LEFT: 63px; 
	FONT-SIZE: 11px; 
	FONT-FAMILY: Verdana;
                     color:white;
}

.navigation a:link {text-decoration: none; color: white;}
.navigation a:visited {text-decoration: none; color: white;}
.navigation a:active {text-decoration: none; color: white;}
.navigation a:hover {text-decoration: none; color: white; background:black;}

.nav_bar {
}

#top td p,td pre {
	margin:0 0 0 0;
}
</style>

<style type="text/css" media="screen">
#main{
	border-top: 1px solid #000000;
    padding-left: 15px;
    padding-right: 15px;
	position: absolute;
	top: 59px;
	right: 0px;
	bottom: 0px;
	left: 0px;

	width: expression(document.body.offsetWidth - 3);
	height: expression(document.body.offsetHeight -  65);
	overflow: auto;
}
</style>

</head>


<body>

<div id="top">
<table height="60" width="100%">
  <tbody>
	  <tr>
		  <td>
			  <pre class="nav_bar"><div class="title">Vectors Library</div><div class="navigation">&nbsp;&nbsp;<A href="mikroc_libraries.htm">mikroC PRO for ARM Libraries</A> &gt; <A href="dsp_library.htm">DSP Libraries</A> &gt; </div></pre>
			</td>
		  <td style="WIDTH: 120px" align="right">
			  <pre class="nav_bar"><A href="fft_library.htm" title="Previous"><img src="template\btn_prev_n.png" border="0"></a>&nbsp;<A title="Top of the Page" href="#top_of_page" alt="Top of the Page"><IMG src="template/btn_up_n.png" border=0 ></a>&nbsp;<A href="matrix_library.htm" title="Next"><img src="template\btn_next_n.png" border="0"></a></pre>
			</td>
		</tr>
	</tbody>
</table>
</div>

	


  <div id="main">

    
    <a name="top_of_page"><h2>Vectors Library</h2></a>

    <p>mikroC PRO for ARM includes a library for working and using vectors. Routines with <b>16</b> as their suffix work with 16-bit data (fractional Q15 format) and routines with <b>32</b> as their suffix work with 32-bit data (fractional Q31 format).</p>

    <div style="border: 1.00pt solid #cccccc; padding: 5.00pt; background: #f5f2ec">	  
	    <img src="img/note.gif" align="absmiddle"><b>&nbsp;&nbsp;Note :</b>
      <p>When using Cortex M4 MCUs, please have in mind that arrays of 16-bit (half-word) type that represent vectors must be allocated on the word-aligned addresses.</p>
    </div>

    <!-- -->


    <h3>Library Routines</h3>

    <ul>
    	<li><a href="#vector_set16">Vector_Set16</a></li>
      <li><a href="#vector_set32">Vector_Set32</a></li>
    	<!--<li><a href="#vectorpower">Vector_Power</a></li>-->
    	<li><a href="#vector_subtract16">Vector_Sub16</a></li>
    	<li><a href="#vector_subtract32">Vector_Sub32</a></li>
    	<!--<li><a href="#vectorscale">Vector_Scale</a></li>-->
    	<li><a href="#vector_negate16">Vector_Negate16</a></li>
    	<li><a href="#vector_negate32">Vector_Negate32</a></li>
    	<li><a href="#vector_mul16">Vector_Mul16</a></li>
    	<li><a href="#vector_mul32">Vector_Mul32</a></li>
    	<li><a href="#vector_mulc16">Vector_MulC16</a></li>
    	<li><a href="#vector_mulc32">Vector_MulC32</a></li>
    	<li><a href="#vector_min16">Vector_Min16</a></li>
    	<li><a href="#vector_min32">Vector_Min32</a></li>
    	<li><a href="#vector_max16">Vector_Max16</a></li>
    	<li><a href="#vector_max32">Vector_Max32</a></li>
    	<li><a href="#vector_dotp16">Vector_Dotp16</a></li>
    	<li><a href="#vector_dotp32">Vector_Dotp32</a></li>
    	<li><a href="#vector_correlate16">Vector_Correlate16</a></li>
    	<li><a href="#vector_correlate32">Vector_Correlate32</a></li>
    	<li><a href="#vector_convolve16">Vector_Convolve16</a></li>
    	<li><a href="#vector_convolve32">Vector_Convolve32</a></li>
    	<li><a href="#vector_add16">Vector_Add16</a></li>
    	<li><a href="#vector_add32">Vector_Add32</a></li>
    	<li><a href="#vector_addc16">Vector_AddC16</a></li>
    	<li><a href="#vector_addc32">Vector_AddC32</a></li>
    	<li><a href="#vector_abs16">Vector_Abs16</a></li>
    	<li><a href="#vector_abs32">Vector_Abs32</a></li>
    	<li><a href="#vector_sum_squares16">Vector_Sum_Squares16</a></li>
    	<li><a href="#vector_sum_squares32">Vector_Sum_Squares32</a></li>
    </ul>


    <!-- -->


    <h3 id="vector_set16">Vector_Set16</h3>


    <!-- tabela: Vector_Set -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>void</b> Vector_Set16(<b>int</b> *indata, <b>unsigned</b> size, <b>int</b> value);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
			      <p>Sets <code>size</code> elements of <code>input</code> to <code>value</code>, starting from the first element.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <ul>
            	<li><code>input:</code> pointer to original vector.</li>
            	<li><code>size:</code> number of vector elements.</li>
            	<li><code>value:</code> value written to the elements.</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>   
          </td>
        </tr> 
 
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>  
 
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>int</b> vec2[3] = {1,1,1};

Vector_Set16(vec2, 3, 0x4000);
</pre>
          </td>
        </tr>  
  
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>                           

    </tbody>

    </table>

    <!-- kraj tabele -->


	<!-- -->

    <h3 id="vector_set32">Vector_Set32</h3>


    <!-- tabela: Vector_Set -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>void</b> Vector_Set32(<b>long</b> *indata, <b>unsigned</b> size, <b>long</b> value);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
			      <p>Sets <code>size</code> elements of <code>input</code> to <code>value</code>, starting from the first element.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <ul>
            	<li><code>input:</code> pointer to original vector.</li>
            	<li><code>size:</code> number of vector elements.</li>
            	<li><code>value:</code> value written to the elements.</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>   
          </td>
        </tr> 
 
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>  
 
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>long</b> vec2[3] = {1,1,1};

Vector_Set32(vec2, 3, 0x4000);
</pre>
          </td>
        </tr>  
  
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>                           

    </tbody>

    </table>

    <!-- kraj tabele -->


	<!--

    <h3 id="vectorpower">Vector_Power</h3>



    <table class="routine" width="100%">


      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>unsigned</b> Vector_Power(<b>unsigned</b> numElems, <b>unsigned</b> *srcV);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
		        <p>Function returns result of power value (powVal) in radix point 1.15</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <ul>
            	<li><code>numElems:</code> number elements in vector(s)</li>
            	<li><code>srcV:</code> pointer to source vector</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p><img src="img/math/math4.gif" align="absmiddle"></p>    
          </td>
        </tr> 
 
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>    
          </td>
        </tr>  
 
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>unsigned</b> vec1[3] = {1,2,3};

Vector_Power(3, vec1);
</pre>
          </td>
        </tr>  
  
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>                           

    </tbody>

    </table>

-->

    <h3 id="vector_subtract16">Vector_Sub16</h3>


    <!-- tabela: Vector_Subtract -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>void</b> Vector_Sub16(<b>int</b> *outdata, <b>int</b> *indata1, <b>unsigned</b> *indata2, <b>unsigned</b> N);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
		    	  <p>This function does subtraction of two vectors - subtracts each element of <code>indata2</code> vector from the corresponding element of <code>indata1</code> vector. The number of samples to process is given by the parameter <code>N</code>.</p>
            <p><b>outdata[n] = indata1[n] - indata2[n]</b>, n <font face="symbol">&#206;</font> [0, N-1]</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>outdata:</code> result vector - output array of 16-bit fixed-point elements in Q15 format.</li>
	        	<li><code>indata1:</code> first vector - first input array with 16-bit fixed-point elements in Q15 format.</li>
	        	<li><code>indata2:</code> second vector - second input array with 16-bit fixed-point elements in Q15 format.</li>
	        	<li><code>N:</code> Number of samples - must be less or equal to minimum size of two vectors.</li>
	        </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr> 

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>unsigned</b> vec1[3] = {1,2,3};
<b>unsigned</b> vec2[3] = {1,1,1};
<b>unsigned</b> vecDest[3];

Vector_Sub16(vecDest, vec1, vec2, 3);
</pre>
          </td>
        </tr>  

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

    </tbody>

    </table>

    <!-- kraj tabele -->


	<!-- -->


    <h3 id="vector_subtract32">Vector_Sub32</h3>


    <!-- tabela: Vector_Subtract -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>void</b> Vector_Sub32(<b>long</b> *outdata, <b>long</b> *indata1, <b>long</b> *indata2, <b>unsigned</b> N);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
		    	  <p>This function does subtraction of two vectors - subtracts each element of <code>indata2</code> vector from the corresponding element of <code>indata1</code> vector. The number of samples to process is given by the parameter <code>N</code>.</p>
            <p><b>outdata[n] = indata1[n] - indata2[n]</b>, n <font face="symbol">&#206;</font> [0, N-1]</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>outdata:</code> result vector - output array of 32-bit fixed-point elements in Q31 format.</li>
	        	<li><code>indata1:</code> first vector - first input array with 32-bit fixed-point elements in Q31 format.</li>
	        	<li><code>indata2:</code> second vector - second input array with 32-bit fixed-point elements in Q31 format.</li>
	        	<li><code>N:</code> Number of samples - must be less or equal to minimum size of two vectors.</li>
	        </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr> 

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>unsigned</b> vec1[3] = {1,2,3};
<b>unsigned</b> vec2[3] = {1,1,1};
<b>unsigned</b> vecDest[3];

Vector_Sub32(vecDest, vec1, vec2, 3);
</pre>
          </td>
        </tr>  

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>           

    </tbody>

    </table>

    <!-- kraj tabele -->


	<!--


    <h3 id="vectorscale">Vector_Scale</h3>



    <table class="routine" width="100%">

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>void</b> Vector_Scale(<b>unsigned</b> N, <b>int</b> ScaleValue, <b>unsigned</b> *SrcVector, <b>unsigned</b> *DestVector);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
	    		  <p>This function does vector scaling with scale value.</p>
            <p><b>dstV[n] = sclVal * srcV[n]</b>, n <font face="symbol">&#206;</font> [0, numElems-1]</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
				  <ul>
				  	<li><code>N:</code> buffer length (number of elements to be scaled)</li>
				  	<li><code>ScaleValue:</code> scale value</li>
				  	<li><code>SrcVector:</code> pointer to original vector</li>
				  	<li><code>DestVector:</code> pointer to scaled vector</li>
				  </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>unsigned</b> vec1[3] = {1,2,3};
<b>unsigned</b> vecDest[3];

Vector_Scale(3, 2, vec1, vecDest);
</pre>
          </td>
        </tr>   
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>           

    </tbody>

    </table>

	-->


    <h3 id="vector_negate16">Vector_Negate16</h3>


    <!-- tabela: Vector_Negate -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>void</b> Vector_Negate16(<b>int</b> *outdata, <b>int</b> *indata, <b>unsigned</b> N);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
			      <p>This function does negation of vector.</p>
            <p><b>outdata[n] = (-1)*indata[n] + 0</b>, n <font face="symbol">&#206;</font> [0, N)</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
				  <ul>
				  	<li><code>outdata:</code> pointer to result vector.</li>
				  	<li><code>indata:</code> pointer to original vector.</li>
				  	<li><code>N:</code> number of elements in vector(s).</li>
				  </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>int</b> vecDest[3];
<b>int</b> vec1[3] = {1,2,3};

Vector_Negate16(vecDest, vec1, 3);
</pre>
          </td>
        </tr>   
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>         

    </tbody>

    </table>

    <!-- kraj tabele -->


	<!-- -->


    <h3 id="vector_negate32">Vector_Negate32</h3>


    <!-- tabela: Vector_Negate -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>void</b> Vector_Negate32(<b>long</b> *outdata, <b>long</b> *indata, <b>unsigned</b> N);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
			      <p>This function does negation of vector.</p>
            <p><b>outdata[n] = (-1)*indata[n] + 0</b>, n <font face="symbol">&#206;</font> [0, N)</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
				  <ul>
				  	<li><code>outdata:</code> pointer to result vector.</li>
				  	<li><code>indata:</code> pointer to original vector.</li>
				  	<li><code>N:</code> number of elements in vector(s).</li>
				  </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>long</b> vecDest[3];
<b>long</b> vec1[3] = {1,2,3};

Vector_Negate32(vecDest, vec1, 3);
</pre>
          </td>
        </tr>   
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>        

    </tbody>

    </table>


    <h3 id="vector_mul16">Vector_Mul16</h3>


    <!-- tabela: Vector_Multiply -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>void</b> Vector_Mul16(<b>int</b> *outdata, <b>int</b> *indata1, <b>int</b> *indata2, <b>unsigned</b> N);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
  		    	<p>This function does multiplication of two vectors. Multiplies each Q15 element of indata1 by the corresponding element of indata2 and stores the results to outdata. <br>The number of samples to process is given by the parameter N.</p>
            <p><b>outdata[n] = indata1[n] * indata2[n]</b>, n <font face="symbol">&#206;</font> [0, N-1]</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>outdata:</code> pointer to output vector - array of 16-bit fixed-point elements in Q15 format.</li>
	        	<li><code>indata1:</code> pointer to first vector - array with 16-bit fixed-point elements in Q15 format.</li>
	        	<li><code>indata2:</code> pointer to second vector - array with 16-bit fixed-point elements in Q15 format.</li>
	        	<li><code>N:</code> number of samples in vector(s) (must be less or equal to minimum size of two vectors)</li>
	        </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>int</b> vec1[3] = {1,2,3};
<b>int</b> vec2[3] = {1,1,1};
<b>int</b> vConDest[10];

Vector_Mul16(vConDest vec1, vec2, 3); 
</pre>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>            

    </tbody>

    </table>

    <!-- kraj tabele -->


	<!-- -->


    <h3 id="vector_mul32">Vector_Mul32</h3>


    <!-- tabela: Vector_Multiply -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>void</b> Vector_Mul32(<b>long</b> *outdata, <b>long</b> *indata1, <b>long</b> *indata2, <b>unsigned</b> N);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
  		    	<p>This function does multiplication of two vectors. Multiplies each Q31 element of indata1 by the corresponding element of indata2 and stores the results to outdata. <br>The number of samples to process is given by the parameter N.</p>
            <p><b>outdata[n] = indata1[n] * indata2[n]</b>, n <font face="symbol">&#206;</font> [0, N-1]</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>outdata:</code> pointer to output vector - array of 32-bit fixed-point elements in Q31 format.</li>
	        	<li><code>indata1:</code> pointer to first vector - array with 32-bit fixed-point elements in Q31 format.</li>
	        	<li><code>indata2:</code> pointer to second vector - array with 32-bit fixed-point elements in Q31 format.</li>
	        	<li><code>N:</code> number of samples in vector(s) (must be less or equal to minimum size of two vectors)</li>
	        </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>long</b> vec1[3] = {1,2,3};
<b>long</b> vec2[3] = {1,1,1};
<b>long</b> vConDest[10];

Vector_Mul32(vConDest, vec1, vec2, 3); 
</pre>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>            

    </tbody>

    </table>

    <!-- kraj tabele -->


    <h3 id="vector_mulc16">Vector_MulC16</h3>


    <!-- tabela: Vector_Multiply -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>void</b> Vector_MulC16(<b>int</b> *outdata, <b>int</b> *indata1, <b>int</b> c, <b>unsigned</b> N);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
  		    	<p>Multiplies each Q15 element of indata by the Q15 constant c and stores the results to outdata. The number of samples to process is given by the parameter N.</p>
            <p><b>outdata[n] = indata1[n] * c</b>, n <font face="symbol">&#206;</font> [0, N-1]</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>outdata:</code> pointer to output vector - array of 16-bit fixed-point elements in Q15 format.</li>
	        	<li><code>indata1:</code> pointer to input vector - array with 16-bit fixed-point elements in Q15 format.</li>
	        	<li><code>c:</code> 15-bit fixed-point constant.</li>
	        	<li><code>N:</code> number of samples in vector(s) (must be less or equal to minimum size of the input vector).</li>
	        </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>const q15</b> c = 5;
<b>int</b> vec[3] = {1,2,3};
<b>int</b> vConDest[10];

Vector_MulC16(vConDest, vec, c, 3); 
</pre>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>            

    </tbody>

    </table>

    <!-- kraj tabele -->


	<!-- -->


    <h3 id="vector_mulc32">Vector_MulC32</h3>


    <!-- tabela: Vector_Multiply -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>void</b> Vector_MulC32(<b>long</b> *outdata, <b>long</b> *indata1, <b>long</b> c, <b>unsigned</b> N);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
  		    	<p>Multiplies each Q31 element of indata by the Q31 constant c and stores the results to outdata. The number of samples to process is given by the parameter N.</p>
            <p><b>outdata[n] = indata1[n] * c[n]</b>, n <font face="symbol">&#206;</font> [0, N-1]</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>outdata:</code> pointer to output vector - array of 32-bit fixed-point elements in Q31 format.</li>
	        	<li><code>indata1:</code> pointer to input vector - array with 32-bit fixed-point elements in Q31 format.</li>
	        	<li><code>c:</code> 32-bit fixed-point constant.</li>
	        	<li><code>N:</code> number of samples in vector(s) (must be less or equal to minimum size of the input vector).</li>
	        </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>const long</b> c = 5;
<b>long</b> vec[3] = {1,2,3};
<b>long</b> vConDest[10];

Vector_MulC32(vConDest, vec, c, 3); 
</pre>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>            

    </tbody>

    </table>

    <!-- kraj tabele -->


    <h3 id="vector_min16">Vector_Min16</h3>


    <!-- tabela: Vector_Min16 -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>int</b> Vector_Min16(<b>int</b> *indata, <b>unsigned</b> N, <b>unsigned</b> *MinIndex);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
		      	<p>This function finds minimal value in vector.</p>
            <p><b>minVal = min (indata[n])</b>, n <font face="symbol">&#206;</font> [0, N-1]<br><br>
	          If <code>indata[i]</code> = <code>indata[j]</code> = <code>minVal</code>, and <code>i</code> &lt; <code>j</code>, then <code>MinIndex</code> = <code>j</code>.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>indata:</code> pointer to original vector.</li>
	        	<li><code>N:</code> number of elements in vector.</li>
	        	<li><code>MinIndex:</code> pointer to index of minimum value.</li>
	        </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Minimum value (<code>minVal</code>).</p>
          </td>
        </tr>  

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>unsigned</b> vec1[3] = {1,2,3};
<b>unsigned</b> index;
<b>unsigned</b> rslt;

rslt = Vector_Min16(vec1, 3, &index);
</pre>
          </td>
        </tr>          
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>        

    </tbody>

    </table>

    <!-- kraj tabele -->


	<!-- -->


    <h3 id="vector_min32">Vector_Min32</h3>


    <!-- tabela: Vector_Min32 -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>long</b> Vector_Min32(<b>long</b> *indata, <b>unsigned</b> N, <b>unsigned</b> *MinIndex);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
		      	<p>This function finds minimal value in vector.</p>
            <p><b>minVal = min (indata[n])</b>, n <font face="symbol">&#206;</font> [0, N-1]<br><br>
	          If <code>indata[i]</code> = <code>indata[j]</code> = <code>minVal</code>, and <code>i</code> &lt; <code>j</code>, then <code>MinIndex</code> = <code>j</code>.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>indata:</code> pointer to original vector.</li>
	        	<li><code>N:</code> number of elements in vector.</li>
	        	<li><code>MinIndex:</code> pointer to index of minimum value.</li>
	        </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Minimum value (<code>minVal</code>).</p>
          </td>
        </tr>  

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>long</b> vec1[3] = {1,2,3};
<b>unsigned</b> index;
<b>long</b> rslt;

rslt = Vector_Min32(vec1, 3, &index);
</pre>
          </td>
        </tr>          
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>            

    </tbody>

    </table>

    <!-- kraj tabele -->


    <h3 id="vector_max16">Vector_Max16</h3>


    <!-- tabela: Vector_Max -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>int</b> Vector_Max16(<b>int</b> *indata, <b>unsigned</b> N, <b>unsigned</b> *MaxIndex);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
			      <p>This function find maximal value in vector.</p>
				  	<p><b>maxVal = max (indata[n])</b>, n <font face="symbol">&#206;</font> [0, N-1]<br><br>
	          If <code>indata[i]</code> = <code>indata[j]</code> = <code>maxVal</code>, and <code>i</code> &lt; <code>j</code>, then <code>MaxIndex</code> = <code>j</code>.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>indata:</code> pointer to original vector.</li>
	        	<li><code>N:</code> number of elements in vector(s).</li>
	        	<li><code>MaxIndex:</code> pointer to index of maximum value.</li>
	        </ul>      
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Maximum value (<code>maxVal</code>).</p>
          </td>
        </tr>         

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>int</b> vec1[3] = {1,2,3};
<b>unsigned</b> index;
<b>int</b> rslt;

rslt = Vector_Max16(vec1, 3, &index);
</pre>
          </td>
        </tr>          
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

    </tbody>

    </table>

    <!-- kraj tabele -->


	<!-- -->


    <h3 id="vector_max32">Vector_Max32</h3>


    <!-- tabela: Vector_Max -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>long</b> Vector_Max32(<b>long</b> *indata, <b>unsigned</b> N, <b>unsigned</b> *MaxIndex);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
			      <p>This function find maximal value in vector.</p>
				  	<p><b>maxVal = max (indata[n])</b>, n <font face="symbol">&#206;</font> [0, N-1]<br><br>
	          If <code>indata[i]</code> = <code>indata[j]</code> = <code>maxVal</code>, and <code>i</code> &lt; <code>j</code>, then <code>MaxIndex</code> = <code>j</code>.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>indata:</code> pointer to original vector.</li>
	        	<li><code>N:</code> number of elements in vector(s).</li>
	        	<li><code>MaxIndex:</code> pointer to index of maximum value.</li>
	        </ul>      
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Maximum value (<code>maxVal</code>).</p>
          </td>
        </tr>         

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>long</b> vec1[3] = {1,2,3};
<b>unsigned</b> index;
<b>long</b> rslt;

rslt = Vector_Max32(vec1, 3, &index);
</pre>
          </td>
        </tr>          
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

    </tbody>

    </table>

    <!-- kraj tabele -->


    <h3 id="vector_dotp16">Vector_Dotp16</h3>


    <!-- tabela: Vector_Dot16 -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>int</b> Vector_Dotp16(<b>int</b> *indata1, <b>int</b> *indata2, <b>unsigned</b> N, <b>unsigned</b> scale);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
  		    	<p>Computes the dot product of the Q15 vectors indata1 and indata2. The number of samples to process is given by the parameter N. The scale parameter specifies the amount of right shift applied to the final result.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>indata1:</code> pointer to first vector - array with 16-bit fixed point elements in Q15 format.</li>
	        	<li><code>indata2:</code> pointer to second vector - array with 16-bit fixed point elements in Q15 format.</li>
	        	<li><code>N:</code> number of samples in vector(s).</li>
	        	<li><code>scale:</code> Scaling factor: divide the result by 2<sup>scale</sup>.</li>
	        </ul>		
          </td>
        </tr>
  
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Scaled result of the calculation in fractional Q15 format :
              <br><br><img src="img/math/math5.gif" align="absmiddle">
            </p>  
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>int</b> vec2[3] = {1,1,1};
<b>int</b> rslt;

q15 = Vector_Dotp16(vec2,vec2,3);
</pre>
          </td>
        </tr>    
  
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>          

    </tbody>

    </table>

    <!-- kraj tabele -->


    <h3 id="vector_dotp32">Vector_Dotp32</h3>


    <!-- tabela: Vector_Dot16 -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>long</b> Vector_Dotp32(<b>long</b> *indata1, <b>long</b> *indata2, <b>unsigned</b> N, <b>unsigned</b> scale);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
  		    	<p>Computes the dot product of the Q31 vectors indata1 and indata2. The number of samples to process is given by the parameter N. The scale parameter specifies the amount of right shift applied to the final result.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>indata1:</code> pointer to first vector - array with 32-bit fixed point elements in Q31 format.</li>
	        	<li><code>indata2:</code> pointer to second vector - array with 32-bit fixed point elements in Q31 format.</li>
	        	<li><code>N:</code> number of samples in vector(s).</li>
	        	<li><code>scale:</code> Scaling factor: divide the result by 2<sup>scale</sup>.</li>
	        </ul>		
          </td>
        </tr>
  
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Scaled result of the calculation in fractional Q31 format :
              <br><br><img src="img/math/math5.gif" align="absmiddle">
            </p>  
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>long</b> vec2[3] = {1,1,1};
<b>long</b> rslt;

rslt = Vector_Dotp32(vec2,vec2,3);
</pre>
          </td>
        </tr>    
  
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>          

    </tbody>

    </table>

    <!-- kraj tabele -->

	<!-- -->


    <h3 id="vector_correlate16">Vector_Correlate16</h3>


    <!-- tabela: Vector_Correlate -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> Vector_Correlate16(<b>int</b> *outdata, <b>int</b> *indata1, <b>int</b> N1, <b>int</b> *indata2, <b>int</b> N2);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
			      <p>Function calculates Vector correlation (using convolution).</p>
            <p><img src="img/math/math6.gif" align="absmiddle"> 
  				  <br>where:
	      	  <br><code>x[n]</code> defined for n <font face="symbol">&#206;</font> [0, N)<br>
	          <code>y[n]</code> defined for n <font face="symbol">&#206;</font> [0, M), M <font face="symbol">&#163;</font> N<br>
	          <code>r[n]</code> defined for n <font face="symbol">&#206;</font> [0, N+M-1)<br></p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>outdata:</code> pointer to result vector - array with 16-bit fixed point elements in Q15 format.</li>
	        	<li><code>indata1:</code> pointer to first vector - array with 16-bit fixed point elements in Q15 format.</li>
	        	<li><code>N1:</code> number of the first vector elements.</li>
	        	<li><code>indata2:</code> pointer to second vector - array with 16-bit fixed point elements in Q15 format.</li>
	        	<li><code>N2:</code> number of the second vector elements.</li>
	        </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>int</b> vConDest[10];
<b>int</b> vec2[3] = {1,1,1};

Vector_Correlate16(vConDest, vec2, 3, vec2, 3); 
</pre>
          </td>
        </tr>          
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

    </tbody>

    </table>

    <!-- kraj tabele -->


    <h3 id="vector_correlate32">Vector_Correlate32</h3>


    <!-- tabela: Vector_Correlate -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> Vector_Correlate32(<b>long</b> *outdata, <b>long</b> *indata1, <b>long</b> N1, <b>long</b> *indata2, <b>int</b> N2);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
			      <p>Function calculates Vector correlation (using convolution).</p>
            <p><img src="img/math/math6.gif" align="absmiddle"> 
  				  <br>where:
	      	  <br><code>x[n]</code> defined for n <font face="symbol">&#206;</font> [0, N)<br>
	          <code>y[n]</code> defined for n <font face="symbol">&#206;</font> [0, M), M <font face="symbol">&#163;</font> N<br>
	          <code>r[n]</code> defined for n <font face="symbol">&#206;</font> [0, N+M-1)<br></p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>outdata:</code> pointer to result vector - array with 32-bit fixed point elements in Q31 format.</li>
	        	<li><code>indata1:</code> pointer to first vector - array with 32-bit fixed point elements in Q31 format.</li>
	        	<li><code>N1:</code> number of the first vector elements.</li>
	        	<li><code>indata2:</code> pointer to second vector - array with 32-bit fixed point elements in Q31 format.</li>
	        	<li><code>N2:</code> number of the second vector elements.</li>
	        </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>long</b> vConDest[10];
<b>long</b> vec2[3] = {1,1,1};

Vector_Correlate16(vConDest, vec2, 3, vec2, 3); 
</pre>
          </td>
        </tr>          
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

    </tbody>

    </table>

    <!-- kraj tabele -->


	<!-- -->


    <h3 id="vector_convolve16">Vector_Convolve16</h3>


    <!-- tabela: Vector_Convolve -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>void</b> Vector_Convolve16(<b>int</b> *outdata, <b>int</b> *indata1, <b>int</b> N1, <b>int</b> indata2, <b>int</b> N2);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
			      <p>Function calculates Vector using convolution.</p>
            <p><img src="img/math/math7.gif" align="absmiddle">, n <font face="symbol">&#206;</font> [0, M)
            <br><img src="img/math/math8.gif" align="absmiddle">, n <font face="symbol">&#206;</font> [M, N)           
            <br><img src="img/math/math9.gif" align="absmiddle">,	n <font face="symbol">&#206;</font> [N, N+M-1) </p>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>outdata:</code> pointer to result vector - array with 16-bit fixed point elements in Q15 format.</li>
	        	<li><code>indata1:</code> pointer to first vector - array with 16-bit fixed point elements in Q15 format.</li>
	        	<li><code>N1:</code> number of the first vector elements.</li>
	        	<li><code>indata2:</code> pointer to second vector - array with 16-bit fixed point elements in Q15 format.</li>
	        	<li><code>N2:</code> number of the second vector elements.</li>
	        </ul>
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>int</b> vec2[3] = {1,1,1};
<b>int</b> vConDest2[10];

Vector_Convolve16(vConDest2, vec2, 3, vec2, 3); 
</pre>
          </td>
        </tr>    

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  
        	    
    </tbody>

    </table>

    <!-- kraj tabele -->


	<!-- -->


    <h3 id="vector_convolve32">Vector_Convolve32</h3>


    <!-- tabela: Vector_Convolve -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>void</b> Vector_Convolve32(<b>long</b> *outdata, <b>long</b> *indata1, <b>int</b> N1, <b>long</b> *indata2, <b>int</b> N2);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
			      <p>Function calculates Vector using convolution.</p>
            <p><img src="img/math/math7.gif" align="absmiddle">, n <font face="symbol">&#206;</font> [0, M)
            <br><img src="img/math/math8.gif" align="absmiddle">, n <font face="symbol">&#206;</font> [M, N)           
            <br><img src="img/math/math9.gif" align="absmiddle">,	n <font face="symbol">&#206;</font> [N, N+M-1) </p>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>outdata:</code> pointer to result vector - array with 32-bit fixed point elements in Q31 format.</li>
	        	<li><code>indata1:</code> pointer to first vector - array with 32-bit fixed point elements in Q15 format.</li>
	        	<li><code>N1:</code> number of the first vector elements.</li>
	        	<li><code>indata2:</code> pointer to second vector - array with 32-bit fixed point elements in Q31 format.</li>
	        	<li><code>N2:</code> number of the second vector elements.</li>
	        </ul>
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>long</b> vec2[3] = {1,1,1};
<b>long</b> vConDest2[10];

Vector_Convolve32(vConDest2, vec2, 3, vec2, 3); 
</pre>
          </td>
        </tr>    

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  
        	    
    </tbody>

    </table>

    <!-- kraj tabele -->


	<!-- -->


    <h3 id="vector_add16">Vector_Add16</h3>


    <!-- tabela: Vector_Add -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>void</b> Vector_Add16(<b>int</b> *outdata, <b>int</b> *indata1, <b>int</b> *indata2, <b>unsigned</b> N);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
		    	<p>Function calculates vector addition.
          <p><b>outdata[n] = indata1[n] + indata2[n]</b>, n <font face="symbol">&#206;</font> [0, N-1]</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>outdata:</code> pointer to result vector</li>
	        	<li><code>indata1:</code> pointer to first vector</li>
	        	<li><code>indata2:</code> pointer to second vector</li>
	        	<li><code>N:</code> number of vector(s) elements</li>
	        </ul>	
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>int</b> vec1[3] = {1,2,3};
<b>int</b> vec2[3] = {1,1,1};
<b>int</b> vecDest[3];

Vector_Add16(vecDest, vec1, vec2, 3);
</pre>
          </td>
        </tr>    

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>       

    </tbody>

    </table>

    <h3 id="vector_add32">Vector_Add32</h3>


    <!-- tabela: Vector_Add -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>void</b> Vector_Add32(<b>long</b> *outdata, <b>long</b> *indata1, <b>long</b> *indata2, <b>unsigned</b> N);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
		    	<p>Function calculates vector addition.
          <p><b>outdata[n] = indata1[n] + indata2[n]</b>, n <font face="symbol">&#206;</font> [0, N-1]</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>outdata:</code> pointer to result vector</li>
	        	<li><code>indata1:</code> pointer to first vector</li>
	        	<li><code>indata2:</code> pointer to second vector</li>
	        	<li><code>N:</code> number of vector(s) elements</li>
	        </ul>	
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>long</b> vec1[3] = {1,2,3};
<b>long</b> vec2[3] = {1,1,1};
<b>long</b> vecDest[3];

Vector_Add32(vecDest, vec1, vec2, 3);
</pre>
          </td>
        </tr>    

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>         

    </tbody>

    </table>

    <!-- kraj tabele -->


    <h3 id="vector_addc16">Vector_AddC16</h3>


    <!-- tabela: Vector_AddC16 -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>void</b> Vector_AddC16(<b>int</b> *outdata, <b>int</b> *indata1, <b>int</b> c, <b>unsigned</b> N);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
		    	<p>Function adds the Q15 constant c to all elements of indata. The number of samples to process is given by the parameter N.
          <p><b>outdata[n] = indata[n] + C</b>, n <font face="symbol">&#206;</font> [0, N-1]</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>outdata:</code> pointer to result vector - array of 16-bit fixed-point elements in Q15 format.</li>
	        	<li><code>indata:</code> pointer to input vector - array of 16-bit fixed-point elements in Q15 format.</li>
	        	<li><code>c:</code> constant added to all elements of the vector.</li>
	        	<li><code>N:</code> number of vector(s) elements</li>
	        </ul>	
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>int</b> vec1[3] = {1,2,3};
<b>int</b> c = 5;
<b>int</b> vecDest[3];

Vector_AddC16(vecDest, vec1, c, 3);
</pre>
          </td>
        </tr>    

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>         

    </tbody>

    </table>


    <h3 id="vector_addc32">Vector_AddC32</h3>


    <!-- tabela: Vector_AddC16 -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>void</b> Vector_AddC32(<b>long</b> *outdata, <b>long</b> *indata1, <b>long</b> c, <b>unsigned</b> N);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
		    	<p>Function adds the Q31 constant c to all elements of indata. The number of samples to process is given by the parameter N.
          <p><b>outdata[n] = indata[n] + C</b>, n <font face="symbol">&#206;</font> [0, N-1]</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>outdata:</code> pointer to result vector - array of 32-bit fixed-point elements in Q31 format.</li>
	        	<li><code>indata:</code> pointer to input vector - array of 32-bit fixed-point elements in Q31 format.</li>
	        	<li><code>c:</code> constant added to all elements of the vector.</li>
	        	<li><code>N:</code> number of vector(s) elements</li>
	        </ul>	
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>long</b> vec1[3] = {1,2,3};
<b>long</b> c = 5;
<b>long</b> vecDest[3];

Vector_AddC32(vecDest, vec1, c, 3);
</pre>
          </td>
        </tr>    

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>         

    </tbody>

    </table>

    <h3 id="vector_abs16">Vector_Abs16</h3>


    <!-- tabela: Vector_Abs16 -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>void</b> Vector_Abs16(<b>int</b> *outdata, <b>int</b> *indata1, <b>unsigned</b> N);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
		    	  <p>Computes the absolute value of each element of indata and stores it to outdata. The number of samples to process is given by the parameter N.
            <p><b>outdata[n] = abs(indata[n])</b>, n <font face="symbol">&#206;</font> [0, N-1]</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>outdata:</code> pointer to result vector - array of 16-bit fixed-point elements in Q15 format.</li>
	        	<li><code>indata:</code> pointer to input vector - array of 16-bit fixed-point elements in Q15 format.</li>
	        	<li><code>N:</code> number of vector(s) elements.</li>
	        </ul>	
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>int</b> vec1[3] = {-1,2,-3};
<b>int</b> vecDest[3];

Vector_Abs16(vecDest, vec1, 3);
</pre>
          </td>
        </tr>    

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>          

    </tbody>

    </table>


    <h3 id="vector_abs32">Vector_Abs32</h3>


    <!-- tabela: Vector_Abs32 -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>void</b> Vector_Abs32(<b>long</b> *outdata, <b>long</b> *indata, <b>unsigned</b> N);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
		    	  <p>Computes the absolute value of each element of indata and stores it to outdata. The number of samples to process is given by the parameter N.
            <p><b>outdata[n] = abs(indata[n])</b>, n <font face="symbol">&#206;</font> [0, N-1]</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>outdata:</code> pointer to result vector - array of 32-bit fixed-point elements in Q31 format.</li>
	        	<li><code>indata:</code> pointer to input vector - array of 32-bit fixed-point elements in Q31 format.</li>
	        	<li><code>N:</code> number of vector(s) elements</li>
	        </ul>	
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>long</b> vec1[3] = {-1,2,-3};
<b>long</b> vecDest[3];

Vector_Abs32(vecDest, vec1, 3);
</pre>
          </td>
        </tr>    

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>        

    </tbody>

    </table>

    <!-- kraj tabele -->

    <!-- -->


    <h3 id="vector_sum_squares16">Vector_Sum_Squares16</h3>


    <!-- tabela: Vector_Sum_Squares16 -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>int</b> Vector_Sum_Squares16(<b>int</b> *indata, <b>unsigned</b> N, <b>unsigned</b> scale);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
		    	  <p>Computes the sum of squared values of all elements of indata. The number of samples to process is given by the parameter N. The scale parameter specifies the amount of right shift applied to the final result.
            <p><img src="img/math/math11.gif" align="absmiddle"></p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>indata:</code> pointer to input vector - array of 16-bit fixed-point elements in Q15 format.</li>
	        	<li><code>N:</code> number of vector(s) elements.</li>
	        	<li><code>scale:</code> Scaling factor: divide the result by 2<sup>scale</sup>.</li>
	        </ul>	
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Scaled result of the calculation in fractional Q15 format.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>int</b> vec1[3] = {-1,2,-3};
<b>int</b> res;

res = Vector_Sum_Squares16(vec1, 3, 1);
</pre>
          </td>
        </tr>    

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>          

    </tbody>

    </table>


    <h3 id="vector_sum_squares32">Vector_Sum_Squares32</h3>


    <!-- tabela: Vector_Sum_Squares32 -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>long</b> Vector_Sum_Squares32(<b>long</b> *indata, <b>unsigned</b> N, <b>unsigned</b> scale);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
		    	  <p>Computes the sum of squared values of all elements of indata. The number of samples to process is given by the parameter N. The scale parameter specifies the amount of right shift applied to the final result.
            <p><img src="img/math/math11.gif" align="absmiddle"></p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
	        <ul>
	        	<li><code>indata:</code> pointer to input vector - array of 32-bit fixed-point elements in Q31 format.</li>
	        	<li><code>N:</code> number of vector(s) elements.</li>
	        	<li><code>scale:</code> Scaling factor: divide the result by 2<sup>scale</sup>.</li>
	        </ul>	
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Scaled result of the calculation in fractional Q31 format.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
<b>long</b> vec1[3] = {-1,2,-3};
<b>long</b> res;

res = Vector_Sum_Squares32(vec1, 3, 1);
</pre>
          </td>
        </tr>    

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>         

    </tbody>

    </table>

    <h3>Library Example</h3>

<pre class = "program">
<b>int</b> Q15_1[4] = {0xC000, 0x2000, 0xF000, 0x0800};
<i>//                -0.5;   0.25; -0.125; 0.0625;</i>
<b>int</b> Q15_2[4] = {0x999A, 0x3333, 0xE666, 0x0CCD};
<i>//             ~(-0.8);   ~0.4; ~(-0.2);  ~0.1;</i>

<b>long</b> Q31_1[4] = {0xC0000000, 0x20000000, 0xF0000000, 0x08000000};
<i>//                     -0.5;       0.25;     -0.125;     0.0625;</i>
<b>long</b> Q31_2[4] = {0x999A0000, 0x33330000, 0xE6660000, 0x0CCD0000};
<i>//                  ~(-0.8);       ~0.4;    ~(-0.2);       ~0.1;</i>

<b>int</b>  Q15_Out[7], i, N;
<b>long</b> Q31_Out[7], l;
<b>unsigned</b> scale, index;

<b>void</b> main() {
  N = 4;
  Vector_Abs16(Q15_Out, Q15_1, N);
  <i>// Q15_Out = {0x4000, 0x2000, 0x1000, 0x0800}</i>
  
  Vector_Add16(Q15_Out, Q15_1, Q15_2, N);
  <i>// Q15_Out = {0x599A, 0x5334, 0xD666, 0x14CD}</i>
  <i>// Q15_Out[0] = 0x5334 -&#62; overflow</i>
  
  Vector_AddC32(Q31_Out, Q31_1, 0xC0000000, N);
  <i>// Q31_Out = {0x80000000, 0xE0000000, 0xB0000000, 0xC8000000}</i>
  
  scale = 2;
  l = Vector_Dotp32(Q31_1, Q31_2, N, scale);
  <i>// l = 1/(2^scale) * sum_k(Q31_1[k]*Q31_2[k]) = 0x10FFF400 &#60;- 0.1328125</i>
  
  Vector_Mul16(Q15_Out, Q15_1, Q15_2, N);
  <i>// Q15_Out = {0x3333, 0x0CCC, 0x0333, 0x00CC}</i>
  
  Vector_Sub16(Q15_Out, Q15_1, Q15_2, N);
  <i>// Q15_Out = {0x2666, 0xECCD, 0x099A, 0xFB33}</i>
  
  scale = 3;
  i = Vector_Sum_Squares16(Q15_1, N, scale);
  <i>// i = 1/(2^scale)*sum_K(Q15_1[k]^2) = 0x0550 &#60;- 0.0415039</i>
  
  Vector_Set16(Q15_Out, N, 0xA0A0);
  <i>// Q15_Out = {0xA0A0, 0xA0A0, 0xA0A0, 0xA0A0}</i>
  
  i = Vector_Min16(Q15_1, N, &#38;index);
  <i>// i = 0xC000; index = 0;</i>
  
  l = Vector_Max32(Q31_1, N, &#38;index);
  <i>// l = 0x20000000; index = 1;</i>
  
  Vector_Negate16(Q15_Out, Q15_1, N);
  <i>// Q15_Out = {0x4000, 0xE000, 0x1000, 0xF800}</i>
}
</pre>

    <div class="feedback">
            Copyright (c) 2002-2019 mikroElektronika. All rights reserved.
      <br>What do you think about this topic ?  <a href="https://helpdesk.mikroe.com/conversation/new/3" target="_blank">Send us feedback!</a>
    </div>

      <div class="libstock">Want more examples and libraries?&nbsp;
     <br>Find them on
     <a href="http://www.libstock.com/" target="_blank"><img alt="LibStock - A place for the code" src="img/libstock.gif" border="0" align="absmiddle"></a>
    </div>

  </div><!--/main-->




</body>

</html>
