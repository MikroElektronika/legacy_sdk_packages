
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<head>

<title>FIR Filter Library</title>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="Copyright" content="mikroElektronika 2006.">
<meta name="Author" content="Marko Jovanovic. mailto:office@mikroe.com">

<link rel="stylesheet" type="text/css" href="css/help_c_ARM.css">

<script defer type="text/javascript" src="css/pngfix.js"></script>


	






<style type="text/css">
#top {
  background:transparent url(template/c_ARM.png); 
}

.title{
	PADDING-RIGHT: 2px; 
	PADDING-LEFT: 70px; 
	FONT-WEIGHT: bold; 
	FONT-SIZE: 14px; 
	PADDING-BOTTOM: 3px; 
	PADDING-TOP: 0px; 
	FONT-FAMILY: Verdana;
  color:white;
}

.navigation{
                     PADDING-TOP: -5px;
	PADDING-RIGHT: 2px; 
	PADDING-LEFT: 63px; 
	FONT-SIZE: 11px; 
	FONT-FAMILY: Verdana;
                     color:white;
}

.navigation a:link {text-decoration: none; color: white;}
.navigation a:visited {text-decoration: none; color: white;}
.navigation a:active {text-decoration: none; color: white;}
.navigation a:hover {text-decoration: none; color: white; background:black;}

.nav_bar {
}

#top td p,td pre {
	margin:0 0 0 0;
}
</style>

<style type="text/css" media="screen">
#main{
	border-top: 1px solid #000000;
    padding-left: 15px;
    padding-right: 15px;
	position: absolute;
	top: 59px;
	right: 0px;
	bottom: 0px;
	left: 0px;

	width: expression(document.body.offsetWidth - 3);
	height: expression(document.body.offsetHeight -  65);
	overflow: auto;
}
</style>

</head>


<body>

<div id="top">
<table height="60" width="100%">
  <tbody>
	  <tr>
		  <td>
			  <pre class="nav_bar"><div class="title">FIR Filter Library</div><div class="navigation">&nbsp;&nbsp;<A href="mikroc_libraries.htm">mikroC PRO for ARM Libraries</A> &gt; <A href="dsp_library.htm">DSP Libraries</A> &gt; </div></pre>
			</td>
		  <td style="WIDTH: 120px" align="right">
			  <pre class="nav_bar"><A href="dsp_library.htm" title="Previous"><img src="template\btn_prev_n.png" border="0"></a>&nbsp;<A title="Top of the Page" href="#top_of_page" alt="Top of the Page"><IMG src="template/btn_up_n.png" border=0 ></a>&nbsp;<A href="iir_filter_library.htm" title="Next"><img src="template\btn_next_n.png" border="0"></a></pre>
			</td>
		</tr>
	</tbody>
</table>
</div>

	


  <div id="main">

    
    <a name="top_of_page"><h2>FIR Filter Library</h2></a>

    <p>This library implements the Finite Impulse Response (FIR) filters for Q15 data type. Fast versions of Q15 is provided on Cortex-M4. 
    <br>The functions operate on blocks of input and output data and each call to the function processes <code>blockSize</code> samples through the filter. Pointers <code>pSrc</code> and <code>pDst</code> point to input and output arrays containing blockSize values.</p>

    <h3>Algorithm</h3>	

    <p>The FIR filter algorithm is based upon a sequence of multiply-accumulate (MAC) operations. Each filter coefficient <code>b[n]</code> is multiplied by a state variable which equals a previous input sample <code>x[n]</code> :</p>
<pre class="program">
y[n] = b[0]*x[n] + b[1]*x[n-1] + b[2]*x[n-2] + ...+ b[numTaps-1]*x[n-numTaps+1]   
</pre>

    <p>pCoeffs points to a coefficient array of size <code>numTaps</code>. Coefficients are stored in time reversed order :</p>

<pre class="program">
{b[numTaps-1], b[numTaps-2], b[N-2], ..., b[1], b[0]}   
</pre>

    <p><code>pState</code> points to a state array of size <code>numTaps + blockSize - 1</code>. Samples in the state buffer are stored in the following order :</p>

<pre class="program">
x[n-numTaps+1], x[n-numTaps], x[n-numTaps-1], x[n-numTaps-2]....x[0], x[1], ..., x[blockSize-1]   
</pre>

    <p>Note that the length of the state buffer exceeds the length of the coefficient array by <code>blockSize-1</code>. The increased state buffer length allows circular addressing, which is traditionally used in the FIR filters, 
    <br>to be avoided and yields a significant speed improvement. The state variables are updated after each block of data is processed; the coefficients are untouched.</p>

    <h3>Instance Structure</h3>

    <p>The coefficients and state variables for a filter are stored together in an instance data structure. A separate instance structure must be defined for each filter. 
    <br>Coefficient arrays may be shared among several instances while state variable arrays cannot be shared.</p>

    <h3>Initialization Function</h3>

    <p>There is also an associated initialization function for Q15 data type. The initialization function performs the following operations :</p>
    <ul>
    	<li>Sets the values of the internal structure fields,</li>
    	<li>Zeros out the values in the state buffer.</li>
    </ul>

   <p>Use of the initialization function is optional. However, if the initialization function is used, then the instance structure cannot be placed into a const data section. 
   <br>To place an instance structure into a const data section, the instance structure must be manually initialized. Set the values in the state buffer to zeros before static initialization.</p>
   
   <p>The code below statically initializes Q15 data type filter instance structure :</p>

<pre class="program">
TFIR_Instance firInstance = {numTaps, pState, pCoeffs};
</pre>

    <p>where :</p>
    <ul>
    	<li><code>numTaps</code> is the number of filter coefficients in the filter; </li>
    	<li><code>pState</code> is the address of the state buffer;</li>
    	<li><code>pCoeffs</code> is the address of the coefficient buffer.</li>
    </ul>

    <h3>Fixed-Point Behavior</h3>

    <p>Care must be taken when using Q15 fixed-point FIR filter functions. In particular, the overflow and saturation behavior of the accumulator must be considered. Refer to the function descriptions below for usage guidelines.</p>
    
    <h3>Scaling and Overflow Behavior</h3>

    <p>This fast Q15 library uses a 32-bit accumulator with 2.30 format. The accumulator maintains full precision of the intermediate multiplication results but provides only a single guard bit. 
    <br>Thus, if the accumulator result overflows it wraps around and distorts the result. In order to avoid overflows completely the input signal must be scaled down by <code>log2(numTaps)</code> bits. 
    <br>The 2.30 accumulator is then truncated to 2.15 format and saturated to yield the 1.15 result.</p>


    <h3>Library Routines</h3>

    <ul>
    	<li><a href="#fir_init">FIR_Init</a></li>
    	<li><a href="#fir_fast">FIR_Fast</a></li>
    </ul>


    <!-- -->


    <h3 id="fir_init">FIR_Init</h3>


    <!-- tabela: FIR_Init -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>char</b> FIR_Init(TFIR_Instance *firInstance, uint16_t numTaps, q15_t *pCoeffs, q15_t *pState, uint32_t blockSize);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
           <p>This function initializes FIR filter.</p> 
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <ul>
           		<li><code>firInstance:</code> points to an instance of the the Q15 FIR filter structure.</li>
           	  <li><code>numTaps:</code> Number of filter coefficients in the filter.</li>
           		<li><code>pCoeffs:</code> points to the filter coefficients buffer.</li>
           		<li><code>pState</code> points to the state buffer.</li>
           		<li><code>blockSize:</code> the number of samples that are processed per call.</li>
           	</ul>

    <p>pCoeffs points to the array of filter coefficients stored in time reversed order :</p>

<pre class="program">
{b[numTaps-1], b[numTaps-2], b[N-2], ..., b[1], b[0]}   
</pre> 
<p>Note that <code>numTaps</code> must be even and greater than or equal to 4. To implement an odd length filter simply increase <code>numTaps</code> by 1 and set the last coefficient to zero. For example, to implement a filter with <code>numTaps=3</code> and coefficients :</p>
<pre class="program">
{0.3, -0.8, 0.3}   
</pre> 
<p>set <code>numTaps=4</code> and use the coefficients :</p>
<pre class="program">
{0.3, -0.8, 0.3, 0}.   
</pre> 

<p>Similarly, to implement a two point filter :</p>
<pre class="program">
{0.3, -0.3}   
</pre> 
<p>set <code>numTaps=4</code> and use the coefficients :</p>
<pre class="program">
{0.3, -0.3, 0, 0}.   
</pre>
<p><code>pState</code> points to the array of state variables. <code>pState</code> is of length <code>numTaps+blockSize-1</code>, where <code>blockSize</code> is the number of input samples processed by each call of <code><a href="#arm_fir_fast_q15">arm_fir_fast_q15</a></code>.</p>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <ul>
            	<li><code>0</code> - if initialization is successful.</li>
             	<li><code>1</code> - if <code>numTaps </code> is not even or if is less than 4.</li> 
            </ul>
          </td>
        </tr>       

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
#define BLOCK_SIZE          32
#define NUM_TAPS            30

<b>const</b> q15_t firCoeffsQ15[NUM_TAPS] = {
0xFFC4, 0xFFCC, 0x0000, 0x0079, 0x0109, 0x0118, 0x0000, 0xFDC6,
0xFBA1, 0xFBBB, 0x0000, 0x08A8, 0x137B, 0x1C89, 0x2010, 0x1C89,
0x137B, 0x08A8, 0x0000, 0xFBBB, 0xFBA1, 0xFDC6, 0x0000, 0x0118,
0x0109, 0x0079, 0x0000, 0xFFCC, 0xFFC4, 0x0000
};

q15_t firStateQ15[BLOCK_SIZE + NUM_TAPS - 1];
TFIR_Instance S;

<i>// Call FIR init function to initialize the instance structure</i>
FIR_Init(&#38;S, numTaps, (q15_t *) firCoeffsQ15, firStateQ15, blockSize);
</pre>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>

    </tbody>

    </table>

    <!-- kraj tabele -->      

    <!-- -->


    <h3 id="fir_fast">FIR_Fast</h3>


    <!-- tabela: FIR_Fast -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<p><b>void</b> FIR_Fast(<b>const</b> TFIR_Instance *firInstance, q15_t *pSrc, q15_t *pDst, uint32_t blockSize);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
			      <p>This function applies FIR filter.</p> 
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <ul>
           		<li><code>firInstance:</code> points to an instance of the Q15 FIR filter structure.</li>
           	  <li><code>pSrc:</code> points to the block of input data.</li>
           		<li><code>pDst:</code> points to the block of output data.</li>
           		<li><code>blockSize:</code> number of samples to process per call.</li>
           	</ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>       

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
<pre>
#define TEST_LENGTH_SAMPLES 320
#define BLOCK_SIZE          32
#define NUM_TAPS            30

q15_t inputQ15[TEST_LENGTH_SAMPLES];
q15_t outputQ15[TEST_LENGTH_SAMPLES];
TFIR_Instance S;
uint32_t i;
uint32_t numBlocks = TEST_LENGTH_SAMPLES/BLOCK_SIZE;

<i>// Call the FIR process function for every blockSize samples</i>
<b>for</b>(i=0; i &#60; numBlocks; i++) {
  FIR_Fast(&#38;S, inputQ15 + (i * blockSize), outputQ15 + (i * blockSize), blockSize);
}
</pre>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>

    </tbody>

    </table>

    <!-- kraj tabele -->     

    <div class="feedback">
            Copyright (c) 2002-2019 mikroElektronika. All rights reserved.
      <br>What do you think about this topic ?  <a href="https://helpdesk.mikroe.com/conversation/new/3" target="_blank">Send us feedback!</a>
    </div>

      <div class="libstock">Want more examples and libraries?&nbsp;
     <br>Find them on
     <a href="http://www.libstock.com/" target="_blank"><img alt="LibStock - A place for the code" src="img/libstock.gif" border="0" align="absmiddle"></a>
    </div>

  </div><!--/main-->




</body>

</html>
