
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<head>

<title>T6963C Graphic Lcd Library</title>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="Copyright" content="mikroElektronika 2005.">
<meta name="Author" content="Nikola Topalovic. mailto:office@mikroe.com">

<link rel="stylesheet" type="text/css" href="css/help_c_pic32.css">

<script defer type="text/javascript" src="css/pngfix.js"></script>


	






<style type="text/css">
#top {
  background:transparent url(template/background_c_PIC32.png); 
}

.title{
	PADDING-RIGHT: 2px; 
	PADDING-LEFT: 70px; 
	FONT-WEIGHT: bold; 
	FONT-SIZE: 14px; 
	PADDING-BOTTOM: 3px; 
	PADDING-TOP: 0px; 
	FONT-FAMILY: Verdana;
  color:white;
}

.navigation{
                     PADDING-TOP: -5px;
	PADDING-RIGHT: 2px; 
	PADDING-LEFT: 63px; 
	FONT-SIZE: 11px; 
	FONT-FAMILY: Verdana;
                     color:white;
}

.navigation a:link {text-decoration: none; color: white;}
.navigation a:visited {text-decoration: none; color: white;}
.navigation a:active {text-decoration: none; color: white;}
.navigation a:hover {text-decoration: none; color: white; background:black;}

.nav_bar {
}

#top td p,td pre {
	margin:0 0 0 0;
}
</style>

<style type="text/css" media="screen">
#main{
	border-top: 1px solid #000000;
    padding-left: 15px;
    padding-right: 15px;
	position: absolute;
	top: 59px;
	right: 0px;
	bottom: 0px;
	left: 0px;

	width: expression(document.body.offsetWidth - 3);
	height: expression(document.body.offsetHeight -  65);
	overflow: auto;
}
</style>

</head>

<body>

<div id="top">
<table height="60" width="100%">
  <tbody>
	  <tr>
		  <td>
			  <pre class="nav_bar"><div class="title">T6963C Graphic Lcd Library</div><div class="navigation">&nbsp;&nbsp;<A href="mikroc_libraries.htm">mikroC PRO for PIC32 Libraries</A> &gt; <A href="mikroC_hardware_libraries.htm">Hardware Libraries</A> &gt; </div></pre>
			</td>
		  <td style="WIDTH: 120px" align="right">
			  <pre class="nav_bar"><A href="stmpe610_library.htm" title="Previous"><img src="template\btn_prev_n.png" border="0"></a>&nbsp;<A title="Top of the Page" href="#top_of_page" alt="Top of the Page"><IMG src="template/btn_up_n.png" border=0 ></a>&nbsp;<A href="tft_library.htm" title="Next"><img src="template\btn_next_n.png" border="0"></a></pre>
			</td>
		</tr>
	</tbody>
</table>
</div>

	


  <div id="main">


    <a name="top_of_page"><h2>T6963C Graphic <acronym title="Liquid Crystal Display">Lcd</acronym> Library</h2></a>

    <p>The mikroC PRO for PIC32 provides a library for working with Glcds 
    based on TOSHIBA T6963C controller. The Toshiba T6963C is a very popular Lcd 
    controller for the use in small graphics modules. It is capable of controlling 
    displays with a resolution up to 240x128. Because of its low power and small 
    outline it is most suitable for mobile applications such as PDAs, MP3 
    players or mobile measurement equipment. Although small, this contoller has 
    a capability of displaying and merging text and graphics and it manages 
    all the interfacing signals to the displays Row and Column drivers.</p>
    

    <div style="border: 1.00pt solid #cccccc; padding: 5.00pt; background: #f5f2ec">
	    <img src="img/note.gif" align="absmiddle"><b>&nbsp;&nbsp;Important :</b> 
      <ul>
      	<li>When using this library with PIC32 family of <acronym title="MicroController Unit">MCU</acronym>s be aware of their voltage incompatibility with certain number of T6963C based Glcd modules. So, additional external power supply for these modules may be required.</li>
      	<li>ChipEnable(CE), FontSelect(FS) and Reverse(MD) have to be set to appropriate levels by the user outside of the T6963C_Init() function. See the Library Example code at the bottom of this page.</li>
      	<li>Glcd size based initialization routines can be found in setup library files located in the Uses folder.</li>
      	<li>The user must make sure that used MCU has appropriate ports and pins. If this is not the case the user should adjust initialization routines.</li>
      </ul>
    </div>
    <br>Some mikroElektronika's adapter boards have pinout different from T6369C datasheets. Appropriate relations between these labels are given in the table below :
                <table>
                  <tr align="center">
                  	<th><b>Adapter Board</b></th>
										<th><b>T6369C datasheet</b></th>
                  </tr>
									<tr align="center">
                  	<td>RS</td>
										<td>C/D</td>
                  </tr>
									<tr align="center">
                  	<td>R/W</td>
										<td>/RD</td>
                  </tr>
									<tr align="center">
                  	<td>E</td>
										<td>/WR</td>
                  </tr>
                </table>
    
    <!-- -->

    <p></p>
    <h3>Library Dependency Tree</h3>
    <p></p>
    <img alt="T6963C Library Dependency Tree" src="img/dependencies/t6963c_dependency.gif">  
    <p></p>

    <h3>External dependencies of T6963C Graphic Lcd Library</h3>


    <!-- tabela: Ext_depend -->

    <table class="Dependencies" width="75%">

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="40%">The following variables must be defined in all projects using T6963C Graphic Lcd library:</th>
          <th width="30%">Description : </th>
          <th width="30%">Example : </th>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td align="left"><code><b>extern sfr atomic unsigned long</b> T6963C_dataPort;</code></td>
          <td align="left">T6963C Data Port.</td>
          <td align="left"><code><b>char</b> T6963C_dataPort <b>at</b> PORTB;</code></td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td align="left"><code><b>extern sfr atomic sbit</b> T6963C_ctrlwr;</code></td>
          <td align="left">Write signal.</td>
          <td align="left"><code><b>sbit</b> T6963C_ctrlwr <b>at</b> LATF2_bit;</code></td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td align="left"><code><b>extern sfr atomic sbit</b> T6963C_ctrlrd;</code></td>
          <td align="left">Read signal.</td>
          <td align="left"><code><b>sbit</b> T6963C_ctrlrd <b>at</b> LATF1_bit;</code></td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td align="left"><code><b>extern sfr atomic sbit</b> T6963C_ctrlcd;</code></td>
          <td align="left">Command/Data signal.</td>
          <td align="left"><code><b>sbit</b> T6963C_ctrlcd <b>at</b> LATF0_bit;</code></td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td align="left"><code><b>extern sfr atomic sbit</b> T6963C_ctrlrst;</code></td>
          <td align="left">Reset signal.</td>
          <td align="left"><code><b>sbit</b> T6963C_ctrlrst <b>at</b> LATF4_bit;</code></td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td align="left"><code><b>extern sfr atomic sbit</b> T6963C_ctrlwr_Direction;</code></td>
          <td align="left">Direction of the Write pin.</td>
          <td align="left"><code><b>sbit</b> T6963C_ctrlwr_Direction <b>at</b> TRISF2_bit;</code></td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td align="left"><code><b>extern sfr atomic sbit</b> T6963C_ctrlrd_Direction;</code></td>
          <td align="left">Direction of the Read pin.</td>
          <td align="left"><code><b>sbit</b> T6963C_ctrlrd_Direction <b>at</b> TRISF1_bit;</code></td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td align="left"><code><b>extern sfr atomic sbit</b> T6963C_ctrlcd_Direction;</code></td>
          <td align="left">Direction of the Command/Data pin.</td>
          <td align="left"><code><b>sbit</b> T6963C_ctrlcd_Direction <b>at</b> TRISF0_bit;</code></td>
        </tr>
        
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td align="left"><code><b>extern sfr atomic sbit</b> T6963C_ctrlrst_Direction;</code></td>
          <td align="left">Direction of the Reset pin.</td>
          <td align="left"><code><b>sbit</b> T6963C_ctrlrst_Direction <b>at</b> TRISF4_bit;</code></td>
        </tr>
        
      </tbody>

    </table>
    
  
    <!-- kraj tabele -->


    <!-- -->


    <h3>Library Routines</h3>

    <ul>
      <li><a href="#t6963c_init">T6963C_init</a></li>
      <li><a href="#t6963c_writedata">T6963C_writeData</a></li>
      <li><a href="#t6963c_writecommand">T6963C_writeCommand</a></li>
      <li><a href="#t6963c_setptr">T6963C_setPtr</a></li>
      <li><a href="#t6963C_set_ext_buffer">T6963C_Set_Ext_Buffer</a></li>
      <li><a href="#t6963c_waitready">T6963C_waitReady</a></li>
      <li><a href="#t6963c_fill">T6963C_fill</a></li>
      <li><a href="#t6963c_dot">T6963C_dot</a></li>
      <li><a href="#t6963c_set_font_adv">T6963C_Set_Font_Adv</a></li>
      <li><a href="#T6963C_set_ext_font_adv">T6963C_Set_Font_Ext_Adv</a></li>
      <li><a href="#t6963c_write_char">T6963C_write_char</a></li>
      <li><a href="#t6963c_write_char_adv">T6963C_Write_Char_Adv</a></li>
			<li><a href="#t6963c_write_text">T6963C_write_text</a></li>
			<li><a href="#t6963c_write_text_adv">T6963C_Write_Text_Adv</a></li>
			<li><a href="#t6963c_line">T6963C_line</a></li>
			<li><a href="#t6963c_rectangle">T6963C_rectangle</a></li>
			<li><a href="#t6963c_rectangle_round_edges">T6963C_rectangle_round_edges</a></li>
			<li><a href="#t6963c_rectangle_round_edges_fill">T6963C_rectangle_round_edges_fill</a></li>
			<li><a href="#t6963c_box">T6963C_box</a></li>
			<li><a href="#t6963c_circle">T6963C_circle</a></li>
			<li><a href="#t6963c_circle_fill">T6963C_circle_fill</a></li>
			<li><a href="#t6963c_image">T6963C_image</a></li>
			<li><a href="#t6963c_ext_image">T6963C_Ext_Image</a></li>
			<li><a href="#t6963c_partialimage">T6963C_PartialImage</a></li>
			<li><a href="#t6963c_ext_partialimage">T6963C_Ext_PartialImage</a></li>
			<li><a href="#t6963c_sprite">T6963C_sprite</a></li>
			<li><a href="#t6963c_set_cursor">T6963C_set_cursor</a></li>
		</ul>
		
    <p>The following low level library routines are implemented as macros. These macros can be found in the <code>__T6963C.h</code> header file which is located in the T6963C example projects folders.</p> 

		<ul>	
			<li><a href="#t6963c_clearbit">T6963C_clearBit</a></li>      
			<li><a href="#t6963c_setbit">T6963C_setBit</a></li> 
			<li><a href="#t6963c_negbit">T6963C_negBit</a></li>
			<li><a href="#t6963c_displaygrpanel">T6963C_displayGrPanel</a></li>
			<li><a href="#t6963c_displaytxtpanel">T6963C_displayTxtPanel</a></li>
			<li><a href="#t6963c_setgrpanel">T6963C_setGrPanel</a></li>
			<li><a href="#t6963c_settxtpanel">T6963C_setTxtPanel</a></li>
			<li><a href="#t6963c_panelfill">T6963C_panelFill</a></li>
			<li><a href="#t6963c_grfill">T6963C_grFill</a></li>
			<li><a href="#t6963c_txtfill">T6963C_txtFill</a></li>
			<li><a href="#t6963c_cursor_height">T6963C_cursor_height</a></li>
			<li><a href="#t6963c_graphics">T6963C_graphics</a></li>
			<li><a href="#t6963c_text">T6963C_text</a></li>
			<li><a href="#t6963c_cursor">T6963C_cursor</a></li>
			<li><a href="#t6963c_cursor_blink">T6963C_cursor_blink</a></li>
    </ul>
    
    <!-- -->


    <h3 id="t6963c_init">T6963C_init</h3>


    <!-- tabela: T6963C_Init -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_init(<b>unsigned int</b> width, <b>unsigned char</b> height, <b>unsigned char</b> fntW);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>
						 Initalizes the Graphic Lcd controller.</p> 
						 Display RAM organization:<br>
						 The library cuts the RAM into panels : a complete panel is one graphics panel followed by a text panel (see schematic below).
						</p> 
						<pre>
+---------------------+ /\
+ GRAPHICS PANEL #0   +  |
+                     +  |
+                     +  |
+                     +  |
+---------------------+  | PANEL 0
+ TEXT PANEL #0       +  |
+                     + \/   
+---------------------+ /\  
+ GRAPHICS PANEL #1   +  |
+                     +  |
+                     +  |
+                     +  |
+---------------------+  | PANEL 1
+ TEXT PANEL #1       +  |
+                     +  |
+---------------------+ \/            	
            </pre>            
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>width:</code> width of the Glcd panel</li>
              <li><code>height:</code> height of the Glcd panel</li>
              <li><code>fntW:</code> font width</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Global variables :
            	<ul>
                <li><code>T6963C_dataPort:</code> Data Port</li>
                <li><code>T6963C_ctrlwr:</code> Write signal pin</li>
                <li><code>T6963C_ctrlrd:</code> Read signal pin</li>
                <li><code>T6963C_ctrlcd:</code> Command/Data signal pin</li>
                <li><code>T6963C_ctrlrst:</code> Reset signal pin</li>
                <br>
                <li><code>T6963C_ctrlwr_Direction:</code> Direction of Write signal pin</li>
                <li><code>T6963C_ctrlrd_Direction:</code> Direction of Read signal pin</li>
                <li><code>T6963C_ctrlcd_Direction:</code> Direction of Command/Data signal pin</li>
                <li><code>T6963C_ctrlrst_Direction:</code> Direction of Reset signal pin</li>                
              </ul>
              must be defined before using this function.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// T6963C module connections</i>
<b>char</b> T6963C_dataPort <b>at</b> PORTB;                   <i>// DATA port</i>

<b>sbit</b> T6963C_ctrlwr  <b>at</b> LATF2_bit;                <i>// WR write signal</i>
<b>sbit</b> T6963C_ctrlrd  <b>at</b> LATF1_bit;                <i>// RD read signal</i>
<b>sbit</b> T6963C_ctrlcd  <b>at</b> LATF0_bit;                <i>// CD command/data signal</i>
<b>sbit</b> T6963C_ctrlrst <b>at</b> LATF4_bit;                <i>// RST reset signal</i>
<b>sbit</b> T6963C_ctrlwr_Direction  <b>at</b> TRISF2_bit;     <i>// WR write signal</i>
<b>sbit</b> T6963C_ctrlrd_Direction  <b>at</b> TRISF1_bit;     <i>// RD read signal</i>
<b>sbit</b> T6963C_ctrlcd_Direction  <b>at</b> TRISF0_bit;     <i>// CD command/data signal</i>
<b>sbit</b> T6963C_ctrlrst_Direction <b>at</b> TRISF4_bit;     <i>// RST reset signal</i>

<i>// Signals not used by library, they are set in main function</i>
<b>sbit</b> T6963C_ctrlce <b>at</b> LATF3_bit;                 <i>// CE signal</i>
<b>sbit</b> T6963C_ctrlfs <b>at</b> LATF6_bit;                 <i>// FS signal</i>
<b>sbit</b> T6963C_ctrlmd <b>at</b> LATF5_bit;                 <i>// MD signal</i>
<b>sbit</b> T6963C_ctrlce_Direction  <b>at</b> TRISF3_bit;     <i>// CE signal direction</i>
<b>sbit</b> T6963C_ctrlfs_Direction  <b>at</b> TRISF6_bit;     <i>// FS signal direction</i>
<b>sbit</b> T6963C_ctrlmd_Direction  <b>at</b> TRISF5_bit;     <i>// MD signal direction</i>
<i>// End T6963C module connections</i>
       
...
<i>// init display for 240 pixel width, 128 pixel height and 8 bits character width</i>
T6963C_init(240, 128, 8);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="t6963c_writedata">T6963C_writeData</h3>


    <!-- tabela: T6963C_WriteData -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_writeData(<b>unsigned char</b> mydata);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Writes data to T6963C controller.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>mydata:</code> data to be written</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_writeData(AddrL);</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="t6963c_writecommand">T6963C_writeCommand</h3>


    <!-- tabela: T6963C_WriteCommand  -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_writeCommand(<b>unsigned char</b> mydata);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Writes command to T6963C controller.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>mydata:</code> command to be written</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_writeCommand(T6963C_CURSOR_POINTER_SET);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="t6963c_setptr">T6963C_setPtr</h3>


    <!-- tabela: T6963C_SetPtr -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_setPtr(<b>unsigned int</b> p, <b>unsigned char</b> c);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Sets the memory pointer <code>p</code> for command <code>p</code>.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>p:</code> address where command should be written</li>
           		<li><code>c:</code> command to be written</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_setPtr(T6963C_grHomeAddr + start, T6963C_ADDRESS_POINTER_SET);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


    <h3 id="t6963C_set_ext_buffer">T6963C_Set_Ext_Buffer</h3>


    <!-- tabela: T6963C_Set_Ext_Buffer -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_Set_Ext_Buffer(<b>char</b>* (*getExtDataPtr)(<b>unsigned long</b> offset, <b>unsigned long</b> count, <b>unsigned</b> long* num));</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Function sets pointer to the user function which manipulates the external resource.</p>
            <p>Parameters :
              <ul>
	              <li><code>offset</code> - offset from the beginning of the resource from where the data is requested.</li>
	              <li><code>count</code> - requested number of bytes.</li>
	              <li><code>num</code> - variable for holding the returned number ob byte (less or equal to the number of acqired bytes).</li>
              </ul>
            </p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_Init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<b>char</b>* ReadExternalBuffer(<b>unsigned long</b> offset, <b>unsigned int</b> count, <b>unsigned int</b> *num){
  <b>unsigned long</b> start_sector;
  <b>unsigned int</b> pos;

  start_sector = Mmc_Get_File_Write_Sector() + offset/512;
  pos = (<b>unsigned long</b>)offset%512;

  <b>if</b>(start_sector == currentSector+1){
    Mmc_Multi_Read_Buffer(EXT_BUFFER);
    currentSector = start_sector;
  }<b>else</b>
    <b>if</b>(start_sector != currentSector){
      Mmc_Multi_Read_Stop();
      Mmc_Multi_Read_Start(start_sector);
      Mmc_Multi_Read_Buffer(EXT_BUFFER);
      currentSector = start_sector;
    }

  <b>if</b>(count&#62;512-pos){
    *num = 512-pos;
  }
  <b>else</b>
    *num = count;

  <b>return</b> EXT_BUFFER+pos;
}

T6963C_Set_Ext_Buffer(ReadExternalBuffer);
</pre>

          </td>
        </tr>

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="t6963c_waitready">T6963C_waitReady</h3>


    <!-- tabela: T6963C_WaitReady  -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_waitReady();</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Pools the status byte, and loops until Toshiba Glcd module is ready.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_waitReady();</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="t6963c_fill">T6963C_fill</h3>


    <!-- tabela: T6963C_Fill -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_fill(<b>unsigned char</b> v, <b>unsigned int</b> start, <b>unsigned int</b> len);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Fills controller memory block with given byte.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>v:</code> byte to be written</li>
           		<li><code>start:</code> starting address of the memory block</li>
           		<li><code>len:</code> length of the memory block in bytes</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_fill(0x33,0x00FF,0x000F);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="t6963c_dot">T6963C_dot</h3>


    <!-- tabela: T6963C_Dot -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_dot(<b>int</b> x, <b>int</b> y, <b>unsigned char</b> color);</p>
         </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Draws a dot in the current graphic panel of Glcd at coordinates (x, y). </p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>x:</code> dot position on x-axis</li>
          		<li><code>y:</code> dot position on y-axis</li>
           		<li><code>color:</code> color parameter. Valid values: T6963C_BLACK, T6963C_WHITE and T6963C_INVERT.</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_dot(x0, y0, pcolor);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


    <h3 id="t6963c_set_font_adv">T6963C_Set_Font_Adv</h3>


    <!-- tabela: T6963C_Set_Font_Adv -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_Set_Font_Adv(<b>const char</b> *activeFont, <b>unsigned char</b> font_color, <b>char</b> font_orientation);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Sets font that will be used with <a href="#t6963c_write_char_adv">T6963C_Write_Char_Adv</a> and <a href="#t6963c_write_text_adv">T6963C_Write_Text_Adv</a> routines.</p>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>activeFont:</code> font to be set. Needs to be formatted as an array of char.</li>
           		<li><code>font_color:</code> sets font color.</li>
           		<li><code>font_orientation:</code> sets font orientation.</li>
            </ul>
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Glcd needs to be initialized, see <a href="#t6963c_init">T6963C_Init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>T6963C_Set_Font_Adv(&myfont, 1, 0);</pre>

          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>    

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->

    <h3 id="t6963c_set_ext_font_adv">T6963C_Set_Ext_Font_Adv</h3>


    <!-- tabela: T6963C_Set_Font -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_Set_Ext_Font_Adv(<b>unsigned long</b> activeFont, <b>unsigned int</b> font_color, <b>char</b> font_orientation);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Sets font that will be used with <a href="#t6963c_write_char_adv">T6963C_Write_Char_Adv</a> and <a href="#t6963c_write_text_adv">T6963C_Write_Text_Adv</a> routines.  Font is located in an external resource.</p>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>activeFont:</code> font to be set. This parameter represents the address in the exteral resource from where the font data begins.</li>
           		<li><code>font_color:</code> sets font color.</li>
           		<li><code>font_orientation:</code> sets font orientation.</li>
            </ul>
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Glcd needs to be initialized, see <a href="#t6963c_init">T6963C_Init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_Set_Ext_Font_Adv(173296, 5, 7, 32);
</pre>

          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>    

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="t6963c_write_char">T6963C_write_char</h3>


    <!-- tabela: T6963C_Write_Char -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_write_char(<b>unsigned char</b> c, <b>unsigned char</b> x, <b>unsigned char</b> y, <b>unsigned char</b> mode);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Writes a char in the current text panel of Glcd at coordinates (x, y).</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>c:</code> char to be written</li>
           		<li><code>x:</code> char position on x-axis</li>
           		<li><code>y:</code> char position on y-axis</li>
           		<li><code>mode:</code> mode parameter. Valid values: T6963C_ROM_MODE_OR, T6963C_ROM_MODE_XOR, T6963C_ROM_MODE_AND and T6963C_ROM_MODE_TEXT</li>
            </ul>
            <p>Mode parameter explanation:
            	<ul>
            		<li>OR Mode: In the OR-Mode, text and graphics can be displayed and the data is logically "OR-ed". This is the most common way of combining text and graphics for example labels on buttons.</li>
                <li>XOR-Mode: In this mode, the text and graphics data are combined via the logical "exclusive OR". This can be useful to display text in the negative mode, i.e. white text on black background.</li>
                <li>AND-Mode: The text and graphic data shown on display are combined via the logical "AND function".</li>
                <li>TEXT-Mode: This option is only available when displaying just a text. The Text Attribute values are stored in the graphic area of display memory.</li>
              </ul>
            For more details see the T6963C datasheet.
            </p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_write_char('A',22,23,T6963C_ROM_MODE_AND);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


    <h3 id="t6963c_write_char_adv">T6963C_write_char_adv</h3>


    <!-- tabela: T6963C_Write_Char -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_write_char_adv(<b>unsigned char</b> c, <b>unsigned int</b> x, <b>unsigned int</b> y);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Writes a char in the current text panel of Glcd at coordinates (x, y).</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>c:</code> char to be written</li>
           		<li><code>x:</code> char position on x-axis</li>
           		<li><code>y:</code> char position on y-axis</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_write_char_adv('A',22,23);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="t6963c_write_text">T6963C_write_text</h3>


    <!-- tabela: T6963C_Write_Text -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_write_text(<b>unsigned char</b> *str, <b>unsigned int</b> x, <b>unsigned int</b> y, <b>unsigned char</b> mode);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Writes text in the current text panel of Glcd at coordinates (x, y).</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>str:</code> text to be written</li>
           		<li><code>x:</code> text position on x-axis</li>
           		<li><code>y:</code> text position on y-axis</li>
           		<li><code>mode:</code> mode parameter. Valid values: T6963C_ROM_MODE_OR, T6963C_ROM_MODE_XOR, T6963C_ROM_MODE_AND and T6963C_ROM_MODE_TEXT</li>
            </ul>
            <p>Mode parameter explanation:
            	<ul>
            		<li>OR Mode: In the OR-Mode, text and graphics can be displayed and the data is logically "OR-ed". This is the most common way of combining text and graphics for example labels on buttons.</li>
                <li>XOR-Mode: In this mode, the text and graphics data are combined via the logical "exclusive OR". This can be useful to display text in the negative mode, i.e. white text on black background.</li>
                <li>AND-Mode: The text and graphic data shown on display are combined via the logical "AND function".</li>
                <li>TEXT-Mode: This option is only available when displaying just a text. The Text Attribute values are stored in the graphic area of display memory.</li>
              </ul>
              For more details see the T6963C datasheet.
            </p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">            
<pre>
T6963C_write_text("Glcd LIBRARY DEMO, WELCOME !", 0, 0, T6963C_ROM_MODE_XOR);	
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="t6963c_write_text_adv">T6963C_Write_Text_Adv</h3>


    <!-- tabela: T6963C_Write_Text -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_Write_Text_Adv(<b>unsigned char</b> *text, <b>unsigned int</b> x, <b>unsigned int</b> y);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Writes text in the current text panel of Glcd at coordinates (x, y).</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>str:</code> text to be written</li>
           		<li><code>x:</code> text position on x-axis</li>
           		<li><code>y:</code> text position on y-axis</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">            
<pre>
T6963C_Write_Text_Adv("Glcd LIBRARY DEMO, WELCOME !", 0, 0);	
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="t6963c_line">T6963C_line</h3>


    <!-- tabela: T6963C_Line -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p>void T6963C_line(<b>int</b> x0, <b>int</b> y0, <b>int</b> x1, <b>int</b> y1, <b>unsigned char</b> pcolor);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Draws a line from (x0, y0) to (x1, y1).</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>x0:</code> x coordinate of the line start</li>
           		<li><code>y0:</code> y coordinate of the line end</li>
           		<li><code>x1:</code> x coordinate of the line start</li>
           		<li><code>y1:</code> y coordinate of the line end</li>
           		<li><code>pcolor:</code> color parameter. Valid values: T6963C_BLACK, T6963C_WHITE and T6963C_INVERT.</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_line(0, 0, 239, 127, T6963C_WHITE);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="t6963c_rectangle">T6963C_rectangle</h3>


    <!-- tabela: T6963C_Rectangle -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_rectangle(<b>int</b> x0, <b>int</b> y0, <b>int</b> x1, <b>int</b> y1, <b>unsigned char</b> pcolor);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Draws a rectangle on Glcd.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>x0:</code> x coordinate of the upper left rectangle corner</li>
           		<li><code>y0:</code> y coordinate of the upper left rectangle corner</li>
           		<li><code>x1:</code> x coordinate of the lower right rectangle corner</li>
           		<li><code>y1:</code> y coordinate of the lower right rectangle corner</li>
           		<li><code>pcolor:</code> color parameter. Valid values: T6963C_BLACK, T6963C_WHITE and T6963C_INVERT.</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
						<p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_rectangle(20, 20, 219, 107, T6963C_WHITE);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


     <!-- -->


    <h3 id="t6963c_rectangle_round_edges">T6963C_rectangle_round_edges</h3>


    <!-- tabela: T6963C_rectangle_round_edges -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_rectangle_round_edges(<b>int</b> x0, <b>int</b> y0, <b>int</b> x1, <b>int</b> y1, <b>int</b> round_radius, <b>unsigned char</b> pcolor);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Draws a rounded edge rectangle on Glcd.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>x0:</code> x coordinate of the upper left rectangle corner</li>
           		<li><code>y0:</code> y coordinate of the upper left rectangle corner</li>
           		<li><code>x1:</code> x coordinate of the lower right rectangle corner</li>
           		<li><code>y1:</code> y coordinate of the lower right rectangle corner</li>
           		<li><code>round_radius:</code> radius of the rounded edge.</li>
           		<li><code>pcolor:</code> color parameter. Valid values: T6963C_BLACK, T6963C_WHITE and T6963C_INVERT.</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
						<p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_rectangle_round_edges(20, 20, 219, 107, 12, T6963C_WHITE);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


     <!-- -->


    <h3 id="t6963c_rectangle_round_edges_fill">T6963C_rectangle_round_edges_fill</h3>


    <!-- tabela: T6963C_rectangle_round_edges -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_rectangle_round_edges_fill(<b>int</b> x0, <b>int</b> y0, <b>int</b> x1, <b>int</b> y1, <b>int</b> round_radius, <b>unsigned char</b> pcolor);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Draws a filled rounded edge rectangle on Glcd.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>x0:</code> x coordinate of the upper left rectangle corner</li>
           		<li><code>y0:</code> y coordinate of the upper left rectangle corner</li>
           		<li><code>x1:</code> x coordinate of the lower right rectangle corner</li>
           		<li><code>y1:</code> y coordinate of the lower right rectangle corner</li>
           		<li><code>round_radius:</code> radius of the rounded edge</li>
           		<li><code>pcolor:</code> color parameter. Valid values: T6963C_BLACK, T6963C_WHITE and T6963C_INVERT.</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
						<p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_rectangle_round_edges_fill(20, 20, 219, 107, 12, T6963C_WHITE);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="t6963c_box">T6963C_box</h3>


    <!-- tabela: T6963C_Box -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_box(<b>int</b> x0, <b>int</b> y0, <b>int</b> x1, <b>int</b> y1, <b>unsigned char</b> pcolor);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Draws a box on the Glcd</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>x0:</code> x coordinate of the upper left box corner</li>
           		<li><code>y0:</code> y coordinate of the upper left box corner</li>
           		<li><code>x1:</code> x coordinate of the lower right box corner</li>
           		<li><code>y1:</code> y coordinate of the lower right box corner</li>
           		<li><code>pcolor:</code> color parameter. Valid values: T6963C_BLACK, T6963C_WHITE and T6963C_INVERT.</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_box(0, 119, 239, 127, T6963C_WHITE);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="t6963c_circle">T6963C_circle</h3>


    <!-- tabela: T6963C_Circle -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_circle(<b>int</b> x, <b>int</b> y, <b>long</b> r, <b>unsigned char</b> pcolor);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Draws a circle on the Glcd.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>x:</code> x coordinate of the circle center</li>
           		<li><code>y:</code> y coordinate of the circle center</li>
           		<li><code>r:</code> radius size</li>
           		<li><code>pcolor:</code> color parameter. Valid values: T6963C_BLACK, T6963C_WHITE and T6963C_INVERT.</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_circle(120, 64, 110, T6963C_WHITE);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="t6963c_circle_fill">T6963C_circle_fill</h3>


    <!-- tabela: T6963C_circle_fill -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_circle_fill(<b>int</b> x, <b>int</b> y, <b>long</b> r, <b>unsigned char</b> pcolor);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Draws a filled circle on the Glcd.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>x:</code> x coordinate of the circle center</li>
           		<li><code>y:</code> y coordinate of the circle center</li>
           		<li><code>r:</code> radius size</li>
           		<li><code>pcolor:</code> color parameter. Valid values: T6963C_BLACK, T6963C_WHITE and T6963C_INVERT.</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_circle_fill(120, 64, 110, T6963C_WHITE);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="t6963c_image">T6963C_image</h3>


    <!-- tabela: T6963C_Image -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_image(<b>const code char</b> *pic);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Displays bitmap on Glcd.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
          	<ul>
           		<li><code>pic:</code> image to be displayed. Bitmap array can be located in both code and RAM memory (due to the mikroC PRO for PIC32 pointer to const and pointer to RAM equivalency).</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_image(my_image);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>Image dimension must match the display dimension.</p>
            <p>Use the integrated Glcd Bitmap Editor (menu option <b>Tools&#160;&#8250;&#160;Glcd Bitmap Editor</b>) to convert image to a constant array suitable for displaying on Glcd.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->

    <!-- -->


    <h3 id="t6963c_ext_image">T6963C_Ext_Image</h3>


    <!-- tabela: T6963C_Image -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_Ext_Image(<b>unsigned long</b> image);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Displays a bitmap from an external resource.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
          	<ul>
           		<li><code>pic:</code> image to be displayed. This parameter represents the address in the exteral resource from where the image data begins.</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_Ext_image(153608);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>Image dimension must match the display dimension.</p>
            <p>Use the integrated Glcd Bitmap Editor (menu option <b>Tools&#160;&#8250;&#160;Glcd Bitmap Editor</b>) to convert image to a constant array suitable for displaying on Glcd.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->

    <!-- -->


    <h3 id="t6963c_partialimage">T6963C_PartialImage</h3>


    <!-- tabela: T6963C_PartialImage -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_PartialImage(<b>unsigned int</b> x_left, <b>unsigned int</b> y_top, <b>unsigned int</b> width, <b>unsigned int</b> height, <b>unsigned int</b> picture_width, <b>unsigned int</b> picture_height, <b>code const far char</b> image);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Displays a partial area of the image on a desired location.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
          	<ul>
            	<li><code>x_left:</code> x coordinate of the desired location (upper left coordinate).</li>
            	<li><code>y_top:</code> y coordinate of the desired location (upper left coordinate).</li>
            	<li><code>width:</code> desired image width.</li>
            	<li><code>height:</code> desired image height.</li>
            	<li><code>picture_width:</code> width of the original image.</li>
            	<li><code>picture_height:</code> height of the original image.</li>
            	<li><code>image:</code> image to be displayed. Bitmap array can be located in both code and RAM memory (due to the mikroC PRO for PIC32 pointer to const and pointer to RAM equivalency).</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See <a href="#t6963c_init">T6963C_init</a> routine.</p></p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// Draws a 10x15 part of the image starting from the upper left corner on the coordinate (10,12). Original image size is 16x32.</i> 
T6963C_PartialImage(10, 12, 10, 15, 16, 32, image);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>Image dimension must match the display dimension.</p>
            <p>Use the integrated Glcd Bitmap Editor (menu option <b>Tools&#160;&#8250;&#160;Glcd Bitmap Editor</b>) to convert image to a constant array suitable for displaying on Glcd.</p>
          </td>
        </tr> 

      </tbody>

    </table>

    <!-- kraj tabele -->

    <!-- -->


    <h3 id="t6963c_ext_partialimage">T6963C_Ext_PartialImage</h3>


    <!-- tabela: T6963C_PartialImage -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_Ext_PartialImage(<b>unsigned int</b> x_left, <b>unsigned int</b> y_top, <b>unsigned int</b> width, <b>unsigned int</b> height, <b>unsigned int</b> picture_width, <b>unsigned int</b> picture_height, <b>unsigned long</b> image);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Displays a partial area of the image (from an external resource) on a desired location.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
          	<ul>
            	<li><code>x_left:</code> x coordinate of the desired location (upper left coordinate).</li>
            	<li><code>y_top:</code> y coordinate of the desired location (upper left coordinate).</li>
            	<li><code>width:</code> desired image width.</li>
            	<li><code>height:</code> desired image height.</li>
            	<li><code>picture_width:</code> width of the original image.</li>
            	<li><code>picture_height:</code> height of the original image.</li>
            	<li><code>image:</code> image to be displayed. This parameter represents the address in the exteral resource from where the image data begins.</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See <a href="#t6963c_init">T6963C_init</a> routine.</p></p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_Ext_PartialImage(10, 12, 10, 15, 16, 32, 0);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>Image dimension must match the display dimension.</p>
            <p>Use the integrated Glcd Bitmap Editor (menu option <b>Tools&#160;&#8250;&#160;Glcd Bitmap Editor</b>) to convert image to a constant array suitable for displaying on Glcd.</p>
          </td>
        </tr> 

      </tbody>

    </table>

    <!-- kraj tabele -->

    <!-- -->


    <h3 id="t6963c_sprite">T6963C_sprite</h3>


    <!-- tabela: T6963C_Sprite -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_sprite(<b>unsigned char</b> px, <b>unsigned char</b> py, <b>const code char</b> *pic, <b>unsigned char</b> sx, <b>unsigned char</b> sy);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Fills graphic rectangle area (px, py) to (px+sx, py+sy) with custom size picture.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>px:</code> x coordinate of the upper left picture corner. Valid values: multiples of the font width</li>
           		<li><code>py:</code> y coordinate of the upper left picture corner</li>
           		<li><code>pic:</code> picture to be displayed</li>
          		<li><code>sx:</code> picture width. Valid values: multiples of the font width</li>
           		<li><code>sy:</code> picture height</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_sprite(76, 4, einstein, 88, 119); <i>// draw a sprite</i>
</pre>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>If <code>px</code> and <code>sx</code> parameters are not multiples of the font width they will be scaled to the nearest lower number that is a multiple of the font width.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="t6963c_set_cursor">T6963C_set_cursor</h3>


    <!-- tabela: T6963C_Set_Cursor -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_set_cursor(<b>unsigned char</b> x, <b>unsigned char</b> y);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Sets cursor to row x and column y.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>x:</code> cursor position row number</li>
           		<li><code>y:</code> cursor position column number</li>
          	</ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_set_cursor(cposx, cposy);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>
    
    <!-- -->

    <!-- kraj tabele -->

    <h3 id="t6963c_clearbit">T6963C_clearBit</h3>


    <!-- tabela: T6963C_ClearBit -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_clearBit(<b>unsigned int</b> b);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Clears control port bit(s).</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>b:</code> bit mask.  The function will clear bit <code>x</code> on control port if bit <code>x</code> in bit mask is set to 1.</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// clear bits 0 and 1 on control port</i>
T6963C_clearBit(0x0003);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>
    
    <!-- -->


    <h3 id="t6963c_setbit">T6963C_setBit</h3>


    <!-- tabela: T6963C_SetBit -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_setBit(<b>unsigned int</b> b);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
          	<p>Sets control port bit(s).</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>b:</code> bit mask.  The function will set bit <code>x</code> on control port if bit <code>x</code> in bit mask is set to 1.</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// set bits 0 and 1 on control port</i>
T6963C_setBit(0x0003);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>             

    <!-- kraj tabele -->
    
    <!-- -->


    <h3 id="t6963c_negbit">T6963C_negBit</h3>


    <!-- tabela: T6963C_NegBit -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_negBit(<b>unsigned int</b> b);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Negates control port bit(s).</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>b:</code> bit mask.  The function will negate bit <code>x</code> on control port if bit <code>x</code> in bit mask is set to 1.</li>
            </ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// negate bits 0 and 1 on control port</i>
T6963C_negBit(0x0003);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>
    
    <!-- -->


    <h3 id="t6963c_displaygrpanel">T6963C_displayGrPanel</h3>


    <!-- tabela: T6963C_DisplayGrPanel -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_displayGrPanel(<b>unsigned int</b> n);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Display selected graphic panel.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>n:</code> graphic panel number.  Valid values: <code>0</code> and <code>1</code>.</li>
           	</ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// display graphic panel 1</i>
T6963C_displayGrPanel(1);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>
    
    <!-- -->


    <h3 id="t6963c_displaytxtpanel">T6963C_displayTxtPanel</h3>


    <!-- tabela: T6963C_DisplayTxtPanel -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_displayTxtPanel(<b>unsigned int</b> n);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Display selected text panel.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>n:</code> text panel number. Valid values: <code>0</code> and <code>1</code>.</li>
           	</ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// display text panel 1<i>
T6963C_displayTxtPanel(1);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table> 
    
    <!-- -->


    <h3 id="t6963c_setgrpanel">T6963C_setGrPanel</h3>


    <!-- tabela: T6963C_SetGrPanel -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_setGrPanel(<b>unsigned int</b> n);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Compute start address for selected graphic panel and set appropriate internal pointers. All subsequent graphic operations will be preformed at this graphic panel.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>n:</code> graphic panel number.  Valid values: <code>0</code> and <code>1</code>.</li>
           	</ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// set graphic panel 1 as current graphic panel.</i> 
T6963C_setGrPanel(1);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>
    
    <!-- -->


    <h3 id="t6963c_settxtpanel">T6963C_setTxtPanel</h3>


    <!-- tabela: T6963C_SetTxtPanel -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_setTxtPanel(<b>unsigned int</b> n);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Compute start address for selected text panel and set appropriate internal pointers. All subsequent text operations will be preformed at this text panel.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>n:</code> text panel number.  Valid values: <code>0</code> and <code>1</code>.</li>
           	</ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// set text panel 1 as current text panel.</i> 
T6963C_setTxtPanel(1);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>
    
    <!-- -->


    <h3 id="t6963c_panelfill">T6963C_panelFill</h3>


    <!-- tabela: T6963C_PanelFill -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_panelFill(<b>unsigned char</b> v);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Fill current panel in full (graphic+text) with appropriate value (0 to clear).</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>v:</code> value to fill panel with.</li>
           	</ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>clear current panel</i>
T6963C_panelFill(0);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>
    
    <!-- -->


    <h3 id="t6963c_grfill">T6963C_grFill</h3>


    <!-- tabela: T6963C_GrFill -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_grFill(<b>unsigned char</b> v);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Fill current graphic panel with appropriate value (0 to clear).</p>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>v:</code> value to fill graphic panel with.</li>
          	</ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// clear current graphic panel</i> 
T6963C_grFill(0);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>
    
    <!-- -->


    <h3 id="t6963c_txtfill">T6963C_txtFill</h3>


    <!-- tabela: T6963C_TxtFill -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_txtFill(<b>unsigned char</b> v);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Fill current text panel with appropriate value (0 to clear).</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>v:</code> this value increased by 32 will be used to fill text panel.</li>
           	</ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// clear current text panel</i>
T6963C_txtFill(0);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>
    
    <!-- -->


    <h3 id="t6963c_cursor_height">T6963C_cursor_height</h3>


    <!-- tabela: T6963C_Cursor_Height -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_cursor_height(<b>unsigned char</b> n);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Set cursor size.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
          	<ul>
           		<li><code>n:</code> cursor height. Valid values: <code>0</code>..<code>7</code>.</li>
           	</ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
T6963C_cursor_height(7);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table> 
    
    <!-- -->


    <h3 id="t6963c_graphics">T6963C_graphics</h3>


    <!-- tabela: t6963c_graphics -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_graphics(<b>unsigned int</b> n);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Enable/disable graphic displaying.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>n:</code> graphic enable/disable parameter. Valid values: <code>0</code> (disable graphic dispaying) and <code>1</code> (enable graphic displaying).</li>
           	</ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// enable graphic displaying</i>
T6963C_graphics(1);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>
    
    <!-- -->


    <h3 id="t6963c_text">T6963C_text</h3>


    <!-- tabela: T6963C_Text -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_text(<b>unsigned int</b> n);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Enable/disable text displaying.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>n:</code> on/off parameter. Valid values: <code>0</code> (disable text displaying) and <code>1</code> (enable text displaying).</li>
           	</ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// enable text displaying</i> 
T6963C_text(1);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>                                                                       

    <!-- -->


    <h3 id="t6963c_cursor">T6963C_cursor</h3>


    <!-- tabela: T6963C_Cursor -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_cursor(<b>unsigned int</b> n);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Set cursor on/off.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>n:</code> on/off parameter. Valid values: <code>0</code> (set cursor off) and <code>1</code> (set cursor on).</li>
           	</ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// set cursor on</i>
T6963C_cursor(1);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table> 
    
    <!-- -->


    <h3 id="t6963c_cursor_blink">T6963C_cursor_blink</h3>


    <!-- tabela: T6963C_Cursor_Blink -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> T6963C_cursor_blink(<b>unsigned int</b> n);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Enable/disable cursor blinking.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
           	<ul>
           		<li><code>n:</code> cursor blinking enable/disable parameter. Valid values: <code>0</code> (disable cursor blinking) and <code>1</code> (enable cursor blinking).</li>
           	</ul>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Toshiba Glcd module needs to be initialized. See the <a href="#t6963c_init">T6963C_init</a> routine.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// enable cursor blinking</i> 
T6963C_cursor_blink(1);
</pre>

          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>     

    <!-- kraj tabele -->    

    <!-- -->

    <h3>Library Example</h3>

    <p>The following drawing demo tests advanced routines of the T6963C Glcd library.
		   Hardware configurations in this example are made for the LV-32MX v6 board and PIC32MX460F512L.</p>

<div class="example">
  <textarea style="display:none;"></textarea> 
  <span class="copytoclipboard"><a onclick="copyToClipboard(this); return false;" href="#"><img align="absmiddle" alt="Copy Code To Clipboard" src="img/copy_to_clipboard.gif" border="0" /><span class="clipboard_text">Copy Code To Clipboard</span></a></span>
</div>

<pre class="program">
<code><span class="cpp1-preprocessor">#include&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;__T6963C.h&quot;

</span><span class="cpp1-comment">//&nbsp;T6963C&nbsp;module&nbsp;connections
</span><span class="cpp1-reservedword">unsigned</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">long</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_dataPort</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">at</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">PORTD;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;DATA&nbsp;port
</span><span class="cpp1-reservedword">unsigned</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">long</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_cntlPort</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">at</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">PORTE;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;CTRL&nbsp;port

</span><span class="cpp1-identifier">sbit</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_ctrlwr</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">at</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">LATE2_bit;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;WR&nbsp;write&nbsp;signal
</span><span class="cpp1-identifier">sbit</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_ctrlrd</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">at</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">LATE1_bit;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;RD&nbsp;read&nbsp;signal
</span><span class="cpp1-identifier">sbit</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_ctrlcd</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">at</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">LATE0_bit;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;CD&nbsp;command/data&nbsp;signal
</span><span class="cpp1-identifier">sbit</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_ctrlrst</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">at</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">LATE4_bit;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;RST&nbsp;reset&nbsp;signal
</span><span class="cpp1-identifier">sbit</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_ctrlwr_Direction</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">at</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">TRISE2_bit;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;WR&nbsp;write&nbsp;signal
</span><span class="cpp1-identifier">sbit</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_ctrlrd_Direction</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">at</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">TRISE1_bit;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;RD&nbsp;read&nbsp;signal
</span><span class="cpp1-identifier">sbit</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_ctrlcd_Direction</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">at</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">TRISE0_bit;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;CD&nbsp;command/data&nbsp;signal
</span><span class="cpp1-identifier">sbit</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_ctrlrst_Direction</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">at</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">TRISE4_bit;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;RST&nbsp;reset&nbsp;signal

//&nbsp;Signals&nbsp;not&nbsp;used&nbsp;by&nbsp;library,&nbsp;they&nbsp;are&nbsp;set&nbsp;in&nbsp;main&nbsp;function
</span><span class="cpp1-identifier">sbit</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_ctrlce</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">at</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">LATE3_bit;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;CE&nbsp;signal
</span><span class="cpp1-identifier">sbit</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_ctrlfs</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">at</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">LATE6_bit;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;FS&nbsp;signal
</span><span class="cpp1-identifier">sbit</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_ctrlmd</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">at</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">LATE5_bit;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;MD&nbsp;signal
</span><span class="cpp1-identifier">sbit</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_ctrlce_Direction</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">at</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">TRISE3_bit;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;CE&nbsp;signal&nbsp;direction
</span><span class="cpp1-identifier">sbit</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_ctrlfs_Direction</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">at</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">TRISE6_bit;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;FS&nbsp;signal&nbsp;direction
</span><span class="cpp1-identifier">sbit</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_ctrlmd_Direction</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">at</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">TRISE5_bit;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;MD&nbsp;signal&nbsp;direction
//&nbsp;End&nbsp;T6963C&nbsp;module&nbsp;connections

/*
&nbsp;*&nbsp;bitmap&nbsp;pictures&nbsp;stored&nbsp;in&nbsp;ROM
&nbsp;*/
</span><span class="cpp1-reservedword">const</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">code</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">char</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">mikroE_240x128_bmp[];
</span><span class="cpp1-reservedword">const</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">code</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">char</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">einstein[];


</span><span class="cpp1-reservedword">void</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">main()</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-preprocessor">#define&nbsp;COMPLETE_EXAMPLE
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-preprocessor">#define&nbsp;LINE_DEMO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Uncomment&nbsp;to&nbsp;demonstrate&nbsp;line&nbsp;drawing&nbsp;routines
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-preprocessor">#define&nbsp;FILL_DEMO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Uncomment&nbsp;to&nbsp;demonstrate&nbsp;fill&nbsp;routines
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-preprocessor">#define&nbsp;PARTIAL_IMAGE_DEMO&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Uncomment&nbsp;to&nbsp;demonstrate&nbsp;partial&nbsp;image&nbsp;routine

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-reservedword">char</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">txt1[]</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-string">&quot;&nbsp;EINSTEIN&nbsp;WOULD&nbsp;HAVE&nbsp;LIKED&nbsp;mE&quot;</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-reservedword">char</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">txt[]</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-string">&quot;&nbsp;GLCD&nbsp;LIBRARY&nbsp;DEMO,&nbsp;WELCOME&nbsp;!&quot;</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-reservedword">char</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">txt2[]</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-string">&quot;Partial&nbsp;image&nbsp;demo!&quot;</span><span class="cpp1-symbol">;

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-reservedword">unsigned</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">char</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">panel;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Current&nbsp;panel
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-reservedword">unsigned</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">int</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">i;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;General&nbsp;purpose&nbsp;register
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-reservedword">unsigned</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">char</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">curs;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Cursor&nbsp;visibility
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-reservedword">unsigned</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">int</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">cposx,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">cposy;</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Cursor&nbsp;x-y&nbsp;position

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">CHECON</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-hexadecimal">0x32</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">AD1PCFG</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-hexadecimal">0xFFFF</span><span class="cpp1-symbol">;

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">TRISB8_bit</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">1</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Set&nbsp;RB8&nbsp;as&nbsp;input
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">TRISB9_bit</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">1</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Set&nbsp;RB9&nbsp;as&nbsp;input
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">TRISB10_bit</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">1</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Set&nbsp;RB10&nbsp;as&nbsp;input
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">TRISB11_bit</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">1</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Set&nbsp;RB11&nbsp;as&nbsp;input
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">TRISB12_bit</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">1</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Set&nbsp;RB12&nbsp;as&nbsp;input
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">TRISB13_bit</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">1</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Set&nbsp;RC13&nbsp;as&nbsp;input

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_ctrlce_Direction</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_ctrlce</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Enable&nbsp;T6963C
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_ctrlfs_Direction</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_ctrlfs</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Font&nbsp;Select&nbsp;8x8
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_ctrlmd_Direction</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_ctrlmd</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Column&nbsp;number&nbsp;select


</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Initialize&nbsp;T6963C
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_init(</span><span class="cpp1-number">240</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">128</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">8</span><span class="cpp1-symbol">);

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-comment">/*
&nbsp;&nbsp;&nbsp;*&nbsp;Enable&nbsp;both&nbsp;graphics&nbsp;and&nbsp;text&nbsp;display&nbsp;at&nbsp;the&nbsp;same&nbsp;time
&nbsp;&nbsp;&nbsp;*/
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_graphics(</span><span class="cpp1-number">1</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_text(</span><span class="cpp1-number">1</span><span class="cpp1-symbol">);

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">panel</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">i</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">curs</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">cposx</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">cposy</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-comment">/*
&nbsp;&nbsp;&nbsp;*&nbsp;Text&nbsp;messages
&nbsp;&nbsp;&nbsp;*/
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_write_text(txt,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_ROM_MODE_XOR);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_write_text(txt1,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">15</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_ROM_MODE_XOR);

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-comment">/*
&nbsp;&nbsp;&nbsp;*&nbsp;Cursor
&nbsp;&nbsp;&nbsp;*/
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_cursor_height(</span><span class="cpp1-number">8</span><span class="cpp1-symbol">);</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;8&nbsp;pixel&nbsp;height
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_set_cursor(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Move&nbsp;cursor&nbsp;to&nbsp;top&nbsp;left
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_cursor(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Cursor&nbsp;off

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-comment">/*
&nbsp;&nbsp;&nbsp;*&nbsp;Draw&nbsp;solid&nbsp;boxes
&nbsp;&nbsp;&nbsp;*/
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_box(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">239</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">8</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_box(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">119</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">239</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">127</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-comment">/*
&nbsp;&nbsp;&nbsp;*&nbsp;Draw&nbsp;rectangles
&nbsp;&nbsp;&nbsp;*/
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-preprocessor">#ifdef&nbsp;LINE_DEMO
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_rectangle(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">239</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">127</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_rectangle(</span><span class="cpp1-number">20</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">20</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">219</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">107</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_rectangle(</span><span class="cpp1-number">40</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">40</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">199</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">87</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_rectangle(</span><span class="cpp1-number">60</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">60</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">179</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">67</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-preprocessor">#endif

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-comment">/*
&nbsp;&nbsp;&nbsp;*&nbsp;Draw&nbsp;rounded&nbsp;edge&nbsp;rectangle
&nbsp;&nbsp;&nbsp;*/
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-preprocessor">#ifdef&nbsp;LINE_DEMO
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_Rectangle_Round_Edges(</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">229</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">117</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">12</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_Rectangle_Round_Edges(</span><span class="cpp1-number">30</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">30</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">209</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">97</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">12</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_Rectangle_Round_Edges(</span><span class="cpp1-number">50</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">50</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">189</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">77</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">12</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-preprocessor">#endif

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-comment">/*
&nbsp;&nbsp;&nbsp;*&nbsp;Draw&nbsp;filled&nbsp;rounded&nbsp;edge&nbsp;rectangle
&nbsp;&nbsp;&nbsp;*/
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-preprocessor">#ifdef&nbsp;FILL_DEMO
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_Rectangle_Round_Edges_Fill(</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">229</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">117</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">12</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_Rectangle_Round_Edges_Fill(</span><span class="cpp1-number">20</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">20</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">219</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">107</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">12</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_BLACK);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_Rectangle_Round_Edges_Fill(</span><span class="cpp1-number">30</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">30</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">209</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">97</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">12</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_Rectangle_Round_Edges_Fill(</span><span class="cpp1-number">40</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">40</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">199</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">87</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">12</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_BLACK);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_Rectangle_Round_Edges_Fill(</span><span class="cpp1-number">50</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">50</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">189</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">77</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">12</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-preprocessor">#endif

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-comment">/*
&nbsp;&nbsp;&nbsp;*&nbsp;Draw&nbsp;a&nbsp;cross
&nbsp;&nbsp;&nbsp;*/
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-preprocessor">#ifdef&nbsp;LINE_DEMO
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_line(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">239</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">127</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_line(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">127</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">239</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-preprocessor">#endif

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-comment">/*
&nbsp;&nbsp;&nbsp;*&nbsp;Draw&nbsp;circles
&nbsp;&nbsp;&nbsp;*/
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-preprocessor">#ifdef&nbsp;LINE_DEMO
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_circle(</span><span class="cpp1-number">120</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_circle(</span><span class="cpp1-number">120</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">30</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_circle(</span><span class="cpp1-number">120</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">50</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_circle(</span><span class="cpp1-number">120</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">70</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_circle(</span><span class="cpp1-number">120</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">90</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_circle(</span><span class="cpp1-number">120</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">110</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_circle(</span><span class="cpp1-number">120</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">130</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-preprocessor">#endif

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-comment">/*
&nbsp;&nbsp;&nbsp;*&nbsp;Draw&nbsp;filled&nbsp;circles
&nbsp;&nbsp;&nbsp;*/
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-preprocessor">#ifdef&nbsp;FILL_DEMO
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_circle_fill(</span><span class="cpp1-number">120</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">60</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_circle_fill(</span><span class="cpp1-number">120</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">55</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_BLACK);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_circle_fill(</span><span class="cpp1-number">120</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">50</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_circle_fill(</span><span class="cpp1-number">120</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">45</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_BLACK);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_circle_fill(</span><span class="cpp1-number">120</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">40</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_circle_fill(</span><span class="cpp1-number">120</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">35</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_BLACK);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_circle_fill(</span><span class="cpp1-number">120</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">30</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_circle_fill(</span><span class="cpp1-number">120</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">25</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_BLACK);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_circle_fill(</span><span class="cpp1-number">120</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">20</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_circle_fill(</span><span class="cpp1-number">120</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">15</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_BLACK);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_circle_fill(</span><span class="cpp1-number">120</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_WHITE);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_circle_fill(</span><span class="cpp1-number">120</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">5</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_BLACK);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-preprocessor">#endif

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">Delay_ms(</span><span class="cpp1-number">1000</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_sprite(</span><span class="cpp1-number">76</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">4</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">einstein,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">88</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">119</span><span class="cpp1-symbol">);</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Draw&nbsp;a&nbsp;sprite
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">Delay_ms(</span><span class="cpp1-number">1000</span><span class="cpp1-symbol">);

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_setGrPanel(</span><span class="cpp1-number">1</span><span class="cpp1-symbol">);</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Select&nbsp;other&nbsp;graphic&nbsp;panel

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_image(mikroE_240x128_bmp);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_displayGrPanel(</span><span class="cpp1-number">1</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">Delay_ms(</span><span class="cpp1-number">1000</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-preprocessor">#ifdef&nbsp;PARTIAL_IMAGE_DEMO
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_grFill(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_PartialImage(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">240</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">128</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">mikroE_240x128_bmp);</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Display&nbsp;partial&nbsp;image
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">Delay_ms(</span><span class="cpp1-number">1000</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_graphics(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-preprocessor">#endif
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_image(mikroE_240x128_bmp);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_graphics(</span><span class="cpp1-number">1</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_displayGrPanel(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-reservedword">for</span><span class="cpp1-symbol">(;;)</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">{</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Endless&nbsp;loop

</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">/*
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;If&nbsp;RB8&nbsp;is&nbsp;pressed,&nbsp;display&nbsp;only&nbsp;graphic&nbsp;panel
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(RB8_bit)</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_graphics(</span><span class="cpp1-number">1</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_text(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">Delay_ms(</span><span class="cpp1-number">300</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">/*
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;If&nbsp;RB9&nbsp;is&nbsp;pressed,&nbsp;toggle&nbsp;the&nbsp;display&nbsp;between&nbsp;graphic&nbsp;panel&nbsp;0&nbsp;and&nbsp;graphic&nbsp;panel&nbsp;1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">else</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(RB9_bit)</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">panel++;
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">panel</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">&amp;=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">1</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_displayGrPanel(panel);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">Delay_ms(</span><span class="cpp1-number">300</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-symbol">}

</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">/*
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;If&nbsp;RB10&nbsp;is&nbsp;pressed,&nbsp;display&nbsp;only&nbsp;text&nbsp;panel
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">else</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(RB10_bit)</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_graphics(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_text(</span><span class="cpp1-number">1</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">Delay_ms(</span><span class="cpp1-number">300</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-symbol">}

</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">/*
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;If&nbsp;RB11&nbsp;is&nbsp;pressed,&nbsp;display&nbsp;text&nbsp;and&nbsp;graphic&nbsp;panels
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">else</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(RB11_bit)</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_graphics(</span><span class="cpp1-number">1</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_text(</span><span class="cpp1-number">1</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">Delay_ms(</span><span class="cpp1-number">300</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">/*
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;If&nbsp;RB12&nbsp;is&nbsp;pressed,&nbsp;change&nbsp;cursor
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">else</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(RB12_bit)</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">curs++;
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(curs</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">==</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">3</span><span class="cpp1-symbol">)</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">curs</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">switch</span><span class="cpp1-symbol">(curs)</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">case</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">:
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;no&nbsp;cursor
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_cursor(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">case</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">1</span><span class="cpp1-symbol">:
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;blinking&nbsp;cursor
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_cursor(</span><span class="cpp1-number">1</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_cursor_blink(</span><span class="cpp1-number">1</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">case</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">2</span><span class="cpp1-symbol">:
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;non&nbsp;blinking&nbsp;cursor
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_cursor(</span><span class="cpp1-number">1</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_cursor_blink(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">Delay_ms(</span><span class="cpp1-number">300</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-symbol">}

</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-preprocessor">#ifdef&nbsp;PARTIAL_IMAGE_DEMO
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">/*
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;If&nbsp;RC13&nbsp;is&nbsp;pressed,&nbsp;perform&nbsp;the&nbsp;&quot;Partial&nbsp;image&quot;&nbsp;demostration
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">else</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(RB13_bit)</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_setGrPanel(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_setTxtPanel(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_txtFill(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_setGrPanel(</span><span class="cpp1-number">1</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_setTxtPanel(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_graphics(</span><span class="cpp1-number">1</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_text(</span><span class="cpp1-number">1</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_displayGrPanel(</span><span class="cpp1-number">1</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_write_text(txt2,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">5</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">15</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_ROM_MODE_XOR);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">Delay_1sec();
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_grFill(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_PartialImage(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">64</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">240</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">128</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">mikroE_240x128_bmp);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">Delay_1sec();
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_PartialImage(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">128</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">128</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">240</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">128</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">mikroE_240x128_bmp);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">Delay_1sec();
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_PartialImage(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">240</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">128</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">240</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">128</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">mikroE_240x128_bmp);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">Delay_1sec();
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_txtFill(</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_write_text(txt,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_ROM_MODE_XOR);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_write_text(txt1,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">15</span><span class="cpp1-symbol">,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_ROM_MODE_XOR);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-preprocessor">#endif

</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">/*
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Move&nbsp;cursor,&nbsp;even&nbsp;if&nbsp;not&nbsp;visible
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">cposx++;
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(cposx</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">==</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_txtCols)</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">cposx</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">cposy++;
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(cposy</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">==</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_grHeight</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">/</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">T6963C_CHARACTER_HEIGHT)</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">cposy</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">T6963C_set_cursor(cposx,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">cposy);

</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">Delay_ms(</span><span class="cpp1-number">100</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-symbol">}
}
</span></code>
</pre>


    <!-- -->


    <h3>HW Connection</h3>

    <p class="center"><img alt="T6963C Glcd HW connection" src="img/Schemes/scheme_t6963.gif"></p>
    <p class="center small">T6963C Glcd HW connection</p>


    <div class="feedback">
            Copyright (c) 2002-2017 mikroElektronika. All rights reserved.
      <br>What do you think about this topic ?  <a href="http://www.mikroe.com/en/support/">Send us feedback!</a>
    </div>

      <div class="libstock">Want more examples and libraries?&nbsp;
     <br>Find them on
     <a href="http://www.libstock.com/" target="_blank"><img alt="LibStock - A place for the code" src="img/libstock.gif" border="0" align="absmiddle"></a>
    </div>

  </div><!--/main-->




</body>

</html>
