
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<head>

<title>Keypad Library</title>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="Copyright" content="mikroElektronika 2006.">
<meta name="Author" content="Marko Jovanovic. mailto:office@mikroe.com">

<link rel="stylesheet" type="text/css" href="css/help_c_pic32.css">

<script defer type="text/javascript" src="css/pngfix.js"></script>


	






<style type="text/css">
#top {
  background:transparent url(template/background_c_PIC32.png); 
}

.title{
	PADDING-RIGHT: 2px; 
	PADDING-LEFT: 70px; 
	FONT-WEIGHT: bold; 
	FONT-SIZE: 14px; 
	PADDING-BOTTOM: 3px; 
	PADDING-TOP: 0px; 
	FONT-FAMILY: Verdana;
  color:white;
}

.navigation{
                     PADDING-TOP: -5px;
	PADDING-RIGHT: 2px; 
	PADDING-LEFT: 63px; 
	FONT-SIZE: 11px; 
	FONT-FAMILY: Verdana;
                     color:white;
}

.navigation a:link {text-decoration: none; color: white;}
.navigation a:visited {text-decoration: none; color: white;}
.navigation a:active {text-decoration: none; color: white;}
.navigation a:hover {text-decoration: none; color: white; background:black;}

.nav_bar {
}

#top td p,td pre {
	margin:0 0 0 0;
}
</style>

<style type="text/css" media="screen">
#main{
	border-top: 1px solid #000000;
    padding-left: 15px;
    padding-right: 15px;
	position: absolute;
	top: 59px;
	right: 0px;
	bottom: 0px;
	left: 0px;

	width: expression(document.body.offsetWidth - 3);
	height: expression(document.body.offsetHeight -  65);
	overflow: auto;
}
</style>

</head>


<body>

<div id="top">
<table height="60" width="100%">
  <tbody>
	  <tr>
		  <td>
			  <pre class="nav_bar"><div class="title">Keypad Library</div><div class="navigation">&nbsp;&nbsp;<A href="mikroc_libraries.htm">mikroC PRO for PIC32 Libraries</A> &gt; <A href="mikroC_hardware_libraries.htm">Hardware Libraries</A> &gt; </div></pre>
			</td>
		  <td style="WIDTH: 120px" align="right">
			  <pre class="nav_bar"><A href="i2c_library.htm" title="Previous"><img src="template\btn_prev_n.png" border="0"></a>&nbsp;<A title="Top of the Page" href="#top_of_page" alt="Top of the Page"><IMG src="template/btn_up_n.png" border=0 ></a>&nbsp;<A href="lcd_library.htm" title="Next"><img src="template\btn_next_n.png" border="0"></a></pre>
			</td>
		</tr>
	</tbody>
</table>
</div>

	


  <div id="main">


    <a name="top_of_page"><h2>Keypad Library</h2></a>


    <p>The mikroC PRO for PIC32 provides a library for working with 4x4 keypad. 
    	The library routines can also be used with 4x1, 4x2, or 4x3 keypad. 
    	For connections explanation see schematic at the bottom of this page.</p>

    <!-- -->

    <h3>External dependencies of Keypad Library</h3>


    <!-- tabela: Ext_depend -->

    <table class="Dependencies" width="75%">

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="40%">The following variable must be defined in all projects using Keypad Library:</th>
          <th width="30%">Description : </th>
          <th width="30%">Example : </th>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td valign="center"><code><b>extern sfr atomic unsigned long</b> keypadPort;</code></td>
          <td valign="center">Keypad Port.</td>
          <td valign="center"><code><b>unsigned</b> keypadPort <b>at</b> PORTB;</code></td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <td valign="center"><code><b>extern sfr atomic unsigned long</b> keypadPort_Direction;</code></td>
          <td valign="center">Keypad Port direction.</td>
          <td valign="center"><code><b>unsigned</b> keypadPort_Direction <b>at</b> TRISB;</code></td>
        </tr>
        
      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3>Library Routines</h3>

    <ul>
      <li><a href="#keypad_init">Keypad_Init</a></li>
      <li><a href="#keypad_key_press">Keypad_Key_Press</a></li>
      <li><a href="#keypad_key_click">Keypad_Key_Click</a></li>
    </ul>


    <!-- -->


    <h3 id="keypad_init">Keypad_Init</h3>

    <!-- tabela: Keypad_Init -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>void</b> Keypad_Init();</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Initializes given port for working with keypad.</p>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
          Global variable :
          <ul>
            <li><code>keypadPort</code> - Keypad port   
          </ul>
          must be defined before using this function.
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<i>// Keypad module connections</i>
<b>char</b> unsigned <b>at</b> PORTB;
<i>// End of keypad module connections</i>
...
Keypad_Init();</pre>

          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>The Keypad library uses lower byte (bits <7..0>) of <code>keypadPort</code>.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="keypad_key_press">Keypad_Key_Press</h3>


    <!-- tabela: Keypad_Read -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>unsigned</b> Keypad_Key_Press();</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Reads the key from keypad when key gets pressed.</p>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>The code of a pressed key (1..16).</p>
            <p>If no key is pressed, returns 0.</p>            
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Port needs to be initialized for working with the Keypad library, see <a href="#keypad_init">Keypad_Init</a>.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<b>unsigned</b> kp;
...
kp = Keypad_Key_Press();</pre>

          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3 id="keypad_key_click">Keypad_Key_Click</h3>


    <!-- tabela: Keypad_Released -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p><b>unsigned</b> Keypad_Key_Click();</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Call to <code>Keypad_Key_Click</code> is a blocking call: the function waits until some key is pressed and released. When released, the function returns 1 to 16, depending on the key.
            	If more than one key is pressed simultaneously the function will wait until all pressed keys are released.
            	 After that the function will return the code of the first pressed key.</p>
          </td>
        </tr>
     
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Parameters</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>The code of a clicked key (1..16).</p>
            <p>If no key is clicked, returns 0.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Port needs to be initialized for working with the Keypad library, see <a href="#keypad_init">Keypad_Init</a>.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>kp = Keypad_Key_Click();</pre>

          </td>
        </tr>
       
        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Notes</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>  

      </tbody>

    </table>

    <!-- kraj tabele -->


    <!-- -->


    <h3>Library Example</h3>
    <p>The following code can be used for testing the keypad. It is written for keypad_4x3 or _4x4.  The code returned by the keypad functions (1..16) is transformed into ASCII codes [0..9,A..F], and then sent via UART1.</p>

<div class="example">
  <textarea style="display:none;"></textarea> 
  <span class="copytoclipboard"><a onclick="copyToClipboard(this); return false;" href="#"><img align="absmiddle" alt="Copy Code To Clipboard" src="img/copy_to_clipboard.gif" border="0" /><span class="clipboard_text">Copy Code To Clipboard</span></a></span>
</div>

<pre class="program">
<code><span class="cpp1-reservedword">unsigned</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">short</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">kp,</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">oldstate</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-reservedword">char</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">txt[</span><span class="cpp1-number">6</span><span class="cpp1-symbol">];

</span><span class="cpp1-comment">//&nbsp;Keypad&nbsp;module&nbsp;connections
</span><span class="cpp1-reservedword">unsigned</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">long</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">keypadPort</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">at</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">PORTD;
</span><span class="cpp1-reservedword">unsigned</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">long</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">keypadPort_Direction</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">at</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">TRISD;
</span><span class="cpp1-comment">//&nbsp;End&nbsp;Keypad&nbsp;module&nbsp;connections

</span><span class="cpp1-reservedword">void</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">main()</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">AD1PCFG</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-hexadecimal">0xFFFF</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">CHECON</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-hexadecimal">0x32</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">UART1_Init(</span><span class="cpp1-number">19200</span><span class="cpp1-symbol">);</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Initialize&nbsp;UART&nbsp;module&nbsp;at&nbsp;9600&nbsp;bps
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">Delay_ms(</span><span class="cpp1-number">10</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">Keypad_Init();</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Initialize&nbsp;Keypad
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">UART1_Write_Text(</span><span class="cpp1-string">&quot;Press&nbsp;any&nbsp;key&nbsp;on&nbsp;your&nbsp;keypad...&quot;</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">UART1_Write(</span><span class="cpp1-number">10</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">UART1_Write(</span><span class="cpp1-number">13</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-identifier">LATD</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;

</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-reservedword">do</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">kp</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Reset&nbsp;key&nbsp;code&nbsp;variable

</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Wait&nbsp;for&nbsp;key&nbsp;to&nbsp;be&nbsp;pressed&nbsp;and&nbsp;released
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">do
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;kp&nbsp;=&nbsp;Keypad_Key_Press();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Store&nbsp;key&nbsp;code&nbsp;in&nbsp;kp&nbsp;variable
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">kp</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">Keypad_Key_Click();</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Store&nbsp;key&nbsp;code&nbsp;in&nbsp;kp&nbsp;variable
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">while</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">(!kp);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Prepare&nbsp;value&nbsp;for&nbsp;output,&nbsp;transform&nbsp;key&nbsp;to&nbsp;it's&nbsp;ASCII&nbsp;value
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">switch</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">(kp)</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//case&nbsp;10:&nbsp;kp&nbsp;=&nbsp;42;&nbsp;break;&nbsp;&nbsp;//&nbsp;'*'&nbsp;&nbsp;&nbsp;//&nbsp;Uncomment&nbsp;this&nbsp;block&nbsp;for&nbsp;keypad4x3
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//case&nbsp;11:&nbsp;kp&nbsp;=&nbsp;48;&nbsp;break;&nbsp;&nbsp;//&nbsp;'0'
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//case&nbsp;12:&nbsp;kp&nbsp;=&nbsp;35;&nbsp;break;&nbsp;&nbsp;//&nbsp;'#'
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//default:&nbsp;kp&nbsp;+=&nbsp;48;

</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">case</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-number">1</span><span class="cpp1-symbol">:</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">kp</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">49</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-comment">//&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Uncomment&nbsp;this&nbsp;block&nbsp;for&nbsp;keypad4x4
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">case</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-number">2</span><span class="cpp1-symbol">:</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">kp</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">50</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-comment">//&nbsp;2
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">case</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-number">3</span><span class="cpp1-symbol">:</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">kp</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">51</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-comment">//&nbsp;3
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">case</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-number">4</span><span class="cpp1-symbol">:</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">kp</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">65</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-comment">//&nbsp;A
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">case</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-number">5</span><span class="cpp1-symbol">:</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">kp</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">52</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-comment">//&nbsp;4
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">case</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-number">6</span><span class="cpp1-symbol">:</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">kp</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">53</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-comment">//&nbsp;5
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">case</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-number">7</span><span class="cpp1-symbol">:</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">kp</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">54</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-comment">//&nbsp;6
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">case</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-number">8</span><span class="cpp1-symbol">:</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">kp</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">66</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-comment">//&nbsp;B
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">case</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-number">9</span><span class="cpp1-symbol">:</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">kp</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">55</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-comment">//&nbsp;7
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">case</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">10</span><span class="cpp1-symbol">:</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">kp</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">56</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-comment">//&nbsp;8
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">case</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">11</span><span class="cpp1-symbol">:</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">kp</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">57</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-comment">//&nbsp;9
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">case</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">12</span><span class="cpp1-symbol">:</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">kp</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">67</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-comment">//&nbsp;C
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">case</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">13</span><span class="cpp1-symbol">:</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">kp</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">42</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-comment">//&nbsp;*
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">case</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">14</span><span class="cpp1-symbol">:</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">kp</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">48</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-comment">//&nbsp;0
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">case</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">15</span><span class="cpp1-symbol">:</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">kp</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">35</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-comment">//&nbsp;#
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-reservedword">case</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">16</span><span class="cpp1-symbol">:</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-identifier">kp</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">=</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-number">68</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-comment">//&nbsp;D

</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">UART1_Write_Text(</span><span class="cpp1-string">&quot;Key&nbsp;pressed:&nbsp;&quot;</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">UART1_Write(kp);</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-comment">//&nbsp;Send&nbsp;value&nbsp;of&nbsp;pressed&nbsp;button&nbsp;to&nbsp;UART
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">UART1_Write(</span><span class="cpp1-number">10</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="cpp1-identifier">UART1_Write(</span><span class="cpp1-number">13</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">&nbsp;&nbsp;</span><span class="cpp1-symbol">}</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-reservedword">while</span><span class="cpp1-space">&nbsp;</span><span class="cpp1-symbol">(</span><span class="cpp1-number">1</span><span class="cpp1-symbol">);
}
</span></code>
</pre>


    <!-- -->


    <h3>HW Connection</h3>

    <p class="center"><img alt="4x4 Keypad connection scheme" src="img/Schemes/scheme_keypad4x4.gif"></p>
    <p class="center small">4x4 Keypad connection scheme</p>


    <div class="feedback">
            Copyright (c) 2002-2017 mikroElektronika. All rights reserved.
      <br>What do you think about this topic ?  <a href="http://www.mikroe.com/en/support/">Send us feedback!</a>
    </div>

      <div class="libstock">Want more examples and libraries?&nbsp;
     <br>Find them on
     <a href="http://www.libstock.com/" target="_blank"><img alt="LibStock - A place for the code" src="img/libstock.gif" border="0" align="absmiddle"></a>
    </div>

  </div><!--/main-->




</body>

</html>
