
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html>

<head>

<title>Flash Memory Library</title>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="Copyright" content="mikroElektronika 2005.">
<meta name="Author" content="Nikola Topalovic. mailto:office@mikroelektronika.co.yu">

<link rel="stylesheet" type="text/css" href="css/help_c_PIC.css">
<script defer type="text/javascript" src="css/pngfix.js"></script>


	






<link rel="stylesheet" type="text/css" href="css/print.css" media="print">


<style type="text/css">
#top {
  background:transparent url(template/background_PIC.png); 
}

.title{
	PADDING-RIGHT: 2px; 
	PADDING-LEFT: 70px; 
	FONT-WEIGHT: bold; 
	FONT-SIZE: 14px; 
	PADDING-BOTTOM: 3px; 
	PADDING-TOP: 0px; 
	FONT-FAMILY: Verdana;
  color:white;
}

.navigation{
                     PADDING-TOP: -5px;
	PADDING-RIGHT: 2px; 
	PADDING-LEFT: 63px; 
	FONT-SIZE: 11px; 
	FONT-FAMILY: Verdana;
                     color:white;
}

.navigation a:link {text-decoration: none; color: white;}
.navigation a:visited {text-decoration: none; color: white;}
.navigation a:active {text-decoration: none; color: white;}
.navigation a:hover {text-decoration: none; color: white; background:black;}

.nav_bar {
}

#top td p,td pre {
	margin:0 0 0 0;
}
</style>

<style type="text/css" media="screen">
#main{
	border-top: 1px solid #000000;
  padding-left: 15px;
  padding-right: 15px;
	position: absolute;
	top: 59px;
	right: 0px;
	bottom: 0px;
	left: 0px;

	width: expression(document.body.offsetWidth - 3);
	height: expression(document.body.offsetHeight -  65);
	overflow: auto;
}
</style>

</head>


<body>

<div id="top">
<table height="60" width="100%">
  <tbody>
	  <tr>
		  <td>
			  <pre class="nav_bar"><div class="title">Flash Memory Library</div><div class="navigation">&nbsp;&nbsp;<A href="index.htm">mikroC PRO for PIC Libraries</A> &gt; <A href="mikroC_PRO_hardware_libraries.htm">Hardware Libraries</A> &gt; </div></pre>
			</td>
		  <td style="WIDTH: 120px" align="right">
			  <pre class="nav_bar"><A href="ethernet_j60_library.htm" title="Previous"><img src="template\btn_prev_n.png" border="0"></a>&nbsp;<A title="Top of the Page" href="#top_of_page" alt="Top of the Page"><IMG src="template/btn_up_n.png" border=0 ></a>&nbsp;<A href="ft5xx6_library.htm" title="Next"><img src="template\btn_next_n.png" border="0"></a></pre>
			</td>
		</tr>
	</tbody>
</table>
</div>

	


  <div id="main">

    <a name="top_of_page"><h2>Flash Memory Library</h2></a>


    <p>This library provides routines for accessing microcontroller Flash memory. Note that prototypes differ for PIC16 and PIC18 families.</p>
    <div style="border: 1.00pt solid #cccccc; padding: 5.00pt; background: #f5f2ec">	  
      <img src="img/note.gif" align="absmiddle"><b>&nbsp;&nbsp;Important :</b>
      Due to the P16/P18 family flash specifics, flash library is MCU dependent. Since the P18 family differ significantlly in number of bytes that can be erased and/or written to specific MCUs, the appropirate suffix is added to the names of functions in order to make it easier to use them. 
    </div>
    <p>Flash memory operations are MCU dependent :</p>
    <ol>
      <li><b>Read</b> operation supported. For this group of MCU's only read function is implemented.</li>
    	<li><b>Read</b> and <b>Write</b> operations supported (write is executed as erase-and-write). For this group of MCU's read and write functions are implemented. Note that write operation which is executed as erase-and-write, may write less bytes than it erases.</li>
    	<li><b>Read</b>, <b>Write</b> and <b>Erase</b> operations supported. For this group of MCU's read, write and erase functions are implemented. Further more, flash memory block has to be erased prior to writting (write operation is not executed as erase-and-write).</li>		
    </ol>
    <p>Please refer to MCU datasheet before using flash library.</p>


    <!-- -->


    <h3>Library Routines</h3>

    <ul>
      <li><a href="#flash_read">FLASH_Read</a></li>
      <li><a href="#flash_read_n_bytes">FLASH_Read_N_Bytes</a></li>
      <li><a href="#flash_write">FLASH_Write</a></li>
      <li><a href="#flash_write">FLASH_Write_8</a></li>
      <li><a href="#flash_write">FLASH_Write_16</a></li>
      <li><a href="#flash_write">FLASH_Write_32</a></li>
      <li><a href="#flash_write">FLASH_Write_64</a></li>
      <li><a href="#flash_erase">FLASH_Erase</a></li>
      <li><a href="#flash_erase">FLASH_Erase_64</a></li>
      <li><a href="#flash_erase">FLASH_Erase_1024</a></li>
      <li><a href="#flash_erase_write">FLASH_Erase_Write</a></li>
      <li><a href="#flash_erase_write">FLASH_Erase_Write_64</a></li>
      <li><a href="#flash_erase_write">FLASH_Erase_Write_1024</a></li>
    </ul>


    <!-- -->


    <h3 id="flash_read">FLASH_Read</h3>


    <!-- tabela: FLASH_Read -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p>
              <i>// for PIC16</i><br>
              <b>unsigned</b> FLASH_Read(<b>unsigned</b> address);
            </p>
            <p>
              <i>// for PIC18</i><br>
              <b>unsigned short</b> FLASH_Read(<b>long</b> address);
            </p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Returns data byte from Flash memory.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Reads data from the specified <code>address</code> in Flash memory.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre><i>// for PIC18</i>
<b>unsigned short</b> tmp;
...
tmp = FLASH_Read(0x0D00);
...</pre>

          </td>
        </tr>

      </tbody>

    </table>

    <!-- kraj tabele -->
    
 <!-- -->


 <h3 id="flash_read_n_bytes">FLASH_Read_N_Bytes</h3>
 <!-- tabela: FLASH_Read_N -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p>
              <b>void</b> FLASH_Read_N_Bytes(<b>long</b> address, <b>char*</b> data_, <b>unsigned int</b> N);
            </p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Reads N data from the specified <code>address</code> in Flash memory  to varibale pointed by <code>data</code></p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
FLASH_Read_N(0x0D00,data_buffer,sizeof(data_buffer));</pre>

          </td>
        </tr>

      </tbody>

    </table>

    <!-- kraj tabele -->

    <!-- -->


   <h3 id="flash_write">FLASH_Write</h3>


    <!-- tabela: FLASH_Write -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
            <p>
              <i>// for PIC16</i><br>
              <b>void</b> FLASH_Write(<b>unsigned</b> address, <b>unsigned int</b>* data);
            </p>
              <i>// for PIC18</i><br>
              <p><b>void</b> FLASH_Write_8(<b>long</b> address, <b>char*</b> data);</p>
              <p><b>void</b> FLASH_Write_16(<b>long</b> address, <b>char*</b> data);</p>
              <p><b>void</b> FLASH_Write_32(<b>long</b> address, <b>char*</b> data);</p>
              <p><b>void</b> FLASH_Write_64(<b>long</b> address, <b>char*</b> data);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Writes block of data to Flash memory. Block size is MCU dependent.                                    
            	<p><b>P16:</b> This function may erase memory segment before writing block of data to it (MCU dependent). Furthermore, memory segment which will be erased may be greater than the size of the data block that will be written (MCU dependent). 
                            Therefore it is recommended to write as many bytes as you erase. FLASH_Write writes 4 flash memory locations in a row, so it needs to be called as many times as it is necessary to meet the size of the data block
                             that will be written.</p>
            	<p><b>P18:</b> This function does not perform erase prior to write.</p>
            </p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Flash memory that will be written may have to be erased before this function is called (MCU dependent). Refer to MCU datasheet for details.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
            <p>Write consecutive values in 64 consecutive locations, starting from 0x0D00:</p>

<pre>
<b>unsigned short</b> toWrite[64];
...
<i>// initialize array:</i>
<b>for</b> (i = 0; i &#60; 64; i++)
  toWrite[i] = i;

<i>// write contents of the array to the address 0x0D00:</i>
FLASH_Write_64(0x0D00, toWrite);</pre>

          </td>
        </tr>

      </tbody>

    </table>

    <!-- kraj tabele -->

    <!-- -->



    <h3 id="flash_erase">FLASH_Erase</h3>


    <!-- tabela: FLASH_Erase -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">
          	<i>// for PIC16</i><br>
            <p><b>void</b> FLASH_Erase(<b>unsigned</b> address);</p>
            <i>// for PIC18</i><br>
            <p><b>void</b> FLASH_Erase_64(<b>long</b> address);</p>
            <p><b>void</b> FLASH_Erase_1024(<b>long</b> address);</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Erases memory block starting from a given address. For P16 familly is implemented only for those MCU's whose flash memory does not support erase-and-write operations (refer to datasheet for details).</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">
            <p>Erase 64 byte memory memory block, starting from address 0x0D00:</p>

<pre>FLASH_Erase_64(0x0D00);</pre>

          </td>
        </tr>

      </tbody>

    </table>

    <!-- kraj tabele -->

    <!-- -->
 
 
   
    <h3 id="flash_erase_write">FLASH_Erase_Write</h3>
 <!-- tabela: FLASH_Erase_Write -->

    <table class="routine" width="100%">

      <!--
      <caption></caption>

      <thead></thead>
      -->

      <tbody>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th width="0" valign="top">Prototype</th>
          <td class="code" width="100%" valign="top">            
              <i>// for PIC18</i><br>
              <p><b>void</b> FLASH_Erase_Write_64(<b>long</b> address, char* data);</p>
              <p><b>void</b> FLASH_Erase_Write_1024(<b>long</b> address, char* data);</p>            
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Returns</th>
          <td valign="top">
            <p>None.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Description</th>
          <td valign="top">
            <p>Erase then write memory block starting from a given address.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Requires</th>
          <td valign="top">
            <p>Nothing.</p>
          </td>
        </tr>

        <tr style="background:'white'" onmouseover="this.style.background='#f8f8f8';" onmouseout="this.style.background='white';">
          <th valign="top">Example</th>
          <td valign="top">

<pre>
<b>char</b> toWrite[64];
<b>int</b> i;
...
<i>// initialize array:</i>
<b>for</b>(i=0; i&#60;64; i++) toWrite[i]=i;

<i>// erase block of memory at address 0x0D00 then write contents of the array to the address 0x0D00:</i>
FLASH_Erase_Write_64(0x0D00, toWrite);
</pre>

          </td>
        </tr>

      </tbody>

    </table>

    <!-- kraj tabele -->

    <!-- -->    


    <h3>Library Example</h3>

    <p>The example demonstrates simple write to the flash memory for PIC16F887, then reads the data and displays it on PORTB and PORTC.</p>

<div class="example">
  <textarea style="display:none;"></textarea> 
  <span class="copytoclipboard"><a onclick="copyToClipboard(this); return false;" href="#"><img align="absmiddle" alt="Copy Code To Clipboard" src="img/copy_to_clipboard.png" border="0" /><span class="clipboard_text">Copy Code To Clipboard</span></a></span>
</div>

<pre class="program">
<b>char</b> i = 0;
<b>unsigned int</b> addr, data_, dataAR[4][4] = {{0x3FAA+0,  0x3FAA+1,  0x3FAA+2,  0x3FAA+3},
                                          {0x3FAA+4,  0x3FAA+5,  0x3FAA+6,  0x3FAA+7},
                                          {0x3FAA+8,  0x3FAA+9,  0x3FAA+10, 0x3FAA+11},
                                          {0x3FAA+12, 0x3FAA+13, 0x3FAA+14, 0x3FAA+15}};

<b>void</b> main() {
  ANSEL  = 0;                         <i>// Configure AN pins as digital</i>
  ANSELH = 0;
  C1ON_bit = 0;                       <i>// Disable comparators</i>
  C2ON_bit = 0;
  PORTB = 0;                          <i>// Initial PORTB value</i>
  TRISB = 0;                          <i>// Set PORTB as output</i>
  PORTC = 0;                          <i>// Initial PORTC value</i>
  TRISC = 0;                          <i>// Set PORTC as output</i>
  Delay_ms(500);

  <i>// All block writes</i>
  <i>// to program memory are done as 16-word erase by</i>
  <i>// eight-word write operations. The write operation is</i>
  <i>// edge-aligned and cannot occur across boundaries.</i>
  <i>// Therefore it is recommended to perform flash writes in 16-word chunks.</i>
  <i>// That is why lower 4 bits of start address [3:0] must be zero.</i>
  <i>// Since FLASH_Write routine performs writes in 4-word chunks,</i>
  <i>// we need to call it 4 times in a row.</i>
  addr = 0x0430;                      <i>// starting Flash address, valid for P16F887</i>
  <b>for</b> (i = 0; i &#60; 4; i++){            <i>// Write some data to Flash</i>
    Delay_ms(100);
    FLASH_Write(addr+i*4, dataAR[i]);
  }
  Delay_ms(500);

  addr = 0x0430;
  <b>for</b> (i = 0; i &#60; 16; i++){
    data_ = FLASH_Read(addr++);       <i>// P16's FLASH is 14-bit wide, so</i>
    Delay_us(10);                     <i>//   two MSB's will always be '00'</i>
    PORTB = data_;                    <i>// Display data on PORTB (LS Byte)</i>
    PORTC = data_ &#62;&#62; 8;               <i>// and PORTC (MS Byte)</i>
    Delay_ms(500);
  }
}</pre>



      <div class="feedback">
      Copyright (c) 2002-2019 mikroElektronika. All rights reserved.
      <br>What do you think about this topic ?  <a href="https://helpdesk.mikroe.com/conversation/new/3" target="_blank">Send us feedback!</a>
    </div>

    <div class="libstock">Want more examples and libraries?&nbsp;
     <br>Find them on
     <a href="http://www.libstock.com/" target="_blank"><img alt="LibStock - A place for the code" src="img/libstock.gif" border="0" align="absmiddle"></a>
    </div>

  </div><!--/main-->




</body>

</html>
